apiVersion: argoproj.io/v1alpha1
kind: Workflow
metadata:
  generateName: kubeflow-train-
spec:
  entrypoint: workflow
  arguments:
    parameters:
    - name: version
      value: 0.1
    - name: project
      value: kubeflow-rl
    - name: github-user
      value: SeldonIO
    - name: docker-user
      value: seldonio
    - name: tfjob-version-hack
      value: 1
    - name: tf-image-tag
      value: 1.4.1
  templates:
  - name: workflow
    steps:
    - - name: build-push
        template: build-and-push
  - name: build-and-push
    inputs:
      artifacts:
      - name: argo-source
        path: /app
        git:
          repo: https://github.com/cwbeitel/examples.git
          revision: "master"
    container:
      image: gcr.io/kubeflow-rl/builder:0.1
      command: [bash,-c]
      args: ["until docker ps; do sleep 3; done; docker pull tensorflow/tensorflow:1.4.1; cd /app/agents/; cat Dockerfile; TAG=gcr.io/{{workflow.parameters.project}}/dummy:{{workflow.parameters.version}}; sed s/{tensorflow_image_tag}/{{workflow.parameters.tf-image-tag}}/g Dockerfile > /app/agents/Dockerfile.temp; cat Dockerfile.temp; docker build -t $TAG -f Dockerfile.temp .; gcloud docker -- push $TAG"]
      env:
      - name: DOCKER_HOST               #the docker daemon can be access on the standard port on localhost
        value: 127.0.0.1
    sidecars:
    - name: dind
      image: docker:17.10-dind          #Docker already provides an image for running a Docker daemon
      securityContext:
        privileged: true                #the Docker daemon can only run in a privileged container
      mirrorVolumeMounts: true
