{
  properties: {
    apiVersion: {
      type: 'string',
    },
    kind: {
      type: 'string',
    },
    metadata: {
      properties: {
        name: {
          type: 'string',
        },
        labels: {
          type: 'object',
        },
        namespace: {
          type: 'string',
        },
        annotations: {
          type: 'object',
        },
      },
    },
    spec: {
      required: [
        'template',
      ],
      properties: {
        template: {
          properties: {
            spec: {
              required: [
                'containers',
                'ttlSecondsAfterFinished',
              ],
              properties: {
                securityContext: {
                  properties: {
                    runAsNonRoot: {
                      type: 'boolean',
                    },
                    fsGroup: {
                      type: 'integer',
                      format: 'int64',
                    },
                    runAsUser: {
                      type: 'integer',
                      format: 'int64',
                    },
                    supplementalGroups: {
                      items: {
                        type: 'integer',
                        format: 'int64',
                      },
                      type: 'array',
                    },
                  },
                },
                lifecycle: {
                  properties: {
                    preStop: {
                      properties: {
                        httpGet: {
                          required: [
                            'port',
                          ], 
                          properties: {
                            path: {
                              type: 'string',
                            }, 
                            host: {
                              type: 'string',
                            }, 
                            scheme: {
                              type: 'string',
                            }, 
                            httpHeaders: {
                              items: {
                                required: [
                                  'name', 
                                  'value',
                                ], 
                                properties: {
                                  name: {
                                    type: 'string', 
                                  }, 
                                  value: {
                                    type: 'string', 
                                  },
                                },
                              }, 
                              type: 'array',
                            }, 
                            port: {
                              oneOf: [
                                {
                                  type: 'string',
                                }, 
                                {
                                  type: 'integer',
                                },
                              ],
                            },
                          },
                        }, 
                        tcpSocket: {
                          required: [
                            'port',
                          ], 
                          properties: {
                            host: {
                              type: 'string',
                            }, 
                            port: {
                              oneOf: [
                                {
                                  type: 'string'
                                }, 
                                {
                                  type: 'integer',
                                }
                              ]
                            }
                          }
                        }, 
                        exec: {
                          properties: {
                            command: {
                              items: {
                                type: 'string',
                              }, 
                              type: 'array',
                            },
                          },
                        },
                      },
                    }, 
                    postStart: {
                      properties: {
                        httpGet: {
                          required: [
                            'port',
                          ], 
                          properties: {
                            path: {
                              type: 'string',
                            }, 
                            host: {
                              type: 'string',
                            }, 
                            scheme: {
                              type: 'string',
                            }, 
                            httpHeaders: {
                              items: {
                                required: [
                                  'name', 
                                  'value',
                                ], 
                                properties: {
                                  name: {
                                    type: 'string',
                                  }, 
                                  value: {
                                    type: 'string',
                                  },
                                },
                              }, 
                              type: 'array',
                            }, 
                            port: {
                              oneOf: [
                                {
                                  type: 'string',
                                }, 
                                {
                                  type: 'integer',
                                },
                              ],
                            },
                          },
                        }, 
                        tcpSocket: {
                          required: [
                            'port',
                          ], 
                          properties: {
                            host: {
                              type: 'string',
                            }, 
                            port: {
                              oneOf: [
                                {
                                  type: 'string',
                                }, 
                                {
                                  type: 'integer'
                                },
                              ],
                            },
                          },
                        }, 
                        exec: {
                          properties: {
                            command: {
                              items: {
                                type: 'string',
                              }, 
                              type: 'array',
                            },
                          },
                        },
                      },
                    },
                  },
                }, 
                serviceAccountName: {
                  type: 'string',
                },
                serviceAccount: {
                  type: 'string',
                },
                ttlSecondsAfterFinished: {
                  type: 'integer',
                  format: 'int64',
                },
                activeDeadlineSeconds: {
                  type: 'integer',
                  format: 'int64',
                },
                terminationGracePeriodSeconds: {
                  type: 'integer',
                  format: 'int64',
                },
                volumes: {
                  type: 'array',
                },
                imagePullSecrets: {
                  items: {
                    properties: {
                      name: {
                        type: 'string',
                      },
                    },
                  },
                  type: 'array',
                },
                containers: {
                  items: {
                    required: [
                      'name',
                    ],
                    properties: {
                      args: {
                        items: {
                          type: 'string',
                        },
                        type: 'array',
                      },
                      name: {
                        type: 'string',
                      },
                      workingDir: {
                        type: 'string',
                      },
                      image: {
                        type: 'string',
                      },
                      stdin: {
                        type: 'boolean',
                      },
                      volumeMounts: {
                        items: {
                          required: [
                            'name',
                            'mountPath',
                          ],
                          properties: {
                            readOnly: {
                              type: 'boolean',
                            },
                            mountPath: {
                              type: 'string',
                            },
                            subPath: {
                              type: 'string',
                            },
                            name: {
                              type: 'string',
                            },
                          },
                        },
                        type: 'array',
                      },
                      command: {
                        items: {
                          type: 'string',
                        },
                        type: 'array',
                      },
                      env: {
                        type: 'array',
                      },
                      imagePullPolicy: {
                        type: 'string',
                      },
                      securityContext: {
                        properties: {
                          readOnlyRootFilesystem: {
                            type: 'boolean',
                          },
                          runAsUser: {
                            type: 'integer',
                            format: 'int64',
                          },
                          capabilities: {
                            properties: {
                              add: {
                                items: {
                                  type: 'string',
                                },
                                type: 'array',
                              },
                              drop: {
                                items: {
                                  type: 'string',
                                },
                                type: 'array',
                              },
                            },
                          },
                          runAsNonRoot: {
                            type: 'boolean',
                          },
                          privileged: {
                            type: 'boolean',
                          }
                        }
                      },
                      ports: {
                        items: {
                          properties: {
                            hostIP: {
                              type: 'string',
                            },
                            protocol: {
                              type: 'string',
                            },
                            containerPort: {
                              type: 'integer',
                              format: 'int32',
                            },
                            name: {
                              type: 'string',
                            },
                            hostPort: {
                              type: 'integer',
                              format: 'int32',
                            }
                          }
                        },
                        type: 'array',
                      },
                      resources: {
                        properties: {
                          requests: {
                            type: 'object',
                          },
                          limits: {
                            type: 'object',
                          },
                        },
                      },
                      stdinOnce: {
                        type: 'boolean',
                      },
                    },
                  },
                  type: 'array',
                },
              },
            },
          },
        },
        selector: {
          properties: {
            matchLabels: {
              type: 'object',
            },
            matchExpressions: {
              items: {
                required: [
                  'key',
                  'operator',
                ],
                properties: {
                  operator: {
                    type: 'string',
                  },
                  values: {
                    items: {
                      type: 'string',
                    },
                    type: 'array',
                  },
                  key: {
                    type: 'string',
                  },
                },
              },
              type: 'array',
            },
          },
        },
      },
    },
    status: {
      properties: {
        observedGeneration: {
          type: 'integer',
          format: 'int64',
        },
        conditions: {
          items: {
            properties: {
              status: {
                type: 'string',
              },
              reason: {
                type: 'string'
              },
              message: {
                type: 'string',
              },
              type: {
                type: 'string',
              },
            },
          },
          type: 'array',
        },
      },
    },
  },
}
