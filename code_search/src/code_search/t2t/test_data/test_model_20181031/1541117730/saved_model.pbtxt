saved_model_schema_version: 1
meta_graphs {
  meta_info_def {
    stripped_op_list {
      op {
        name: "Abs"
        input_arg {
          name: "x"
          type_attr: "T"
        }
        output_arg {
          name: "y"
          type_attr: "T"
        }
        attr {
          name: "T"
          type: "type"
          allowed_values {
            list {
              type: DT_BFLOAT16
              type: DT_HALF
              type: DT_FLOAT
              type: DT_DOUBLE
              type: DT_INT32
              type: DT_INT64
            }
          }
        }
      }
      op {
        name: "Add"
        input_arg {
          name: "x"
          type_attr: "T"
        }
        input_arg {
          name: "y"
          type_attr: "T"
        }
        output_arg {
          name: "z"
          type_attr: "T"
        }
        attr {
          name: "T"
          type: "type"
          allowed_values {
            list {
              type: DT_BFLOAT16
              type: DT_HALF
              type: DT_FLOAT
              type: DT_DOUBLE
              type: DT_UINT8
              type: DT_INT8
              type: DT_INT16
              type: DT_INT32
              type: DT_INT64
              type: DT_COMPLEX64
              type: DT_COMPLEX128
              type: DT_STRING
            }
          }
        }
      }
      op {
        name: "Assign"
        input_arg {
          name: "ref"
          type_attr: "T"
          is_ref: true
        }
        input_arg {
          name: "value"
          type_attr: "T"
        }
        output_arg {
          name: "output_ref"
          type_attr: "T"
          is_ref: true
        }
        attr {
          name: "T"
          type: "type"
        }
        attr {
          name: "validate_shape"
          type: "bool"
          default_value {
            b: true
          }
        }
        attr {
          name: "use_locking"
          type: "bool"
          default_value {
            b: true
          }
        }
        allows_uninitialized_input: true
      }
      op {
        name: "AssignVariableOp"
        input_arg {
          name: "resource"
          type: DT_RESOURCE
        }
        input_arg {
          name: "value"
          type_attr: "dtype"
        }
        attr {
          name: "dtype"
          type: "type"
        }
        is_stateful: true
      }
      op {
        name: "BatchMatMul"
        input_arg {
          name: "x"
          type_attr: "T"
        }
        input_arg {
          name: "y"
          type_attr: "T"
        }
        output_arg {
          name: "output"
          type_attr: "T"
        }
        attr {
          name: "T"
          type: "type"
          allowed_values {
            list {
              type: DT_BFLOAT16
              type: DT_HALF
              type: DT_FLOAT
              type: DT_DOUBLE
              type: DT_INT32
              type: DT_COMPLEX64
              type: DT_COMPLEX128
            }
          }
        }
        attr {
          name: "adj_x"
          type: "bool"
          default_value {
            b: false
          }
        }
        attr {
          name: "adj_y"
          type: "bool"
          default_value {
            b: false
          }
        }
      }
      op {
        name: "BiasAdd"
        input_arg {
          name: "value"
          type_attr: "T"
        }
        input_arg {
          name: "bias"
          type_attr: "T"
        }
        output_arg {
          name: "output"
          type_attr: "T"
        }
        attr {
          name: "T"
          type: "type"
          allowed_values {
            list {
              type: DT_FLOAT
              type: DT_DOUBLE
              type: DT_INT32
              type: DT_UINT8
              type: DT_INT16
              type: DT_INT8
              type: DT_COMPLEX64
              type: DT_INT64
              type: DT_QINT8
              type: DT_QUINT8
              type: DT_QINT32
              type: DT_BFLOAT16
              type: DT_UINT16
              type: DT_COMPLEX128
              type: DT_HALF
              type: DT_UINT32
              type: DT_UINT64
            }
          }
        }
        attr {
          name: "data_format"
          type: "string"
          default_value {
            s: "NHWC"
          }
          allowed_values {
            list {
              s: "NHWC"
              s: "NCHW"
            }
          }
        }
      }
      op {
        name: "Cast"
        input_arg {
          name: "x"
          type_attr: "SrcT"
        }
        output_arg {
          name: "y"
          type_attr: "DstT"
        }
        attr {
          name: "SrcT"
          type: "type"
        }
        attr {
          name: "DstT"
          type: "type"
        }
        attr {
          name: "Truncate"
          type: "bool"
          default_value {
            b: false
          }
        }
      }
      op {
        name: "ConcatV2"
        input_arg {
          name: "values"
          type_attr: "T"
          number_attr: "N"
        }
        input_arg {
          name: "axis"
          type_attr: "Tidx"
        }
        output_arg {
          name: "output"
          type_attr: "T"
        }
        attr {
          name: "N"
          type: "int"
          has_minimum: true
          minimum: 2
        }
        attr {
          name: "T"
          type: "type"
        }
        attr {
          name: "Tidx"
          type: "type"
          default_value {
            type: DT_INT32
          }
          allowed_values {
            list {
              type: DT_INT32
              type: DT_INT64
            }
          }
        }
      }
      op {
        name: "Const"
        output_arg {
          name: "output"
          type_attr: "dtype"
        }
        attr {
          name: "value"
          type: "tensor"
        }
        attr {
          name: "dtype"
          type: "type"
        }
      }
      op {
        name: "Cos"
        input_arg {
          name: "x"
          type_attr: "T"
        }
        output_arg {
          name: "y"
          type_attr: "T"
        }
        attr {
          name: "T"
          type: "type"
          allowed_values {
            list {
              type: DT_BFLOAT16
              type: DT_HALF
              type: DT_FLOAT
              type: DT_DOUBLE
              type: DT_COMPLEX64
              type: DT_COMPLEX128
            }
          }
        }
      }
      op {
        name: "DatasetToSingleElement"
        input_arg {
          name: "dataset"
          type: DT_VARIANT
        }
        output_arg {
          name: "components"
          type_list_attr: "output_types"
        }
        attr {
          name: "output_types"
          type: "list(type)"
          has_minimum: true
          minimum: 1
        }
        attr {
          name: "output_shapes"
          type: "list(shape)"
          has_minimum: true
          minimum: 1
        }
      }
      op {
        name: "Equal"
        input_arg {
          name: "x"
          type_attr: "T"
        }
        input_arg {
          name: "y"
          type_attr: "T"
        }
        output_arg {
          name: "z"
          type: DT_BOOL
        }
        attr {
          name: "T"
          type: "type"
          allowed_values {
            list {
              type: DT_BFLOAT16
              type: DT_HALF
              type: DT_FLOAT
              type: DT_DOUBLE
              type: DT_UINT8
              type: DT_INT8
              type: DT_INT16
              type: DT_INT32
              type: DT_INT64
              type: DT_COMPLEX64
              type: DT_QUINT8
              type: DT_QINT8
              type: DT_QINT32
              type: DT_STRING
              type: DT_BOOL
              type: DT_COMPLEX128
            }
          }
        }
        is_commutative: true
      }
      op {
        name: "Exp"
        input_arg {
          name: "x"
          type_attr: "T"
        }
        output_arg {
          name: "y"
          type_attr: "T"
        }
        attr {
          name: "T"
          type: "type"
          allowed_values {
            list {
              type: DT_BFLOAT16
              type: DT_HALF
              type: DT_FLOAT
              type: DT_DOUBLE
              type: DT_COMPLEX64
              type: DT_COMPLEX128
            }
          }
        }
      }
      op {
        name: "ExpandDims"
        input_arg {
          name: "input"
          type_attr: "T"
        }
        input_arg {
          name: "dim"
          type_attr: "Tdim"
        }
        output_arg {
          name: "output"
          type_attr: "T"
        }
        attr {
          name: "T"
          type: "type"
        }
        attr {
          name: "Tdim"
          type: "type"
          default_value {
            type: DT_INT32
          }
          allowed_values {
            list {
              type: DT_INT32
              type: DT_INT64
            }
          }
        }
      }
      op {
        name: "FloorDiv"
        input_arg {
          name: "x"
          type_attr: "T"
        }
        input_arg {
          name: "y"
          type_attr: "T"
        }
        output_arg {
          name: "z"
          type_attr: "T"
        }
        attr {
          name: "T"
          type: "type"
          allowed_values {
            list {
              type: DT_BFLOAT16
              type: DT_HALF
              type: DT_FLOAT
              type: DT_DOUBLE
              type: DT_UINT8
              type: DT_INT8
              type: DT_UINT16
              type: DT_INT16
              type: DT_INT32
              type: DT_INT64
              type: DT_COMPLEX64
              type: DT_COMPLEX128
            }
          }
        }
      }
      op {
        name: "FloorMod"
        input_arg {
          name: "x"
          type_attr: "T"
        }
        input_arg {
          name: "y"
          type_attr: "T"
        }
        output_arg {
          name: "z"
          type_attr: "T"
        }
        attr {
          name: "T"
          type: "type"
          allowed_values {
            list {
              type: DT_INT32
              type: DT_INT64
              type: DT_BFLOAT16
              type: DT_HALF
              type: DT_FLOAT
              type: DT_DOUBLE
            }
          }
        }
      }
      op {
        name: "GatherNd"
        input_arg {
          name: "params"
          type_attr: "Tparams"
        }
        input_arg {
          name: "indices"
          type_attr: "Tindices"
        }
        output_arg {
          name: "output"
          type_attr: "Tparams"
        }
        attr {
          name: "Tparams"
          type: "type"
        }
        attr {
          name: "Tindices"
          type: "type"
          allowed_values {
            list {
              type: DT_INT32
              type: DT_INT64
            }
          }
        }
      }
      op {
        name: "GatherV2"
        input_arg {
          name: "params"
          type_attr: "Tparams"
        }
        input_arg {
          name: "indices"
          type_attr: "Tindices"
        }
        input_arg {
          name: "axis"
          type_attr: "Taxis"
        }
        output_arg {
          name: "output"
          type_attr: "Tparams"
        }
        attr {
          name: "Tparams"
          type: "type"
        }
        attr {
          name: "Tindices"
          type: "type"
          allowed_values {
            list {
              type: DT_INT32
              type: DT_INT64
            }
          }
        }
        attr {
          name: "Taxis"
          type: "type"
          allowed_values {
            list {
              type: DT_INT32
              type: DT_INT64
            }
          }
        }
      }
      op {
        name: "Greater"
        input_arg {
          name: "x"
          type_attr: "T"
        }
        input_arg {
          name: "y"
          type_attr: "T"
        }
        output_arg {
          name: "z"
          type: DT_BOOL
        }
        attr {
          name: "T"
          type: "type"
          allowed_values {
            list {
              type: DT_FLOAT
              type: DT_DOUBLE
              type: DT_INT32
              type: DT_UINT8
              type: DT_INT16
              type: DT_INT8
              type: DT_INT64
              type: DT_BFLOAT16
              type: DT_UINT16
              type: DT_HALF
              type: DT_UINT32
              type: DT_UINT64
            }
          }
        }
      }
      op {
        name: "GreaterEqual"
        input_arg {
          name: "x"
          type_attr: "T"
        }
        input_arg {
          name: "y"
          type_attr: "T"
        }
        output_arg {
          name: "z"
          type: DT_BOOL
        }
        attr {
          name: "T"
          type: "type"
          allowed_values {
            list {
              type: DT_FLOAT
              type: DT_DOUBLE
              type: DT_INT32
              type: DT_UINT8
              type: DT_INT16
              type: DT_INT8
              type: DT_INT64
              type: DT_BFLOAT16
              type: DT_UINT16
              type: DT_HALF
              type: DT_UINT32
              type: DT_UINT64
            }
          }
        }
      }
      op {
        name: "Identity"
        input_arg {
          name: "input"
          type_attr: "T"
        }
        output_arg {
          name: "output"
          type_attr: "T"
        }
        attr {
          name: "T"
          type: "type"
        }
      }
      op {
        name: "ImageSummary"
        input_arg {
          name: "tag"
          type: DT_STRING
        }
        input_arg {
          name: "tensor"
          type_attr: "T"
        }
        output_arg {
          name: "summary"
          type: DT_STRING
        }
        attr {
          name: "max_images"
          type: "int"
          default_value {
            i: 3
          }
          has_minimum: true
          minimum: 1
        }
        attr {
          name: "T"
          type: "type"
          default_value {
            type: DT_FLOAT
          }
          allowed_values {
            list {
              type: DT_UINT8
              type: DT_FLOAT
              type: DT_HALF
              type: DT_DOUBLE
            }
          }
        }
        attr {
          name: "bad_color"
          type: "tensor"
          default_value {
            tensor {
              dtype: DT_UINT8
              tensor_shape {
                dim {
                  size: 4
                }
              }
              int_val: 255
              int_val: 0
              int_val: 0
              int_val: 255
            }
          }
        }
      }
      op {
        name: "Less"
        input_arg {
          name: "x"
          type_attr: "T"
        }
        input_arg {
          name: "y"
          type_attr: "T"
        }
        output_arg {
          name: "z"
          type: DT_BOOL
        }
        attr {
          name: "T"
          type: "type"
          allowed_values {
            list {
              type: DT_FLOAT
              type: DT_DOUBLE
              type: DT_INT32
              type: DT_UINT8
              type: DT_INT16
              type: DT_INT8
              type: DT_INT64
              type: DT_BFLOAT16
              type: DT_UINT16
              type: DT_HALF
              type: DT_UINT32
              type: DT_UINT64
            }
          }
        }
      }
      op {
        name: "ListDiff"
        input_arg {
          name: "x"
          type_attr: "T"
        }
        input_arg {
          name: "y"
          type_attr: "T"
        }
        output_arg {
          name: "out"
          type_attr: "T"
        }
        output_arg {
          name: "idx"
          type_attr: "out_idx"
        }
        attr {
          name: "T"
          type: "type"
        }
        attr {
          name: "out_idx"
          type: "type"
          default_value {
            type: DT_INT32
          }
          allowed_values {
            list {
              type: DT_INT32
              type: DT_INT64
            }
          }
        }
      }
      op {
        name: "MapDataset"
        input_arg {
          name: "input_dataset"
          type: DT_VARIANT
        }
        input_arg {
          name: "other_arguments"
          type_list_attr: "Targuments"
        }
        output_arg {
          name: "handle"
          type: DT_VARIANT
        }
        attr {
          name: "f"
          type: "func"
        }
        attr {
          name: "Targuments"
          type: "list(type)"
          has_minimum: true
        }
        attr {
          name: "output_types"
          type: "list(type)"
          has_minimum: true
          minimum: 1
        }
        attr {
          name: "output_shapes"
          type: "list(shape)"
          has_minimum: true
          minimum: 1
        }
      }
      op {
        name: "MatMul"
        input_arg {
          name: "a"
          type_attr: "T"
        }
        input_arg {
          name: "b"
          type_attr: "T"
        }
        output_arg {
          name: "product"
          type_attr: "T"
        }
        attr {
          name: "transpose_a"
          type: "bool"
          default_value {
            b: false
          }
        }
        attr {
          name: "transpose_b"
          type: "bool"
          default_value {
            b: false
          }
        }
        attr {
          name: "T"
          type: "type"
          allowed_values {
            list {
              type: DT_BFLOAT16
              type: DT_HALF
              type: DT_FLOAT
              type: DT_DOUBLE
              type: DT_INT32
              type: DT_COMPLEX64
              type: DT_COMPLEX128
            }
          }
        }
      }
      op {
        name: "Max"
        input_arg {
          name: "input"
          type_attr: "T"
        }
        input_arg {
          name: "reduction_indices"
          type_attr: "Tidx"
        }
        output_arg {
          name: "output"
          type_attr: "T"
        }
        attr {
          name: "keep_dims"
          type: "bool"
          default_value {
            b: false
          }
        }
        attr {
          name: "T"
          type: "type"
          allowed_values {
            list {
              type: DT_FLOAT
              type: DT_DOUBLE
              type: DT_INT32
              type: DT_UINT8
              type: DT_INT16
              type: DT_INT8
              type: DT_COMPLEX64
              type: DT_INT64
              type: DT_QINT8
              type: DT_QUINT8
              type: DT_QINT32
              type: DT_BFLOAT16
              type: DT_UINT16
              type: DT_COMPLEX128
              type: DT_HALF
              type: DT_UINT32
              type: DT_UINT64
            }
          }
        }
        attr {
          name: "Tidx"
          type: "type"
          default_value {
            type: DT_INT32
          }
          allowed_values {
            list {
              type: DT_INT32
              type: DT_INT64
            }
          }
        }
      }
      op {
        name: "Maximum"
        input_arg {
          name: "x"
          type_attr: "T"
        }
        input_arg {
          name: "y"
          type_attr: "T"
        }
        output_arg {
          name: "z"
          type_attr: "T"
        }
        attr {
          name: "T"
          type: "type"
          allowed_values {
            list {
              type: DT_BFLOAT16
              type: DT_HALF
              type: DT_FLOAT
              type: DT_DOUBLE
              type: DT_INT32
              type: DT_INT64
            }
          }
        }
        is_commutative: true
      }
      op {
        name: "Mean"
        input_arg {
          name: "input"
          type_attr: "T"
        }
        input_arg {
          name: "reduction_indices"
          type_attr: "Tidx"
        }
        output_arg {
          name: "output"
          type_attr: "T"
        }
        attr {
          name: "keep_dims"
          type: "bool"
          default_value {
            b: false
          }
        }
        attr {
          name: "T"
          type: "type"
          allowed_values {
            list {
              type: DT_FLOAT
              type: DT_DOUBLE
              type: DT_INT32
              type: DT_UINT8
              type: DT_INT16
              type: DT_INT8
              type: DT_COMPLEX64
              type: DT_INT64
              type: DT_QINT8
              type: DT_QUINT8
              type: DT_QINT32
              type: DT_BFLOAT16
              type: DT_UINT16
              type: DT_COMPLEX128
              type: DT_HALF
              type: DT_UINT32
              type: DT_UINT64
            }
          }
        }
        attr {
          name: "Tidx"
          type: "type"
          default_value {
            type: DT_INT32
          }
          allowed_values {
            list {
              type: DT_INT32
              type: DT_INT64
            }
          }
        }
      }
      op {
        name: "Merge"
        input_arg {
          name: "inputs"
          type_attr: "T"
          number_attr: "N"
        }
        output_arg {
          name: "output"
          type_attr: "T"
        }
        output_arg {
          name: "value_index"
          type: DT_INT32
        }
        attr {
          name: "T"
          type: "type"
        }
        attr {
          name: "N"
          type: "int"
          has_minimum: true
          minimum: 1
        }
      }
      op {
        name: "MergeV2Checkpoints"
        input_arg {
          name: "checkpoint_prefixes"
          type: DT_STRING
        }
        input_arg {
          name: "destination_prefix"
          type: DT_STRING
        }
        attr {
          name: "delete_old_dirs"
          type: "bool"
          default_value {
            b: true
          }
        }
        is_stateful: true
      }
      op {
        name: "Mul"
        input_arg {
          name: "x"
          type_attr: "T"
        }
        input_arg {
          name: "y"
          type_attr: "T"
        }
        output_arg {
          name: "z"
          type_attr: "T"
        }
        attr {
          name: "T"
          type: "type"
          allowed_values {
            list {
              type: DT_BFLOAT16
              type: DT_HALF
              type: DT_FLOAT
              type: DT_DOUBLE
              type: DT_UINT8
              type: DT_INT8
              type: DT_UINT16
              type: DT_INT16
              type: DT_INT32
              type: DT_INT64
              type: DT_COMPLEX64
              type: DT_COMPLEX128
            }
          }
        }
        is_commutative: true
      }
      op {
        name: "Neg"
        input_arg {
          name: "x"
          type_attr: "T"
        }
        output_arg {
          name: "y"
          type_attr: "T"
        }
        attr {
          name: "T"
          type: "type"
          allowed_values {
            list {
              type: DT_BFLOAT16
              type: DT_HALF
              type: DT_FLOAT
              type: DT_DOUBLE
              type: DT_INT32
              type: DT_INT64
              type: DT_COMPLEX64
              type: DT_COMPLEX128
            }
          }
        }
      }
      op {
        name: "NoOp"
      }
      op {
        name: "NotEqual"
        input_arg {
          name: "x"
          type_attr: "T"
        }
        input_arg {
          name: "y"
          type_attr: "T"
        }
        output_arg {
          name: "z"
          type: DT_BOOL
        }
        attr {
          name: "T"
          type: "type"
          allowed_values {
            list {
              type: DT_BFLOAT16
              type: DT_HALF
              type: DT_FLOAT
              type: DT_DOUBLE
              type: DT_UINT8
              type: DT_INT8
              type: DT_INT16
              type: DT_INT32
              type: DT_INT64
              type: DT_COMPLEX64
              type: DT_QUINT8
              type: DT_QINT8
              type: DT_QINT32
              type: DT_STRING
              type: DT_BOOL
              type: DT_COMPLEX128
            }
          }
        }
        is_commutative: true
      }
      op {
        name: "Pack"
        input_arg {
          name: "values"
          type_attr: "T"
          number_attr: "N"
        }
        output_arg {
          name: "output"
          type_attr: "T"
        }
        attr {
          name: "N"
          type: "int"
          has_minimum: true
          minimum: 1
        }
        attr {
          name: "T"
          type: "type"
        }
        attr {
          name: "axis"
          type: "int"
          default_value {
            i: 0
          }
        }
      }
      op {
        name: "Pad"
        input_arg {
          name: "input"
          type_attr: "T"
        }
        input_arg {
          name: "paddings"
          type_attr: "Tpaddings"
        }
        output_arg {
          name: "output"
          type_attr: "T"
        }
        attr {
          name: "T"
          type: "type"
        }
        attr {
          name: "Tpaddings"
          type: "type"
          default_value {
            type: DT_INT32
          }
          allowed_values {
            list {
              type: DT_INT32
              type: DT_INT64
            }
          }
        }
      }
      op {
        name: "PaddedBatchDatasetV2"
        input_arg {
          name: "input_dataset"
          type: DT_VARIANT
        }
        input_arg {
          name: "batch_size"
          type: DT_INT64
        }
        input_arg {
          name: "padded_shapes"
          type: DT_INT64
          number_attr: "N"
        }
        input_arg {
          name: "padding_values"
          type_list_attr: "Toutput_types"
        }
        input_arg {
          name: "drop_remainder"
          type: DT_BOOL
        }
        output_arg {
          name: "handle"
          type: DT_VARIANT
        }
        attr {
          name: "Toutput_types"
          type: "list(type)"
          has_minimum: true
          minimum: 1
        }
        attr {
          name: "output_shapes"
          type: "list(shape)"
          has_minimum: true
          minimum: 1
        }
        attr {
          name: "N"
          type: "int"
          has_minimum: true
          minimum: 1
        }
      }
      op {
        name: "Placeholder"
        output_arg {
          name: "output"
          type_attr: "dtype"
        }
        attr {
          name: "dtype"
          type: "type"
        }
        attr {
          name: "shape"
          type: "shape"
          default_value {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      op {
        name: "Pow"
        input_arg {
          name: "x"
          type_attr: "T"
        }
        input_arg {
          name: "y"
          type_attr: "T"
        }
        output_arg {
          name: "z"
          type_attr: "T"
        }
        attr {
          name: "T"
          type: "type"
          allowed_values {
            list {
              type: DT_BFLOAT16
              type: DT_FLOAT
              type: DT_HALF
              type: DT_DOUBLE
              type: DT_INT32
              type: DT_INT64
              type: DT_COMPLEX64
              type: DT_COMPLEX128
            }
          }
        }
      }
      op {
        name: "Prod"
        input_arg {
          name: "input"
          type_attr: "T"
        }
        input_arg {
          name: "reduction_indices"
          type_attr: "Tidx"
        }
        output_arg {
          name: "output"
          type_attr: "T"
        }
        attr {
          name: "keep_dims"
          type: "bool"
          default_value {
            b: false
          }
        }
        attr {
          name: "T"
          type: "type"
          allowed_values {
            list {
              type: DT_FLOAT
              type: DT_DOUBLE
              type: DT_INT32
              type: DT_UINT8
              type: DT_INT16
              type: DT_INT8
              type: DT_COMPLEX64
              type: DT_INT64
              type: DT_QINT8
              type: DT_QUINT8
              type: DT_QINT32
              type: DT_BFLOAT16
              type: DT_UINT16
              type: DT_COMPLEX128
              type: DT_HALF
              type: DT_UINT32
              type: DT_UINT64
            }
          }
        }
        attr {
          name: "Tidx"
          type: "type"
          default_value {
            type: DT_INT32
          }
          allowed_values {
            list {
              type: DT_INT32
              type: DT_INT64
            }
          }
        }
      }
      op {
        name: "RandomStandardNormal"
        input_arg {
          name: "shape"
          type_attr: "T"
        }
        output_arg {
          name: "output"
          type_attr: "dtype"
        }
        attr {
          name: "seed"
          type: "int"
          default_value {
            i: 0
          }
        }
        attr {
          name: "seed2"
          type: "int"
          default_value {
            i: 0
          }
        }
        attr {
          name: "dtype"
          type: "type"
          allowed_values {
            list {
              type: DT_HALF
              type: DT_BFLOAT16
              type: DT_FLOAT
              type: DT_DOUBLE
            }
          }
        }
        attr {
          name: "T"
          type: "type"
          allowed_values {
            list {
              type: DT_INT32
              type: DT_INT64
            }
          }
        }
        is_stateful: true
      }
      op {
        name: "RandomUniform"
        input_arg {
          name: "shape"
          type_attr: "T"
        }
        output_arg {
          name: "output"
          type_attr: "dtype"
        }
        attr {
          name: "seed"
          type: "int"
          default_value {
            i: 0
          }
        }
        attr {
          name: "seed2"
          type: "int"
          default_value {
            i: 0
          }
        }
        attr {
          name: "dtype"
          type: "type"
          allowed_values {
            list {
              type: DT_HALF
              type: DT_BFLOAT16
              type: DT_FLOAT
              type: DT_DOUBLE
            }
          }
        }
        attr {
          name: "T"
          type: "type"
          allowed_values {
            list {
              type: DT_INT32
              type: DT_INT64
            }
          }
        }
        is_stateful: true
      }
      op {
        name: "Range"
        input_arg {
          name: "start"
          type_attr: "Tidx"
        }
        input_arg {
          name: "limit"
          type_attr: "Tidx"
        }
        input_arg {
          name: "delta"
          type_attr: "Tidx"
        }
        output_arg {
          name: "output"
          type_attr: "Tidx"
        }
        attr {
          name: "Tidx"
          type: "type"
          default_value {
            type: DT_INT32
          }
          allowed_values {
            list {
              type: DT_BFLOAT16
              type: DT_FLOAT
              type: DT_DOUBLE
              type: DT_INT32
              type: DT_INT64
            }
          }
        }
      }
      op {
        name: "ReadVariableOp"
        input_arg {
          name: "resource"
          type: DT_RESOURCE
        }
        output_arg {
          name: "value"
          type_attr: "dtype"
        }
        attr {
          name: "dtype"
          type: "type"
        }
        is_stateful: true
      }
      op {
        name: "RealDiv"
        input_arg {
          name: "x"
          type_attr: "T"
        }
        input_arg {
          name: "y"
          type_attr: "T"
        }
        output_arg {
          name: "z"
          type_attr: "T"
        }
        attr {
          name: "T"
          type: "type"
          allowed_values {
            list {
              type: DT_BFLOAT16
              type: DT_HALF
              type: DT_FLOAT
              type: DT_DOUBLE
              type: DT_UINT8
              type: DT_INT8
              type: DT_UINT16
              type: DT_INT16
              type: DT_INT32
              type: DT_INT64
              type: DT_COMPLEX64
              type: DT_COMPLEX128
            }
          }
        }
      }
      op {
        name: "Relu"
        input_arg {
          name: "features"
          type_attr: "T"
        }
        output_arg {
          name: "activations"
          type_attr: "T"
        }
        attr {
          name: "T"
          type: "type"
          allowed_values {
            list {
              type: DT_FLOAT
              type: DT_DOUBLE
              type: DT_INT32
              type: DT_UINT8
              type: DT_INT16
              type: DT_INT8
              type: DT_INT64
              type: DT_BFLOAT16
              type: DT_UINT16
              type: DT_HALF
              type: DT_UINT32
              type: DT_UINT64
              type: DT_QINT8
            }
          }
        }
      }
      op {
        name: "Reshape"
        input_arg {
          name: "tensor"
          type_attr: "T"
        }
        input_arg {
          name: "shape"
          type_attr: "Tshape"
        }
        output_arg {
          name: "output"
          type_attr: "T"
        }
        attr {
          name: "T"
          type: "type"
        }
        attr {
          name: "Tshape"
          type: "type"
          default_value {
            type: DT_INT32
          }
          allowed_values {
            list {
              type: DT_INT32
              type: DT_INT64
            }
          }
        }
      }
      op {
        name: "RestoreV2"
        input_arg {
          name: "prefix"
          type: DT_STRING
        }
        input_arg {
          name: "tensor_names"
          type: DT_STRING
        }
        input_arg {
          name: "shape_and_slices"
          type: DT_STRING
        }
        output_arg {
          name: "tensors"
          type_list_attr: "dtypes"
        }
        attr {
          name: "dtypes"
          type: "list(type)"
          has_minimum: true
          minimum: 1
        }
        is_stateful: true
      }
      op {
        name: "Rsqrt"
        input_arg {
          name: "x"
          type_attr: "T"
        }
        output_arg {
          name: "y"
          type_attr: "T"
        }
        attr {
          name: "T"
          type: "type"
          allowed_values {
            list {
              type: DT_BFLOAT16
              type: DT_HALF
              type: DT_FLOAT
              type: DT_DOUBLE
              type: DT_COMPLEX64
              type: DT_COMPLEX128
            }
          }
        }
      }
      op {
        name: "SaveV2"
        input_arg {
          name: "prefix"
          type: DT_STRING
        }
        input_arg {
          name: "tensor_names"
          type: DT_STRING
        }
        input_arg {
          name: "shape_and_slices"
          type: DT_STRING
        }
        input_arg {
          name: "tensors"
          type_list_attr: "dtypes"
        }
        attr {
          name: "dtypes"
          type: "list(type)"
          has_minimum: true
          minimum: 1
        }
        is_stateful: true
      }
      op {
        name: "ScalarSummary"
        input_arg {
          name: "tags"
          type: DT_STRING
        }
        input_arg {
          name: "values"
          type_attr: "T"
        }
        output_arg {
          name: "summary"
          type: DT_STRING
        }
        attr {
          name: "T"
          type: "type"
          allowed_values {
            list {
              type: DT_FLOAT
              type: DT_DOUBLE
              type: DT_INT32
              type: DT_UINT8
              type: DT_INT16
              type: DT_INT8
              type: DT_INT64
              type: DT_BFLOAT16
              type: DT_UINT16
              type: DT_HALF
              type: DT_UINT32
              type: DT_UINT64
            }
          }
        }
      }
      op {
        name: "ScatterNd"
        input_arg {
          name: "indices"
          type_attr: "Tindices"
        }
        input_arg {
          name: "updates"
          type_attr: "T"
        }
        input_arg {
          name: "shape"
          type_attr: "Tindices"
        }
        output_arg {
          name: "output"
          type_attr: "T"
        }
        attr {
          name: "T"
          type: "type"
        }
        attr {
          name: "Tindices"
          type: "type"
          allowed_values {
            list {
              type: DT_INT32
              type: DT_INT64
            }
          }
        }
      }
      op {
        name: "Shape"
        input_arg {
          name: "input"
          type_attr: "T"
        }
        output_arg {
          name: "output"
          type_attr: "out_type"
        }
        attr {
          name: "T"
          type: "type"
        }
        attr {
          name: "out_type"
          type: "type"
          default_value {
            type: DT_INT32
          }
          allowed_values {
            list {
              type: DT_INT32
              type: DT_INT64
            }
          }
        }
      }
      op {
        name: "ShardedFilename"
        input_arg {
          name: "basename"
          type: DT_STRING
        }
        input_arg {
          name: "shard"
          type: DT_INT32
        }
        input_arg {
          name: "num_shards"
          type: DT_INT32
        }
        output_arg {
          name: "filename"
          type: DT_STRING
        }
      }
      op {
        name: "Sin"
        input_arg {
          name: "x"
          type_attr: "T"
        }
        output_arg {
          name: "y"
          type_attr: "T"
        }
        attr {
          name: "T"
          type: "type"
          allowed_values {
            list {
              type: DT_BFLOAT16
              type: DT_HALF
              type: DT_FLOAT
              type: DT_DOUBLE
              type: DT_COMPLEX64
              type: DT_COMPLEX128
            }
          }
        }
      }
      op {
        name: "Softmax"
        input_arg {
          name: "logits"
          type_attr: "T"
        }
        output_arg {
          name: "softmax"
          type_attr: "T"
        }
        attr {
          name: "T"
          type: "type"
          allowed_values {
            list {
              type: DT_HALF
              type: DT_BFLOAT16
              type: DT_FLOAT
              type: DT_DOUBLE
            }
          }
        }
      }
      op {
        name: "Split"
        input_arg {
          name: "split_dim"
          type: DT_INT32
        }
        input_arg {
          name: "value"
          type_attr: "T"
        }
        output_arg {
          name: "output"
          type_attr: "T"
          number_attr: "num_split"
        }
        attr {
          name: "num_split"
          type: "int"
          has_minimum: true
          minimum: 1
        }
        attr {
          name: "T"
          type: "type"
        }
      }
      op {
        name: "Square"
        input_arg {
          name: "x"
          type_attr: "T"
        }
        output_arg {
          name: "y"
          type_attr: "T"
        }
        attr {
          name: "T"
          type: "type"
          allowed_values {
            list {
              type: DT_BFLOAT16
              type: DT_HALF
              type: DT_FLOAT
              type: DT_DOUBLE
              type: DT_INT32
              type: DT_INT64
              type: DT_COMPLEX64
              type: DT_COMPLEX128
            }
          }
        }
      }
      op {
        name: "Squeeze"
        input_arg {
          name: "input"
          type_attr: "T"
        }
        output_arg {
          name: "output"
          type_attr: "T"
        }
        attr {
          name: "T"
          type: "type"
        }
        attr {
          name: "squeeze_dims"
          type: "list(int)"
          default_value {
            list {
            }
          }
          has_minimum: true
        }
      }
      op {
        name: "StridedSlice"
        input_arg {
          name: "input"
          type_attr: "T"
        }
        input_arg {
          name: "begin"
          type_attr: "Index"
        }
        input_arg {
          name: "end"
          type_attr: "Index"
        }
        input_arg {
          name: "strides"
          type_attr: "Index"
        }
        output_arg {
          name: "output"
          type_attr: "T"
        }
        attr {
          name: "T"
          type: "type"
        }
        attr {
          name: "Index"
          type: "type"
          allowed_values {
            list {
              type: DT_INT32
              type: DT_INT64
            }
          }
        }
        attr {
          name: "begin_mask"
          type: "int"
          default_value {
            i: 0
          }
        }
        attr {
          name: "end_mask"
          type: "int"
          default_value {
            i: 0
          }
        }
        attr {
          name: "ellipsis_mask"
          type: "int"
          default_value {
            i: 0
          }
        }
        attr {
          name: "new_axis_mask"
          type: "int"
          default_value {
            i: 0
          }
        }
        attr {
          name: "shrink_axis_mask"
          type: "int"
          default_value {
            i: 0
          }
        }
      }
      op {
        name: "StringJoin"
        input_arg {
          name: "inputs"
          type: DT_STRING
          number_attr: "N"
        }
        output_arg {
          name: "output"
          type: DT_STRING
        }
        attr {
          name: "N"
          type: "int"
          has_minimum: true
          minimum: 1
        }
        attr {
          name: "separator"
          type: "string"
          default_value {
            s: ""
          }
        }
      }
      op {
        name: "Sub"
        input_arg {
          name: "x"
          type_attr: "T"
        }
        input_arg {
          name: "y"
          type_attr: "T"
        }
        output_arg {
          name: "z"
          type_attr: "T"
        }
        attr {
          name: "T"
          type: "type"
          allowed_values {
            list {
              type: DT_BFLOAT16
              type: DT_HALF
              type: DT_FLOAT
              type: DT_DOUBLE
              type: DT_UINT8
              type: DT_INT8
              type: DT_UINT16
              type: DT_INT16
              type: DT_INT32
              type: DT_INT64
              type: DT_COMPLEX64
              type: DT_COMPLEX128
            }
          }
        }
      }
      op {
        name: "Sum"
        input_arg {
          name: "input"
          type_attr: "T"
        }
        input_arg {
          name: "reduction_indices"
          type_attr: "Tidx"
        }
        output_arg {
          name: "output"
          type_attr: "T"
        }
        attr {
          name: "keep_dims"
          type: "bool"
          default_value {
            b: false
          }
        }
        attr {
          name: "T"
          type: "type"
          allowed_values {
            list {
              type: DT_FLOAT
              type: DT_DOUBLE
              type: DT_INT32
              type: DT_UINT8
              type: DT_INT16
              type: DT_INT8
              type: DT_COMPLEX64
              type: DT_INT64
              type: DT_QINT8
              type: DT_QUINT8
              type: DT_QINT32
              type: DT_BFLOAT16
              type: DT_UINT16
              type: DT_COMPLEX128
              type: DT_HALF
              type: DT_UINT32
              type: DT_UINT64
            }
          }
        }
        attr {
          name: "Tidx"
          type: "type"
          default_value {
            type: DT_INT32
          }
          allowed_values {
            list {
              type: DT_INT32
              type: DT_INT64
            }
          }
        }
      }
      op {
        name: "Switch"
        input_arg {
          name: "data"
          type_attr: "T"
        }
        input_arg {
          name: "pred"
          type: DT_BOOL
        }
        output_arg {
          name: "output_false"
          type_attr: "T"
        }
        output_arg {
          name: "output_true"
          type_attr: "T"
        }
        attr {
          name: "T"
          type: "type"
        }
      }
      op {
        name: "TensorSliceDataset"
        input_arg {
          name: "components"
          type_list_attr: "Toutput_types"
        }
        output_arg {
          name: "handle"
          type: DT_VARIANT
        }
        attr {
          name: "Toutput_types"
          type: "list(type)"
          has_minimum: true
          minimum: 1
        }
        attr {
          name: "output_shapes"
          type: "list(shape)"
          has_minimum: true
          minimum: 1
        }
        is_stateful: true
      }
      op {
        name: "TensorSummaryV2"
        input_arg {
          name: "tag"
          type: DT_STRING
        }
        input_arg {
          name: "tensor"
          type_attr: "T"
        }
        input_arg {
          name: "serialized_summary_metadata"
          type: DT_STRING
        }
        output_arg {
          name: "summary"
          type: DT_STRING
        }
        attr {
          name: "T"
          type: "type"
        }
      }
      op {
        name: "Tile"
        input_arg {
          name: "input"
          type_attr: "T"
        }
        input_arg {
          name: "multiples"
          type_attr: "Tmultiples"
        }
        output_arg {
          name: "output"
          type_attr: "T"
        }
        attr {
          name: "T"
          type: "type"
        }
        attr {
          name: "Tmultiples"
          type: "type"
          default_value {
            type: DT_INT32
          }
          allowed_values {
            list {
              type: DT_INT32
              type: DT_INT64
            }
          }
        }
      }
      op {
        name: "Transpose"
        input_arg {
          name: "x"
          type_attr: "T"
        }
        input_arg {
          name: "perm"
          type_attr: "Tperm"
        }
        output_arg {
          name: "y"
          type_attr: "T"
        }
        attr {
          name: "T"
          type: "type"
        }
        attr {
          name: "Tperm"
          type: "type"
          default_value {
            type: DT_INT32
          }
          allowed_values {
            list {
              type: DT_INT32
              type: DT_INT64
            }
          }
        }
      }
      op {
        name: "VarHandleOp"
        output_arg {
          name: "resource"
          type: DT_RESOURCE
        }
        attr {
          name: "container"
          type: "string"
          default_value {
            s: ""
          }
        }
        attr {
          name: "shared_name"
          type: "string"
          default_value {
            s: ""
          }
        }
        attr {
          name: "dtype"
          type: "type"
        }
        attr {
          name: "shape"
          type: "shape"
        }
        is_stateful: true
      }
      op {
        name: "VarIsInitializedOp"
        input_arg {
          name: "resource"
          type: DT_RESOURCE
        }
        output_arg {
          name: "is_initialized"
          type: DT_BOOL
        }
        is_stateful: true
      }
      op {
        name: "VariableV2"
        output_arg {
          name: "ref"
          type_attr: "dtype"
          is_ref: true
        }
        attr {
          name: "shape"
          type: "shape"
        }
        attr {
          name: "dtype"
          type: "type"
        }
        attr {
          name: "container"
          type: "string"
          default_value {
            s: ""
          }
        }
        attr {
          name: "shared_name"
          type: "string"
          default_value {
            s: ""
          }
        }
        is_stateful: true
      }
      op {
        name: "Where"
        input_arg {
          name: "input"
          type_attr: "T"
        }
        output_arg {
          name: "index"
          type: DT_INT64
        }
        attr {
          name: "T"
          type: "type"
          default_value {
            type: DT_BOOL
          }
          allowed_values {
            list {
              type: DT_FLOAT
              type: DT_DOUBLE
              type: DT_INT32
              type: DT_UINT8
              type: DT_INT16
              type: DT_INT8
              type: DT_COMPLEX64
              type: DT_INT64
              type: DT_QINT8
              type: DT_QUINT8
              type: DT_QINT32
              type: DT_BFLOAT16
              type: DT_UINT16
              type: DT_COMPLEX128
              type: DT_HALF
              type: DT_UINT32
              type: DT_UINT64
              type: DT_BOOL
            }
          }
        }
      }
    }
    tags: "serve"
    tensorflow_version: "1.11.0"
    tensorflow_git_version: "v1.11.0-0-gc19e29306c"
    stripped_default_attrs: true
  }
  graph_def {
    node {
      name: "global_step/Initializer/zeros"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@global_step"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT64
            tensor_shape {
            }
            int64_val: 0
          }
        }
      }
    }
    node {
      name: "global_step"
      op: "VariableV2"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@global_step"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "shape"
        value {
          shape {
          }
        }
      }
    }
    node {
      name: "global_step/Assign"
      op: "Assign"
      input: "global_step"
      input: "global_step/Initializer/zeros"
      attr {
        key: "T"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@global_step"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "global_step/read"
      op: "Identity"
      input: "global_step"
      attr {
        key: "T"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@global_step"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "serialized_example"
      op: "Placeholder"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: -1
            }
          }
        }
      }
    }
    node {
      name: "Shape"
      op: "Shape"
      input: "serialized_example"
      attr {
        key: "T"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT64
        }
      }
    }
    node {
      name: "strided_slice/stack"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "strided_slice/stack_1"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "strided_slice/stack_2"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "strided_slice"
      op: "StridedSlice"
      input: "Shape"
      input: "strided_slice/stack"
      input: "strided_slice/stack_1"
      input: "strided_slice/stack_2"
      attr {
        key: "Index"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "shrink_axis_mask"
        value {
          i: 1
        }
      }
    }
    node {
      name: "Const"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT64
            tensor_shape {
              dim {
                size: 1
              }
            }
            int64_val: 1
          }
        }
      }
    }
    node {
      name: "Const_1"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT64
            tensor_shape {
              dim {
                size: 1
              }
            }
            int64_val: 1
          }
        }
      }
    }
    node {
      name: "Const_2"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT64
            tensor_shape {
              dim {
                size: 1
              }
            }
            int64_val: -1
          }
        }
      }
    }
    node {
      name: "Const_3"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT64
            tensor_shape {
              dim {
                size: 1
              }
            }
            int64_val: -1
          }
        }
      }
    }
    node {
      name: "padding_value"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "padding_value_1"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "padding_value_2"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "padding_value_3"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "drop_remainder"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_BOOL
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_BOOL
            tensor_shape {
            }
            bool_val: false
          }
        }
      }
    }
    node {
      name: "TensorSliceDataset"
      op: "TensorSliceDataset"
      input: "serialized_example"
      attr {
        key: "Toutput_types"
        value {
          list {
            type: DT_STRING
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "MapDataset"
      op: "MapDataset"
      input: "TensorSliceDataset"
      attr {
        key: "Targuments"
        value {
          list {
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "f"
        value {
          func {
            name: "tf_data_structured_function_wrapper_bshwJPcRWbY"
          }
        }
      }
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
            shape {
              dim {
                size: 1
              }
            }
            shape {
              dim {
                size: -1
              }
            }
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
      attr {
        key: "output_types"
        value {
          list {
            type: DT_INT64
            type: DT_INT64
            type: DT_INT64
            type: DT_INT64
          }
        }
      }
    }
    node {
      name: "MapDataset_1"
      op: "MapDataset"
      input: "MapDataset"
      attr {
        key: "Targuments"
        value {
          list {
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "f"
        value {
          func {
            name: "tf_data_structured_function_wrapper_EVCvgogkMRU"
          }
        }
      }
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
            shape {
              dim {
                size: 1
              }
            }
            shape {
              dim {
                size: -1
              }
            }
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
      attr {
        key: "output_types"
        value {
          list {
            type: DT_INT64
            type: DT_INT64
            type: DT_INT64
            type: DT_INT64
          }
        }
      }
    }
    node {
      name: "MapDataset_2"
      op: "MapDataset"
      input: "MapDataset_1"
      attr {
        key: "Targuments"
        value {
          list {
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "f"
        value {
          func {
            name: "tf_data_structured_function_wrapper_EVCvgogkMRU"
          }
        }
      }
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
            shape {
              dim {
                size: 1
              }
            }
            shape {
              dim {
                size: -1
              }
            }
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
      attr {
        key: "output_types"
        value {
          list {
            type: DT_INT64
            type: DT_INT64
            type: DT_INT64
            type: DT_INT64
          }
        }
      }
    }
    node {
      name: "MapDataset_3"
      op: "MapDataset"
      input: "MapDataset_2"
      attr {
        key: "Targuments"
        value {
          list {
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "f"
        value {
          func {
            name: "tf_data_structured_function_wrapper_qI9kamzZnOg"
          }
        }
      }
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
            shape {
              dim {
                size: 1
              }
            }
            shape {
              dim {
                size: -1
              }
            }
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
      attr {
        key: "output_types"
        value {
          list {
            type: DT_INT32
            type: DT_INT32
            type: DT_INT32
            type: DT_INT32
          }
        }
      }
    }
    node {
      name: "PaddedBatchDatasetV2"
      op: "PaddedBatchDatasetV2"
      input: "MapDataset_3"
      input: "strided_slice"
      input: "Const"
      input: "Const_1"
      input: "Const_2"
      input: "Const_3"
      input: "padding_value"
      input: "padding_value_1"
      input: "padding_value_2"
      input: "padding_value_3"
      input: "drop_remainder"
      attr {
        key: "N"
        value {
          i: 4
        }
      }
      attr {
        key: "Toutput_types"
        value {
          list {
            type: DT_INT32
            type: DT_INT32
            type: DT_INT32
            type: DT_INT32
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
            shape {
              dim {
                size: -1
              }
              dim {
                size: -1
              }
            }
            shape {
              dim {
                size: -1
              }
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "MapDataset_4"
      op: "MapDataset"
      input: "PaddedBatchDatasetV2"
      attr {
        key: "Targuments"
        value {
          list {
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "f"
        value {
          func {
            name: "tf_data_structured_function_wrapper_bkLTuN6B4xc"
          }
        }
      }
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
            shape {
              dim {
                size: -1
              }
              dim {
                size: -1
              }
              dim {
                size: 1
              }
              dim {
                size: 1
              }
            }
            shape {
              dim {
                size: -1
              }
              dim {
                size: -1
              }
              dim {
                size: 1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "output_types"
        value {
          list {
            type: DT_INT32
            type: DT_INT32
            type: DT_INT32
            type: DT_INT32
          }
        }
      }
    }
    node {
      name: "DatasetToSingleElement"
      op: "DatasetToSingleElement"
      input: "MapDataset_4"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
            shape {
              dim {
                size: -1
              }
              dim {
                size: -1
              }
              dim {
                size: 1
              }
              dim {
                size: 1
              }
            }
            shape {
              dim {
                size: -1
              }
              dim {
                size: -1
              }
              dim {
                size: 1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
            shape {
              dim {
                size: -1
              }
              dim {
                size: -1
              }
              dim {
                size: 1
              }
              dim {
                size: 1
              }
            }
            shape {
              dim {
                size: -1
              }
              dim {
                size: -1
              }
              dim {
                size: 1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "output_types"
        value {
          list {
            type: DT_INT32
            type: DT_INT32
            type: DT_INT32
            type: DT_INT32
          }
        }
      }
    }
    node {
      name: "Const_4"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
              dim {
                size: 2
              }
            }
            string_val: "optimizer_adafactor_clipping_threshold"
            string_val: "1.0"
          }
        }
      }
    }
    node {
      name: "Const_5"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
              dim {
                size: 2
              }
            }
            string_val: "parameter_attention_key_channels"
            string_val: "0"
          }
        }
      }
    }
    node {
      name: "Const_6"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
              dim {
                size: 2
              }
            }
            string_val: "multiply_embedding_mode"
            string_val: "sqrt_depth"
          }
        }
      }
    }
    node {
      name: "Const_7"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
              dim {
                size: 2
              }
            }
            string_val: "layer_postprocess_sequence"
            string_val: "da"
          }
        }
      }
    }
    node {
      name: "Const_8"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
              dim {
                size: 2
              }
            }
            string_val: "learning_rate"
            string_val: "0.2"
          }
        }
      }
    }
    node {
      name: "Const_9"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
              dim {
                size: 2
              }
            }
            string_val: "optimizer_adafactor_memory_exponent"
            string_val: "0.8"
          }
        }
      }
    }
    node {
      name: "Const_10"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
              dim {
                size: 2
              }
            }
            string_val: "moe_loss_coef"
            string_val: "0.001"
          }
        }
      }
    }
    node {
      name: "Const_11"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
              dim {
                size: 2
              }
            }
            string_val: "dropout"
            string_val: "0.0"
          }
        }
      }
    }
    node {
      name: "Const_12"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
              dim {
                size: 2
              }
            }
            string_val: "learning_rate_warmup_steps"
            string_val: "8000"
          }
        }
      }
    }
    node {
      name: "Const_13"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
              dim {
                size: 2
              }
            }
            string_val: "num_encoder_layers"
            string_val: "0"
          }
        }
      }
    }
    node {
      name: "Const_14"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
              dim {
                size: 2
              }
            }
            string_val: "optimizer_multistep_accumulate_steps"
            string_val: "None"
          }
        }
      }
    }
    node {
      name: "Const_15"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
              dim {
                size: 2
              }
            }
            string_val: "weight_dtype"
            string_val: "float32"
          }
        }
      }
    }
    node {
      name: "Const_16"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
              dim {
                size: 2
              }
            }
            string_val: "num_hidden_layers"
            string_val: "2"
          }
        }
      }
    }
    node {
      name: "Const_17"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
              dim {
                size: 2
              }
            }
            string_val: "vocab_divisor"
            string_val: "1"
          }
        }
      }
    }
    node {
      name: "Const_18"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
              dim {
                size: 2
              }
            }
            string_val: "multiproblem_mixing_schedule"
            string_val: "constant"
          }
        }
      }
    }
    node {
      name: "Const_19"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
              dim {
                size: 2
              }
            }
            string_val: "optimizer_adafactor_beta1"
            string_val: "0.0"
          }
        }
      }
    }
    node {
      name: "Const_20"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
              dim {
                size: 2
              }
            }
            string_val: "pad_batch"
            string_val: "False"
          }
        }
      }
    }
    node {
      name: "Const_21"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
              dim {
                size: 2
              }
            }
            string_val: "symbol_modality_num_shards"
            string_val: "16"
          }
        }
      }
    }
    node {
      name: "Const_22"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
              dim {
                size: 2
              }
            }
            string_val: "grad_noise_scale"
            string_val: "0.0"
          }
        }
      }
    }
    node {
      name: "Const_23"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
              dim {
                size: 2
              }
            }
            string_val: "target_modality"
            string_val: "default"
          }
        }
      }
    }
    node {
      name: "Const_24"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
              dim {
                size: 2
              }
            }
            string_val: "max_length"
            string_val: "256"
          }
        }
      }
    }
    node {
      name: "Const_25"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
              dim {
                size: 2
              }
            }
            string_val: "norm_epsilon"
            string_val: "1e-06"
          }
        }
      }
    }
    node {
      name: "Const_26"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
              dim {
                size: 2
              }
            }
            string_val: "attention_dropout_broadcast_dims"
            string_val: ""
          }
        }
      }
    }
    node {
      name: "Const_27"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
              dim {
                size: 2
              }
            }
            string_val: "kernel_width"
            string_val: "1"
          }
        }
      }
    }
    node {
      name: "Const_28"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
              dim {
                size: 2
              }
            }
            string_val: "optimizer"
            string_val: "Adam"
          }
        }
      }
    }
    node {
      name: "Const_29"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
              dim {
                size: 2
              }
            }
            string_val: "no_data_parallelism"
            string_val: "True"
          }
        }
      }
    }
    node {
      name: "Const_30"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
              dim {
                size: 2
              }
            }
            string_val: "moe_overhead_train"
            string_val: "1.0"
          }
        }
      }
    }
    node {
      name: "Const_31"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
              dim {
                size: 2
              }
            }
            string_val: "sampling_temp"
            string_val: "1.0"
          }
        }
      }
    }
    node {
      name: "Const_32"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
              dim {
                size: 2
              }
            }
            string_val: "pos"
            string_val: "timing"
          }
        }
      }
    }
    node {
      name: "Const_33"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
              dim {
                size: 2
              }
            }
            string_val: "optimizer_adafactor_factored"
            string_val: "True"
          }
        }
      }
    }
    node {
      name: "Const_34"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
              dim {
                size: 2
              }
            }
            string_val: "multiproblem_schedule_max_examples"
            string_val: "10000000.0"
          }
        }
      }
    }
    node {
      name: "Const_35"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
              dim {
                size: 2
              }
            }
            string_val: "use_target_space_embedding"
            string_val: "True"
          }
        }
      }
    }
    node {
      name: "Const_36"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
              dim {
                size: 2
              }
            }
            string_val: "batch_size"
            string_val: "4096"
          }
        }
      }
    }
    node {
      name: "Const_37"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
              dim {
                size: 2
              }
            }
            string_val: "compress_steps"
            string_val: "0"
          }
        }
      }
    }
    node {
      name: "Const_38"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
              dim {
                size: 2
              }
            }
            string_val: "learning_rate_decay_rate"
            string_val: "1.0"
          }
        }
      }
    }
    node {
      name: "Const_39"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
              dim {
                size: 2
              }
            }
            string_val: "learning_rate_constant"
            string_val: "2.0"
          }
        }
      }
    }
    node {
      name: "Const_40"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
              dim {
                size: 2
              }
            }
            string_val: "optimizer_momentum_nesterov"
            string_val: "False"
          }
        }
      }
    }
    node {
      name: "Const_41"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
              dim {
                size: 2
              }
            }
            string_val: "layer_prepostprocess_dropout"
            string_val: "0.0"
          }
        }
      }
    }
    node {
      name: "Const_42"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
              dim {
                size: 2
              }
            }
            string_val: "relu_dropout_broadcast_dims"
            string_val: ""
          }
        }
      }
    }
    node {
      name: "Const_43"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
              dim {
                size: 2
              }
            }
            string_val: "attention_value_channels"
            string_val: "0"
          }
        }
      }
    }
    node {
      name: "Const_44"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
              dim {
                size: 2
              }
            }
            string_val: "summarize_grads"
            string_val: "False"
          }
        }
      }
    }
    node {
      name: "Const_45"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
              dim {
                size: 2
              }
            }
            string_val: "num_decoder_layers"
            string_val: "0"
          }
        }
      }
    }
    node {
      name: "Const_46"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
              dim {
                size: 2
              }
            }
            string_val: "optimizer_adafactor_decay_type"
            string_val: "pow"
          }
        }
      }
    }
    node {
      name: "Const_47"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
              dim {
                size: 2
              }
            }
            string_val: "initializer_gain"
            string_val: "1.0"
          }
        }
      }
    }
    node {
      name: "Const_48"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
              dim {
                size: 2
              }
            }
            string_val: "scheduled_sampling_warmup_steps"
            string_val: "50000"
          }
        }
      }
    }
    node {
      name: "Const_49"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
              dim {
                size: 2
              }
            }
            string_val: "clip_grad_norm"
            string_val: "0.0"
          }
        }
      }
    }
    node {
      name: "Const_50"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
              dim {
                size: 2
              }
            }
            string_val: "eval_drop_long_sequences"
            string_val: "False"
          }
        }
      }
    }
    node {
      name: "Const_51"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
              dim {
                size: 2
              }
            }
            string_val: "video_num_input_frames"
            string_val: "1"
          }
        }
      }
    }
    node {
      name: "Const_52"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
              dim {
                size: 2
              }
            }
            string_val: "video_num_target_frames"
            string_val: "1"
          }
        }
      }
    }
    node {
      name: "Const_53"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
              dim {
                size: 2
              }
            }
            string_val: "relu_dropout"
            string_val: "0.0"
          }
        }
      }
    }
    node {
      name: "Const_54"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
              dim {
                size: 2
              }
            }
            string_val: "weight_noise"
            string_val: "0.0"
          }
        }
      }
    }
    node {
      name: "Const_55"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
              dim {
                size: 2
              }
            }
            string_val: "layer_preprocess_sequence"
            string_val: "n"
          }
        }
      }
    }
    node {
      name: "Const_56"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
              dim {
                size: 2
              }
            }
            string_val: "prepend_mode"
            string_val: "none"
          }
        }
      }
    }
    node {
      name: "Const_57"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
              dim {
                size: 2
              }
            }
            string_val: "sampling_method"
            string_val: "argmax"
          }
        }
      }
    }
    node {
      name: "Const_58"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
              dim {
                size: 2
              }
            }
            string_val: "summarize_vars"
            string_val: "False"
          }
        }
      }
    }
    node {
      name: "Const_59"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
              dim {
                size: 2
              }
            }
            string_val: "self_attention_type"
            string_val: "dot_product"
          }
        }
      }
    }
    node {
      name: "Const_60"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
              dim {
                size: 2
              }
            }
            string_val: "ffn_layer"
            string_val: "dense_relu_dense"
          }
        }
      }
    }
    node {
      name: "Const_61"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
              dim {
                size: 2
              }
            }
            string_val: "max_input_seq_length"
            string_val: "0"
          }
        }
      }
    }
    node {
      name: "Const_62"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
              dim {
                size: 2
              }
            }
            string_val: "moe_k"
            string_val: "2"
          }
        }
      }
    }
    node {
      name: "Const_63"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
              dim {
                size: 2
              }
            }
            string_val: "tpu_enable_host_call"
            string_val: "False"
          }
        }
      }
    }
    node {
      name: "Const_64"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
              dim {
                size: 2
              }
            }
            string_val: "optimizer_adafactor_beta2"
            string_val: "0.999"
          }
        }
      }
    }
    node {
      name: "Const_65"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
              dim {
                size: 2
              }
            }
            string_val: "input_modalities"
            string_val: "default"
          }
        }
      }
    }
    node {
      name: "Const_66"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
              dim {
                size: 2
              }
            }
            string_val: "shared_embedding"
            string_val: "False"
          }
        }
      }
    }
    node {
      name: "Const_67"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
              dim {
                size: 2
              }
            }
            string_val: "shared_embedding_and_softmax_weights"
            string_val: "True"
          }
        }
      }
    }
    node {
      name: "Const_68"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
              dim {
                size: 2
              }
            }
            string_val: "pretrained_model_dir"
            string_val: ""
          }
        }
      }
    }
    node {
      name: "Const_69"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
              dim {
                size: 2
              }
            }
            string_val: "conv_first_kernel"
            string_val: "3"
          }
        }
      }
    }
    node {
      name: "Const_70"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
              dim {
                size: 2
              }
            }
            string_val: "optimizer_momentum_momentum"
            string_val: "0.9"
          }
        }
      }
    }
    node {
      name: "Const_71"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
              dim {
                size: 2
              }
            }
            string_val: "data_dir"
            string_val: "/home/jlewi/git_kubeflow-examples/code_search/src/code_search/t2t/test_data"
          }
        }
      }
    }
    node {
      name: "Const_72"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
              dim {
                size: 2
              }
            }
            string_val: "max_relative_position"
            string_val: "0"
          }
        }
      }
    }
    node {
      name: "Const_73"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
              dim {
                size: 2
              }
            }
            string_val: "learning_rate_decay_steps"
            string_val: "5000"
          }
        }
      }
    }
    node {
      name: "Const_74"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
              dim {
                size: 2
              }
            }
            string_val: "use_pad_remover"
            string_val: "True"
          }
        }
      }
    }
    node {
      name: "Const_75"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
              dim {
                size: 2
              }
            }
            string_val: "attention_dropout"
            string_val: "0.0"
          }
        }
      }
    }
    node {
      name: "Const_76"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
              dim {
                size: 2
              }
            }
            string_val: "multiproblem_label_weight"
            string_val: "0.5"
          }
        }
      }
    }
    node {
      name: "Const_77"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
              dim {
                size: 2
              }
            }
            string_val: "weight_decay"
            string_val: "0.0"
          }
        }
      }
    }
    node {
      name: "Const_78"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
              dim {
                size: 2
              }
            }
            string_val: "initializer"
            string_val: "uniform_unit_scaling"
          }
        }
      }
    }
    node {
      name: "Const_79"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
              dim {
                size: 2
              }
            }
            string_val: "optimizer_adam_beta2"
            string_val: "0.997"
          }
        }
      }
    }
    node {
      name: "Const_80"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
              dim {
                size: 2
              }
            }
            string_val: "max_target_seq_length"
            string_val: "0"
          }
        }
      }
    }
    node {
      name: "Const_81"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
              dim {
                size: 2
              }
            }
            string_val: "eval_run_autoregressive"
            string_val: "False"
          }
        }
      }
    }
    node {
      name: "Const_82"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
              dim {
                size: 2
              }
            }
            string_val: "symbol_modality_skip_top"
            string_val: "False"
          }
        }
      }
    }
    node {
      name: "Const_83"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
              dim {
                size: 2
              }
            }
            string_val: "moe_overhead_eval"
            string_val: "2.0"
          }
        }
      }
    }
    node {
      name: "Const_84"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
              dim {
                size: 2
              }
            }
            string_val: "min_length_bucket"
            string_val: "8"
          }
        }
      }
    }
    node {
      name: "Const_85"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
              dim {
                size: 2
              }
            }
            string_val: "causal_decoder_self_attention"
            string_val: "True"
          }
        }
      }
    }
    node {
      name: "Const_86"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
              dim {
                size: 2
              }
            }
            string_val: "daisy_chain_variables"
            string_val: "True"
          }
        }
      }
    }
    node {
      name: "Const_87"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
              dim {
                size: 2
              }
            }
            string_val: "scheduled_sampling_prob"
            string_val: "0.0"
          }
        }
      }
    }
    node {
      name: "Const_88"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
              dim {
                size: 2
              }
            }
            string_val: "factored_logits"
            string_val: "False"
          }
        }
      }
    }
    node {
      name: "Const_89"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
              dim {
                size: 2
              }
            }
            string_val: "label_smoothing"
            string_val: "0.0"
          }
        }
      }
    }
    node {
      name: "Const_90"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
              dim {
                size: 2
              }
            }
            string_val: "multiproblem_schedule_threshold"
            string_val: "0.5"
          }
        }
      }
    }
    node {
      name: "Const_91"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
              dim {
                size: 2
              }
            }
            string_val: "moe_hidden_sizes"
            string_val: "2048"
          }
        }
      }
    }
    node {
      name: "Const_92"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
              dim {
                size: 2
              }
            }
            string_val: "mode"
            string_val: "infer"
          }
        }
      }
    }
    node {
      name: "Const_93"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
              dim {
                size: 2
              }
            }
            string_val: "learning_rate_decay_scheme"
            string_val: "noam"
          }
        }
      }
    }
    node {
      name: "Const_94"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
              dim {
                size: 2
              }
            }
            string_val: "multiproblem_class_loss_multiplier"
            string_val: "0.0"
          }
        }
      }
    }
    node {
      name: "Const_95"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
              dim {
                size: 2
              }
            }
            string_val: "norm_type"
            string_val: "layer"
          }
        }
      }
    }
    node {
      name: "Const_96"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
              dim {
                size: 2
              }
            }
            string_val: "attention_key_channels"
            string_val: "0"
          }
        }
      }
    }
    node {
      name: "Const_97"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
              dim {
                size: 2
              }
            }
            string_val: "optimizer_adam_beta1"
            string_val: "0.9"
          }
        }
      }
    }
    node {
      name: "Const_98"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
              dim {
                size: 2
              }
            }
            string_val: "length_bucket_step"
            string_val: "1.1"
          }
        }
      }
    }
    node {
      name: "Const_99"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
              dim {
                size: 2
              }
            }
            string_val: "min_length"
            string_val: "0"
          }
        }
      }
    }
    node {
      name: "Const_100"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
              dim {
                size: 2
              }
            }
            string_val: "kernel_height"
            string_val: "3"
          }
        }
      }
    }
    node {
      name: "Const_101"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
              dim {
                size: 2
              }
            }
            string_val: "multiproblem_reweight_label_loss"
            string_val: "False"
          }
        }
      }
    }
    node {
      name: "Const_102"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
              dim {
                size: 2
              }
            }
            string_val: "moe_num_experts"
            string_val: "16"
          }
        }
      }
    }
    node {
      name: "Const_103"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
              dim {
                size: 2
              }
            }
            string_val: "nbr_decoder_problems"
            string_val: "1"
          }
        }
      }
    }
    node {
      name: "Const_104"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
              dim {
                size: 2
              }
            }
            string_val: "proximity_bias"
            string_val: "False"
          }
        }
      }
    }
    node {
      name: "Const_105"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
              dim {
                size: 2
              }
            }
            string_val: "force_full_predict"
            string_val: "False"
          }
        }
      }
    }
    node {
      name: "Const_106"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
              dim {
                size: 2
              }
            }
            string_val: "symbol_dropout"
            string_val: "0.0"
          }
        }
      }
    }
    node {
      name: "Const_107"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
              dim {
                size: 2
              }
            }
            string_val: "split_to_length"
            string_val: "0"
          }
        }
      }
    }
    node {
      name: "Const_108"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
              dim {
                size: 2
              }
            }
            string_val: "learning_rate_minimum"
            string_val: "None"
          }
        }
      }
    }
    node {
      name: "Const_109"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
              dim {
                size: 2
              }
            }
            string_val: "use_fixed_batch_size"
            string_val: "False"
          }
        }
      }
    }
    node {
      name: "Const_110"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
              dim {
                size: 2
              }
            }
            string_val: "parameter_attention_value_channels"
            string_val: "0"
          }
        }
      }
    }
    node {
      name: "Const_111"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
              dim {
                size: 2
              }
            }
            string_val: "activation_dtype"
            string_val: "float32"
          }
        }
      }
    }
    node {
      name: "Const_112"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
              dim {
                size: 2
              }
            }
            string_val: "num_heads"
            string_val: "4"
          }
        }
      }
    }
    node {
      name: "Const_113"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
              dim {
                size: 2
              }
            }
            string_val: "filter_size"
            string_val: "512"
          }
        }
      }
    }
    node {
      name: "Const_114"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
              dim {
                size: 2
              }
            }
            string_val: "optimizer_adafactor_multiply_by_parameter_scale"
            string_val: "True"
          }
        }
      }
    }
    node {
      name: "Const_115"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
              dim {
                size: 2
              }
            }
            string_val: "add_relative_to_values"
            string_val: "False"
          }
        }
      }
    }
    node {
      name: "Const_116"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
              dim {
                size: 2
              }
            }
            string_val: "optimizer_adam_epsilon"
            string_val: "1e-09"
          }
        }
      }
    }
    node {
      name: "Const_117"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
              dim {
                size: 2
              }
            }
            string_val: "scheduled_sampling_gold_mixin_prob"
            string_val: "0.5"
          }
        }
      }
    }
    node {
      name: "Const_118"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
              dim {
                size: 2
              }
            }
            string_val: "hidden_size"
            string_val: "128"
          }
        }
      }
    }
    node {
      name: "Const_119"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
              dim {
                size: 2
              }
            }
            string_val: "layer_prepostprocess_dropout_broadcast_dims"
            string_val: ""
          }
        }
      }
    }
    node {
      name: "Const_120"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
              dim {
                size: 2
              }
            }
            string_val: "learning_rate_cosine_cycle_steps"
            string_val: "250000"
          }
        }
      }
    }
    node {
      name: "Const_121"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
              dim {
                size: 2
              }
            }
            string_val: "learning_rate_schedule"
            string_val: "constant*linear_warmup*rsqrt_decay*rsqrt_hidden_size"
          }
        }
      }
    }
    node {
      name: "Const_122"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
              dim {
                size: 2
              }
            }
            string_val: "learning_rate_decay_staircase"
            string_val: "False"
          }
        }
      }
    }
    node {
      name: "Const_123"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
              dim {
                size: 2
              }
            }
            string_val: "attention_variables_3d"
            string_val: "False"
          }
        }
      }
    }
    node {
      name: "Const_124"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
              dim {
                size: 2
              }
            }
            string_val: "heads_share_relative_embedding"
            string_val: "False"
          }
        }
      }
    }
    node {
      name: "stack"
      op: "Pack"
      input: "Const_4"
      input: "Const_5"
      input: "Const_6"
      input: "Const_7"
      input: "Const_8"
      input: "Const_9"
      input: "Const_10"
      input: "Const_11"
      input: "Const_12"
      input: "Const_13"
      input: "Const_14"
      input: "Const_15"
      input: "Const_16"
      input: "Const_17"
      input: "Const_18"
      input: "Const_19"
      input: "Const_20"
      input: "Const_21"
      input: "Const_22"
      input: "Const_23"
      input: "Const_24"
      input: "Const_25"
      input: "Const_26"
      input: "Const_27"
      input: "Const_28"
      input: "Const_29"
      input: "Const_30"
      input: "Const_31"
      input: "Const_32"
      input: "Const_33"
      input: "Const_34"
      input: "Const_35"
      input: "Const_36"
      input: "Const_37"
      input: "Const_38"
      input: "Const_39"
      input: "Const_40"
      input: "Const_41"
      input: "Const_42"
      input: "Const_43"
      input: "Const_44"
      input: "Const_45"
      input: "Const_46"
      input: "Const_47"
      input: "Const_48"
      input: "Const_49"
      input: "Const_50"
      input: "Const_51"
      input: "Const_52"
      input: "Const_53"
      input: "Const_54"
      input: "Const_55"
      input: "Const_56"
      input: "Const_57"
      input: "Const_58"
      input: "Const_59"
      input: "Const_60"
      input: "Const_61"
      input: "Const_62"
      input: "Const_63"
      input: "Const_64"
      input: "Const_65"
      input: "Const_66"
      input: "Const_67"
      input: "Const_68"
      input: "Const_69"
      input: "Const_70"
      input: "Const_71"
      input: "Const_72"
      input: "Const_73"
      input: "Const_74"
      input: "Const_75"
      input: "Const_76"
      input: "Const_77"
      input: "Const_78"
      input: "Const_79"
      input: "Const_80"
      input: "Const_81"
      input: "Const_82"
      input: "Const_83"
      input: "Const_84"
      input: "Const_85"
      input: "Const_86"
      input: "Const_87"
      input: "Const_88"
      input: "Const_89"
      input: "Const_90"
      input: "Const_91"
      input: "Const_92"
      input: "Const_93"
      input: "Const_94"
      input: "Const_95"
      input: "Const_96"
      input: "Const_97"
      input: "Const_98"
      input: "Const_99"
      input: "Const_100"
      input: "Const_101"
      input: "Const_102"
      input: "Const_103"
      input: "Const_104"
      input: "Const_105"
      input: "Const_106"
      input: "Const_107"
      input: "Const_108"
      input: "Const_109"
      input: "Const_110"
      input: "Const_111"
      input: "Const_112"
      input: "Const_113"
      input: "Const_114"
      input: "Const_115"
      input: "Const_116"
      input: "Const_117"
      input: "Const_118"
      input: "Const_119"
      input: "Const_120"
      input: "Const_121"
      input: "Const_122"
      input: "Const_123"
      input: "Const_124"
      attr {
        key: "N"
        value {
          i: 121
        }
      }
      attr {
        key: "T"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 121
              }
              dim {
                size: 2
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer_hparams/tag"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
            }
            string_val: "cs_similarity_transformer_hparams"
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer_hparams/serialized_summary_metadata"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
            }
            string_val: "\n\006\n\004text"
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer_hparams"
      op: "TensorSummaryV2"
      input: "cs_similarity_transformer_hparams/tag"
      input: "stack"
      input: "cs_similarity_transformer_hparams/serialized_summary_metadata"
      attr {
        key: "T"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "Const_125"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
              dim {
                size: 2
              }
            }
            string_val: "input_modality"
            string_val: "{}"
          }
        }
      }
    }
    node {
      name: "Const_126"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
              dim {
                size: 2
              }
            }
            string_val: "target_modality"
            string_val: "None"
          }
        }
      }
    }
    node {
      name: "Const_127"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
              dim {
                size: 2
              }
            }
            string_val: "stop_at_eos"
            string_val: "1"
          }
        }
      }
    }
    node {
      name: "Const_128"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
              dim {
                size: 2
              }
            }
            string_val: "was_reversed"
            string_val: "False"
          }
        }
      }
    }
    node {
      name: "Const_129"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
              dim {
                size: 2
              }
            }
            string_val: "target_space_id"
            string_val: "0"
          }
        }
      }
    }
    node {
      name: "Const_130"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
              dim {
                size: 2
              }
            }
            string_val: "loss_multiplier"
            string_val: "1.0"
          }
        }
      }
    }
    node {
      name: "Const_131"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
              dim {
                size: 2
              }
            }
            string_val: "input_space_id"
            string_val: "0"
          }
        }
      }
    }
    node {
      name: "Const_132"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
              dim {
                size: 2
              }
            }
            string_val: "was_copy"
            string_val: "False"
          }
        }
      }
    }
    node {
      name: "Const_133"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
              dim {
                size: 2
              }
            }
            string_val: "batch_size_multiplier"
            string_val: "1"
          }
        }
      }
    }
    node {
      name: "Const_134"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
              dim {
                size: 2
              }
            }
            string_val: "vocabulary"
            string_val: "{\'inputs\': <tensor2tensor.data_generators.text_encoder.SubwordTextEncoder object at 0x7f3264b99fd0>, \'targets\': <tensor2tensor.data_generators.text_encoder.SubwordTextEncoder object at 0x7f3264b99fd0>}"
          }
        }
      }
    }
    node {
      name: "stack_1"
      op: "Pack"
      input: "Const_125"
      input: "Const_126"
      input: "Const_127"
      input: "Const_128"
      input: "Const_129"
      input: "Const_130"
      input: "Const_131"
      input: "Const_132"
      input: "Const_133"
      input: "Const_134"
      attr {
        key: "N"
        value {
          i: 10
        }
      }
      attr {
        key: "T"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 10
              }
              dim {
                size: 2
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer_problem_hparams/tag"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
            }
            string_val: "cs_similarity_transformer_problem_hparams"
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer_problem_hparams/serialized_summary_metadata"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
            }
            string_val: "\n\006\n\004text"
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer_problem_hparams"
      op: "TensorSummaryV2"
      input: "cs_similarity_transformer_problem_hparams/tag"
      input: "stack_1"
      input: "cs_similarity_transformer_problem_hparams/serialized_summary_metadata"
      attr {
        key: "T"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/input_space_id"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/target_space_id"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/input_stats/Shape"
      op: "Shape"
      input: "DatasetToSingleElement"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/input_stats/strided_slice/stack"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/input_stats/strided_slice/stack_1"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/input_stats/strided_slice/stack_2"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/input_stats/strided_slice"
      op: "StridedSlice"
      input: "cs_similarity_transformer/input_stats/Shape"
      input: "cs_similarity_transformer/input_stats/strided_slice/stack"
      input: "cs_similarity_transformer/input_stats/strided_slice/stack_1"
      input: "cs_similarity_transformer/input_stats/strided_slice/stack_2"
      attr {
        key: "Index"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "shrink_axis_mask"
        value {
          i: 1
        }
      }
    }
    node {
      name: "cs_similarity_transformer/input_stats/floordiv/y"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/input_stats/floordiv"
      op: "FloorDiv"
      input: "cs_similarity_transformer/input_stats/strided_slice"
      input: "cs_similarity_transformer/input_stats/floordiv/y"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/input_stats/batch_prediction_key_batch/tags"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
            }
            string_val: "cs_similarity_transformer/input_stats/batch_prediction_key_batch"
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/input_stats/batch_prediction_key_batch"
      op: "ScalarSummary"
      input: "cs_similarity_transformer/input_stats/batch_prediction_key_batch/tags"
      input: "cs_similarity_transformer/input_stats/floordiv"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/input_stats/Shape_1"
      op: "Shape"
      input: "DatasetToSingleElement"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/input_stats/strided_slice_1/stack"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/input_stats/strided_slice_1/stack_1"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 2
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/input_stats/strided_slice_1/stack_2"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/input_stats/strided_slice_1"
      op: "StridedSlice"
      input: "cs_similarity_transformer/input_stats/Shape_1"
      input: "cs_similarity_transformer/input_stats/strided_slice_1/stack"
      input: "cs_similarity_transformer/input_stats/strided_slice_1/stack_1"
      input: "cs_similarity_transformer/input_stats/strided_slice_1/stack_2"
      attr {
        key: "Index"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "shrink_axis_mask"
        value {
          i: 1
        }
      }
    }
    node {
      name: "cs_similarity_transformer/input_stats/batch_prediction_key_length/tags"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
            }
            string_val: "cs_similarity_transformer/input_stats/batch_prediction_key_length"
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/input_stats/batch_prediction_key_length"
      op: "ScalarSummary"
      input: "cs_similarity_transformer/input_stats/batch_prediction_key_length/tags"
      input: "cs_similarity_transformer/input_stats/strided_slice_1"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/input_stats/NotEqual/y"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/input_stats/NotEqual"
      op: "NotEqual"
      input: "DatasetToSingleElement"
      input: "cs_similarity_transformer/input_stats/NotEqual/y"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/input_stats/ToFloat"
      op: "Cast"
      input: "cs_similarity_transformer/input_stats/NotEqual"
      attr {
        key: "DstT"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "SrcT"
        value {
          type: DT_BOOL
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/input_stats/Const"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 2
              }
            }
            tensor_content: "\000\000\000\000\001\000\000\000"
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/input_stats/Sum"
      op: "Sum"
      input: "cs_similarity_transformer/input_stats/ToFloat"
      input: "cs_similarity_transformer/input_stats/Const"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/input_stats/batch_prediction_key_nonpadding_tokens/tags"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
            }
            string_val: "cs_similarity_transformer/input_stats/batch_prediction_key_nonpadding_tokens"
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/input_stats/batch_prediction_key_nonpadding_tokens"
      op: "ScalarSummary"
      input: "cs_similarity_transformer/input_stats/batch_prediction_key_nonpadding_tokens/tags"
      input: "cs_similarity_transformer/input_stats/Sum"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/input_stats/Const_1"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 2
              }
            }
            tensor_content: "\000\000\000\000\001\000\000\000"
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/input_stats/Mean"
      op: "Mean"
      input: "cs_similarity_transformer/input_stats/ToFloat"
      input: "cs_similarity_transformer/input_stats/Const_1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/input_stats/batch_prediction_key_nonpadding_fraction/tags"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
            }
            string_val: "cs_similarity_transformer/input_stats/batch_prediction_key_nonpadding_fraction"
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/input_stats/batch_prediction_key_nonpadding_fraction"
      op: "ScalarSummary"
      input: "cs_similarity_transformer/input_stats/batch_prediction_key_nonpadding_fraction/tags"
      input: "cs_similarity_transformer/input_stats/Mean"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/input_stats/Shape_2"
      op: "Shape"
      input: "DatasetToSingleElement:1"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/input_stats/strided_slice_2/stack"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/input_stats/strided_slice_2/stack_1"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/input_stats/strided_slice_2/stack_2"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/input_stats/strided_slice_2"
      op: "StridedSlice"
      input: "cs_similarity_transformer/input_stats/Shape_2"
      input: "cs_similarity_transformer/input_stats/strided_slice_2/stack"
      input: "cs_similarity_transformer/input_stats/strided_slice_2/stack_1"
      input: "cs_similarity_transformer/input_stats/strided_slice_2/stack_2"
      attr {
        key: "Index"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "shrink_axis_mask"
        value {
          i: 1
        }
      }
    }
    node {
      name: "cs_similarity_transformer/input_stats/floordiv_1/y"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/input_stats/floordiv_1"
      op: "FloorDiv"
      input: "cs_similarity_transformer/input_stats/strided_slice_2"
      input: "cs_similarity_transformer/input_stats/floordiv_1/y"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/input_stats/embed_code_batch/tags"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
            }
            string_val: "cs_similarity_transformer/input_stats/embed_code_batch"
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/input_stats/embed_code_batch"
      op: "ScalarSummary"
      input: "cs_similarity_transformer/input_stats/embed_code_batch/tags"
      input: "cs_similarity_transformer/input_stats/floordiv_1"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/input_stats/Shape_3"
      op: "Shape"
      input: "DatasetToSingleElement:1"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/input_stats/strided_slice_3/stack"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/input_stats/strided_slice_3/stack_1"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 2
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/input_stats/strided_slice_3/stack_2"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/input_stats/strided_slice_3"
      op: "StridedSlice"
      input: "cs_similarity_transformer/input_stats/Shape_3"
      input: "cs_similarity_transformer/input_stats/strided_slice_3/stack"
      input: "cs_similarity_transformer/input_stats/strided_slice_3/stack_1"
      input: "cs_similarity_transformer/input_stats/strided_slice_3/stack_2"
      attr {
        key: "Index"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "shrink_axis_mask"
        value {
          i: 1
        }
      }
    }
    node {
      name: "cs_similarity_transformer/input_stats/embed_code_length/tags"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
            }
            string_val: "cs_similarity_transformer/input_stats/embed_code_length"
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/input_stats/embed_code_length"
      op: "ScalarSummary"
      input: "cs_similarity_transformer/input_stats/embed_code_length/tags"
      input: "cs_similarity_transformer/input_stats/strided_slice_3"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/input_stats/NotEqual_1/y"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/input_stats/NotEqual_1"
      op: "NotEqual"
      input: "DatasetToSingleElement:1"
      input: "cs_similarity_transformer/input_stats/NotEqual_1/y"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/input_stats/ToFloat_1"
      op: "Cast"
      input: "cs_similarity_transformer/input_stats/NotEqual_1"
      attr {
        key: "DstT"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "SrcT"
        value {
          type: DT_BOOL
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/input_stats/Const_2"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 2
              }
            }
            tensor_content: "\000\000\000\000\001\000\000\000"
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/input_stats/Sum_1"
      op: "Sum"
      input: "cs_similarity_transformer/input_stats/ToFloat_1"
      input: "cs_similarity_transformer/input_stats/Const_2"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/input_stats/embed_code_nonpadding_tokens/tags"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
            }
            string_val: "cs_similarity_transformer/input_stats/embed_code_nonpadding_tokens"
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/input_stats/embed_code_nonpadding_tokens"
      op: "ScalarSummary"
      input: "cs_similarity_transformer/input_stats/embed_code_nonpadding_tokens/tags"
      input: "cs_similarity_transformer/input_stats/Sum_1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/input_stats/Const_3"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 2
              }
            }
            tensor_content: "\000\000\000\000\001\000\000\000"
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/input_stats/Mean_1"
      op: "Mean"
      input: "cs_similarity_transformer/input_stats/ToFloat_1"
      input: "cs_similarity_transformer/input_stats/Const_3"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/input_stats/embed_code_nonpadding_fraction/tags"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
            }
            string_val: "cs_similarity_transformer/input_stats/embed_code_nonpadding_fraction"
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/input_stats/embed_code_nonpadding_fraction"
      op: "ScalarSummary"
      input: "cs_similarity_transformer/input_stats/embed_code_nonpadding_fraction/tags"
      input: "cs_similarity_transformer/input_stats/Mean_1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/input_stats/Shape_4"
      op: "Shape"
      input: "DatasetToSingleElement:2"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 4
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/input_stats/strided_slice_4/stack"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/input_stats/strided_slice_4/stack_1"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/input_stats/strided_slice_4/stack_2"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/input_stats/strided_slice_4"
      op: "StridedSlice"
      input: "cs_similarity_transformer/input_stats/Shape_4"
      input: "cs_similarity_transformer/input_stats/strided_slice_4/stack"
      input: "cs_similarity_transformer/input_stats/strided_slice_4/stack_1"
      input: "cs_similarity_transformer/input_stats/strided_slice_4/stack_2"
      attr {
        key: "Index"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "shrink_axis_mask"
        value {
          i: 1
        }
      }
    }
    node {
      name: "cs_similarity_transformer/input_stats/floordiv_2/y"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/input_stats/floordiv_2"
      op: "FloorDiv"
      input: "cs_similarity_transformer/input_stats/strided_slice_4"
      input: "cs_similarity_transformer/input_stats/floordiv_2/y"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/input_stats/inputs_batch/tags"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
            }
            string_val: "cs_similarity_transformer/input_stats/inputs_batch"
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/input_stats/inputs_batch"
      op: "ScalarSummary"
      input: "cs_similarity_transformer/input_stats/inputs_batch/tags"
      input: "cs_similarity_transformer/input_stats/floordiv_2"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/input_stats/Shape_5"
      op: "Shape"
      input: "DatasetToSingleElement:2"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 4
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/input_stats/strided_slice_5/stack"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/input_stats/strided_slice_5/stack_1"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 2
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/input_stats/strided_slice_5/stack_2"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/input_stats/strided_slice_5"
      op: "StridedSlice"
      input: "cs_similarity_transformer/input_stats/Shape_5"
      input: "cs_similarity_transformer/input_stats/strided_slice_5/stack"
      input: "cs_similarity_transformer/input_stats/strided_slice_5/stack_1"
      input: "cs_similarity_transformer/input_stats/strided_slice_5/stack_2"
      attr {
        key: "Index"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "shrink_axis_mask"
        value {
          i: 1
        }
      }
    }
    node {
      name: "cs_similarity_transformer/input_stats/inputs_length/tags"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
            }
            string_val: "cs_similarity_transformer/input_stats/inputs_length"
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/input_stats/inputs_length"
      op: "ScalarSummary"
      input: "cs_similarity_transformer/input_stats/inputs_length/tags"
      input: "cs_similarity_transformer/input_stats/strided_slice_5"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/input_stats/NotEqual_2/y"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/input_stats/NotEqual_2"
      op: "NotEqual"
      input: "DatasetToSingleElement:2"
      input: "cs_similarity_transformer/input_stats/NotEqual_2/y"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: -1
              }
              dim {
                size: 1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/input_stats/ToFloat_2"
      op: "Cast"
      input: "cs_similarity_transformer/input_stats/NotEqual_2"
      attr {
        key: "DstT"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "SrcT"
        value {
          type: DT_BOOL
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: -1
              }
              dim {
                size: 1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/input_stats/Const_4"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 4
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 4
              }
            }
            tensor_content: "\000\000\000\000\001\000\000\000\002\000\000\000\003\000\000\000"
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/input_stats/Sum_2"
      op: "Sum"
      input: "cs_similarity_transformer/input_stats/ToFloat_2"
      input: "cs_similarity_transformer/input_stats/Const_4"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/input_stats/inputs_nonpadding_tokens/tags"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
            }
            string_val: "cs_similarity_transformer/input_stats/inputs_nonpadding_tokens"
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/input_stats/inputs_nonpadding_tokens"
      op: "ScalarSummary"
      input: "cs_similarity_transformer/input_stats/inputs_nonpadding_tokens/tags"
      input: "cs_similarity_transformer/input_stats/Sum_2"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/input_stats/Const_5"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 4
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 4
              }
            }
            tensor_content: "\000\000\000\000\001\000\000\000\002\000\000\000\003\000\000\000"
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/input_stats/Mean_2"
      op: "Mean"
      input: "cs_similarity_transformer/input_stats/ToFloat_2"
      input: "cs_similarity_transformer/input_stats/Const_5"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/input_stats/inputs_nonpadding_fraction/tags"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
            }
            string_val: "cs_similarity_transformer/input_stats/inputs_nonpadding_fraction"
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/input_stats/inputs_nonpadding_fraction"
      op: "ScalarSummary"
      input: "cs_similarity_transformer/input_stats/inputs_nonpadding_fraction/tags"
      input: "cs_similarity_transformer/input_stats/Mean_2"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/Shape"
      op: "Shape"
      input: "DatasetToSingleElement"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/strided_slice/stack"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/strided_slice/stack_1"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/strided_slice/stack_2"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/strided_slice"
      op: "StridedSlice"
      input: "cs_similarity_transformer/Shape"
      input: "cs_similarity_transformer/strided_slice/stack"
      input: "cs_similarity_transformer/strided_slice/stack_1"
      input: "cs_similarity_transformer/strided_slice/stack_2"
      attr {
        key: "Index"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "shrink_axis_mask"
        value {
          i: 1
        }
      }
    }
    node {
      name: "cs_similarity_transformer/Const"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/split/split_dim"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/split"
      op: "Split"
      input: "cs_similarity_transformer/split/split_dim"
      input: "DatasetToSingleElement"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "num_split"
        value {
          i: 1
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0/cs_similarity_transformer/Identity"
      op: "Identity"
      input: "cs_similarity_transformer/split"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/Shape_1"
      op: "Shape"
      input: "DatasetToSingleElement:1"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/strided_slice_1/stack"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/strided_slice_1/stack_1"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/strided_slice_1/stack_2"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/strided_slice_1"
      op: "StridedSlice"
      input: "cs_similarity_transformer/Shape_1"
      input: "cs_similarity_transformer/strided_slice_1/stack"
      input: "cs_similarity_transformer/strided_slice_1/stack_1"
      input: "cs_similarity_transformer/strided_slice_1/stack_2"
      attr {
        key: "Index"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "shrink_axis_mask"
        value {
          i: 1
        }
      }
    }
    node {
      name: "cs_similarity_transformer/Const_1"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/split_1/split_dim"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/split_1"
      op: "Split"
      input: "cs_similarity_transformer/split_1/split_dim"
      input: "DatasetToSingleElement:1"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "num_split"
        value {
          i: 1
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_1/cs_similarity_transformer/Identity"
      op: "Identity"
      input: "cs_similarity_transformer/split_1"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/Shape_2"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/ExpandDims/dim"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: -1
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/ExpandDims"
      op: "ExpandDims"
      input: "cs_similarity_transformer/input_space_id"
      input: "cs_similarity_transformer/ExpandDims/dim"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/ToInt32/x"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/Tile"
      op: "Tile"
      input: "cs_similarity_transformer/ExpandDims"
      input: "cs_similarity_transformer/ToInt32/x"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/Const_2"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/split_2/split_dim"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/split_2"
      op: "Split"
      input: "cs_similarity_transformer/split_2/split_dim"
      input: "cs_similarity_transformer/Tile"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "num_split"
        value {
          i: 1
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_2/cs_similarity_transformer/Identity"
      op: "Identity"
      input: "cs_similarity_transformer/split_2"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/Shape_3"
      op: "Shape"
      input: "DatasetToSingleElement:2"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 4
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/strided_slice_2/stack"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/strided_slice_2/stack_1"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/strided_slice_2/stack_2"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/strided_slice_2"
      op: "StridedSlice"
      input: "cs_similarity_transformer/Shape_3"
      input: "cs_similarity_transformer/strided_slice_2/stack"
      input: "cs_similarity_transformer/strided_slice_2/stack_1"
      input: "cs_similarity_transformer/strided_slice_2/stack_2"
      attr {
        key: "Index"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "shrink_axis_mask"
        value {
          i: 1
        }
      }
    }
    node {
      name: "cs_similarity_transformer/strided_slice_3/stack"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/strided_slice_3/stack_1"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 2
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/strided_slice_3/stack_2"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/strided_slice_3"
      op: "StridedSlice"
      input: "cs_similarity_transformer/Shape_3"
      input: "cs_similarity_transformer/strided_slice_3/stack"
      input: "cs_similarity_transformer/strided_slice_3/stack_1"
      input: "cs_similarity_transformer/strided_slice_3/stack_2"
      attr {
        key: "Index"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "shrink_axis_mask"
        value {
          i: 1
        }
      }
    }
    node {
      name: "cs_similarity_transformer/Const_3"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/split_3/split_dim"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/split_3"
      op: "Split"
      input: "cs_similarity_transformer/split_3/split_dim"
      input: "DatasetToSingleElement:2"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: -1
              }
              dim {
                size: 1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "num_split"
        value {
          i: 1
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_3/cs_similarity_transformer/Identity"
      op: "Identity"
      input: "cs_similarity_transformer/split_3"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: -1
              }
              dim {
                size: 1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/Shape_4"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/ExpandDims_1/dim"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: -1
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/ExpandDims_1"
      op: "ExpandDims"
      input: "cs_similarity_transformer/target_space_id"
      input: "cs_similarity_transformer/ExpandDims_1/dim"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/ToInt32_1/x"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/Tile_1"
      op: "Tile"
      input: "cs_similarity_transformer/ExpandDims_1"
      input: "cs_similarity_transformer/ToInt32_1/x"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/Const_4"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/split_4/split_dim"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/split_4"
      op: "Split"
      input: "cs_similarity_transformer/split_4/split_dim"
      input: "cs_similarity_transformer/Tile_1"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "num_split"
        value {
          i: 1
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_4/cs_similarity_transformer/Identity"
      op: "Identity"
      input: "cs_similarity_transformer/split_4"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/symbol_modality_8164_128/shared/Squeeze"
      op: "Squeeze"
      input: "cs_similarity_transformer/parallel_0_3/cs_similarity_transformer/Identity"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "squeeze_dims"
        value {
          list {
            i: 3
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/symbol_modality_8164_128/shared/weights_0/Initializer/random_normal/shape"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@cs_similarity_transformer/symbol_modality_8164_128/shared/weights_0"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 2
              }
            }
            tensor_content: "\377\001\000\000\200\000\000\000"
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/symbol_modality_8164_128/shared/weights_0/Initializer/random_normal/mean"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@cs_similarity_transformer/symbol_modality_8164_128/shared/weights_0"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.0
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/symbol_modality_8164_128/shared/weights_0/Initializer/random_normal/stddev"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@cs_similarity_transformer/symbol_modality_8164_128/shared/weights_0"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.0883883461356163
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/symbol_modality_8164_128/shared/weights_0/Initializer/random_normal/RandomStandardNormal"
      op: "RandomStandardNormal"
      input: "cs_similarity_transformer/symbol_modality_8164_128/shared/weights_0/Initializer/random_normal/shape"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@cs_similarity_transformer/symbol_modality_8164_128/shared/weights_0"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 511
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "cs_similarity_transformer/symbol_modality_8164_128/shared/weights_0/Initializer/random_normal/mul"
      op: "Mul"
      input: "cs_similarity_transformer/symbol_modality_8164_128/shared/weights_0/Initializer/random_normal/RandomStandardNormal"
      input: "cs_similarity_transformer/symbol_modality_8164_128/shared/weights_0/Initializer/random_normal/stddev"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@cs_similarity_transformer/symbol_modality_8164_128/shared/weights_0"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 511
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/symbol_modality_8164_128/shared/weights_0/Initializer/random_normal"
      op: "Add"
      input: "cs_similarity_transformer/symbol_modality_8164_128/shared/weights_0/Initializer/random_normal/mul"
      input: "cs_similarity_transformer/symbol_modality_8164_128/shared/weights_0/Initializer/random_normal/mean"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@cs_similarity_transformer/symbol_modality_8164_128/shared/weights_0"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 511
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/symbol_modality_8164_128/shared/weights_0"
      op: "VarHandleOp"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@cs_similarity_transformer/symbol_modality_8164_128/shared/weights_0"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 511
            }
            dim {
              size: 128
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: "cs_similarity_transformer/symbol_modality_8164_128/shared/weights_0"
        }
      }
    }
    node {
      name: "cs_similarity_transformer/symbol_modality_8164_128/shared/weights_0/IsInitialized/VarIsInitializedOp"
      op: "VarIsInitializedOp"
      input: "cs_similarity_transformer/symbol_modality_8164_128/shared/weights_0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/symbol_modality_8164_128/shared/weights_0/Assign"
      op: "AssignVariableOp"
      input: "cs_similarity_transformer/symbol_modality_8164_128/shared/weights_0"
      input: "cs_similarity_transformer/symbol_modality_8164_128/shared/weights_0/Initializer/random_normal"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@cs_similarity_transformer/symbol_modality_8164_128/shared/weights_0"
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "cs_similarity_transformer/symbol_modality_8164_128/shared/weights_0/Read/ReadVariableOp"
      op: "ReadVariableOp"
      input: "cs_similarity_transformer/symbol_modality_8164_128/shared/weights_0"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@cs_similarity_transformer/symbol_modality_8164_128/shared/weights_0"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 511
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "Read/ReadVariableOp"
      op: "ReadVariableOp"
      input: "cs_similarity_transformer/symbol_modality_8164_128/shared/weights_0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 511
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "Identity"
      op: "Identity"
      input: "Read/ReadVariableOp"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 511
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/symbol_modality_8164_128/shared/weights_1/Initializer/random_normal/shape"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@cs_similarity_transformer/symbol_modality_8164_128/shared/weights_1"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 2
              }
            }
            tensor_content: "\377\001\000\000\200\000\000\000"
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/symbol_modality_8164_128/shared/weights_1/Initializer/random_normal/mean"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@cs_similarity_transformer/symbol_modality_8164_128/shared/weights_1"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.0
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/symbol_modality_8164_128/shared/weights_1/Initializer/random_normal/stddev"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@cs_similarity_transformer/symbol_modality_8164_128/shared/weights_1"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.0883883461356163
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/symbol_modality_8164_128/shared/weights_1/Initializer/random_normal/RandomStandardNormal"
      op: "RandomStandardNormal"
      input: "cs_similarity_transformer/symbol_modality_8164_128/shared/weights_1/Initializer/random_normal/shape"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@cs_similarity_transformer/symbol_modality_8164_128/shared/weights_1"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 511
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "cs_similarity_transformer/symbol_modality_8164_128/shared/weights_1/Initializer/random_normal/mul"
      op: "Mul"
      input: "cs_similarity_transformer/symbol_modality_8164_128/shared/weights_1/Initializer/random_normal/RandomStandardNormal"
      input: "cs_similarity_transformer/symbol_modality_8164_128/shared/weights_1/Initializer/random_normal/stddev"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@cs_similarity_transformer/symbol_modality_8164_128/shared/weights_1"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 511
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/symbol_modality_8164_128/shared/weights_1/Initializer/random_normal"
      op: "Add"
      input: "cs_similarity_transformer/symbol_modality_8164_128/shared/weights_1/Initializer/random_normal/mul"
      input: "cs_similarity_transformer/symbol_modality_8164_128/shared/weights_1/Initializer/random_normal/mean"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@cs_similarity_transformer/symbol_modality_8164_128/shared/weights_1"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 511
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/symbol_modality_8164_128/shared/weights_1"
      op: "VarHandleOp"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@cs_similarity_transformer/symbol_modality_8164_128/shared/weights_1"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 511
            }
            dim {
              size: 128
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: "cs_similarity_transformer/symbol_modality_8164_128/shared/weights_1"
        }
      }
    }
    node {
      name: "cs_similarity_transformer/symbol_modality_8164_128/shared/weights_1/IsInitialized/VarIsInitializedOp"
      op: "VarIsInitializedOp"
      input: "cs_similarity_transformer/symbol_modality_8164_128/shared/weights_1"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/symbol_modality_8164_128/shared/weights_1/Assign"
      op: "AssignVariableOp"
      input: "cs_similarity_transformer/symbol_modality_8164_128/shared/weights_1"
      input: "cs_similarity_transformer/symbol_modality_8164_128/shared/weights_1/Initializer/random_normal"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@cs_similarity_transformer/symbol_modality_8164_128/shared/weights_1"
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "cs_similarity_transformer/symbol_modality_8164_128/shared/weights_1/Read/ReadVariableOp"
      op: "ReadVariableOp"
      input: "cs_similarity_transformer/symbol_modality_8164_128/shared/weights_1"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@cs_similarity_transformer/symbol_modality_8164_128/shared/weights_1"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 511
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "Read_1/ReadVariableOp"
      op: "ReadVariableOp"
      input: "cs_similarity_transformer/symbol_modality_8164_128/shared/weights_1"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 511
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "Identity_1"
      op: "Identity"
      input: "Read_1/ReadVariableOp"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 511
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/symbol_modality_8164_128/shared/weights_2/Initializer/random_normal/shape"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@cs_similarity_transformer/symbol_modality_8164_128/shared/weights_2"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 2
              }
            }
            tensor_content: "\377\001\000\000\200\000\000\000"
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/symbol_modality_8164_128/shared/weights_2/Initializer/random_normal/mean"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@cs_similarity_transformer/symbol_modality_8164_128/shared/weights_2"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.0
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/symbol_modality_8164_128/shared/weights_2/Initializer/random_normal/stddev"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@cs_similarity_transformer/symbol_modality_8164_128/shared/weights_2"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.0883883461356163
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/symbol_modality_8164_128/shared/weights_2/Initializer/random_normal/RandomStandardNormal"
      op: "RandomStandardNormal"
      input: "cs_similarity_transformer/symbol_modality_8164_128/shared/weights_2/Initializer/random_normal/shape"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@cs_similarity_transformer/symbol_modality_8164_128/shared/weights_2"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 511
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "cs_similarity_transformer/symbol_modality_8164_128/shared/weights_2/Initializer/random_normal/mul"
      op: "Mul"
      input: "cs_similarity_transformer/symbol_modality_8164_128/shared/weights_2/Initializer/random_normal/RandomStandardNormal"
      input: "cs_similarity_transformer/symbol_modality_8164_128/shared/weights_2/Initializer/random_normal/stddev"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@cs_similarity_transformer/symbol_modality_8164_128/shared/weights_2"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 511
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/symbol_modality_8164_128/shared/weights_2/Initializer/random_normal"
      op: "Add"
      input: "cs_similarity_transformer/symbol_modality_8164_128/shared/weights_2/Initializer/random_normal/mul"
      input: "cs_similarity_transformer/symbol_modality_8164_128/shared/weights_2/Initializer/random_normal/mean"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@cs_similarity_transformer/symbol_modality_8164_128/shared/weights_2"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 511
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/symbol_modality_8164_128/shared/weights_2"
      op: "VarHandleOp"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@cs_similarity_transformer/symbol_modality_8164_128/shared/weights_2"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 511
            }
            dim {
              size: 128
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: "cs_similarity_transformer/symbol_modality_8164_128/shared/weights_2"
        }
      }
    }
    node {
      name: "cs_similarity_transformer/symbol_modality_8164_128/shared/weights_2/IsInitialized/VarIsInitializedOp"
      op: "VarIsInitializedOp"
      input: "cs_similarity_transformer/symbol_modality_8164_128/shared/weights_2"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/symbol_modality_8164_128/shared/weights_2/Assign"
      op: "AssignVariableOp"
      input: "cs_similarity_transformer/symbol_modality_8164_128/shared/weights_2"
      input: "cs_similarity_transformer/symbol_modality_8164_128/shared/weights_2/Initializer/random_normal"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@cs_similarity_transformer/symbol_modality_8164_128/shared/weights_2"
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "cs_similarity_transformer/symbol_modality_8164_128/shared/weights_2/Read/ReadVariableOp"
      op: "ReadVariableOp"
      input: "cs_similarity_transformer/symbol_modality_8164_128/shared/weights_2"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@cs_similarity_transformer/symbol_modality_8164_128/shared/weights_2"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 511
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "Read_2/ReadVariableOp"
      op: "ReadVariableOp"
      input: "cs_similarity_transformer/symbol_modality_8164_128/shared/weights_2"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 511
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "Identity_2"
      op: "Identity"
      input: "Read_2/ReadVariableOp"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 511
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/symbol_modality_8164_128/shared/weights_3/Initializer/random_normal/shape"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@cs_similarity_transformer/symbol_modality_8164_128/shared/weights_3"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 2
              }
            }
            tensor_content: "\377\001\000\000\200\000\000\000"
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/symbol_modality_8164_128/shared/weights_3/Initializer/random_normal/mean"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@cs_similarity_transformer/symbol_modality_8164_128/shared/weights_3"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.0
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/symbol_modality_8164_128/shared/weights_3/Initializer/random_normal/stddev"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@cs_similarity_transformer/symbol_modality_8164_128/shared/weights_3"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.0883883461356163
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/symbol_modality_8164_128/shared/weights_3/Initializer/random_normal/RandomStandardNormal"
      op: "RandomStandardNormal"
      input: "cs_similarity_transformer/symbol_modality_8164_128/shared/weights_3/Initializer/random_normal/shape"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@cs_similarity_transformer/symbol_modality_8164_128/shared/weights_3"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 511
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "cs_similarity_transformer/symbol_modality_8164_128/shared/weights_3/Initializer/random_normal/mul"
      op: "Mul"
      input: "cs_similarity_transformer/symbol_modality_8164_128/shared/weights_3/Initializer/random_normal/RandomStandardNormal"
      input: "cs_similarity_transformer/symbol_modality_8164_128/shared/weights_3/Initializer/random_normal/stddev"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@cs_similarity_transformer/symbol_modality_8164_128/shared/weights_3"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 511
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/symbol_modality_8164_128/shared/weights_3/Initializer/random_normal"
      op: "Add"
      input: "cs_similarity_transformer/symbol_modality_8164_128/shared/weights_3/Initializer/random_normal/mul"
      input: "cs_similarity_transformer/symbol_modality_8164_128/shared/weights_3/Initializer/random_normal/mean"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@cs_similarity_transformer/symbol_modality_8164_128/shared/weights_3"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 511
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/symbol_modality_8164_128/shared/weights_3"
      op: "VarHandleOp"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@cs_similarity_transformer/symbol_modality_8164_128/shared/weights_3"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 511
            }
            dim {
              size: 128
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: "cs_similarity_transformer/symbol_modality_8164_128/shared/weights_3"
        }
      }
    }
    node {
      name: "cs_similarity_transformer/symbol_modality_8164_128/shared/weights_3/IsInitialized/VarIsInitializedOp"
      op: "VarIsInitializedOp"
      input: "cs_similarity_transformer/symbol_modality_8164_128/shared/weights_3"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/symbol_modality_8164_128/shared/weights_3/Assign"
      op: "AssignVariableOp"
      input: "cs_similarity_transformer/symbol_modality_8164_128/shared/weights_3"
      input: "cs_similarity_transformer/symbol_modality_8164_128/shared/weights_3/Initializer/random_normal"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@cs_similarity_transformer/symbol_modality_8164_128/shared/weights_3"
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "cs_similarity_transformer/symbol_modality_8164_128/shared/weights_3/Read/ReadVariableOp"
      op: "ReadVariableOp"
      input: "cs_similarity_transformer/symbol_modality_8164_128/shared/weights_3"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@cs_similarity_transformer/symbol_modality_8164_128/shared/weights_3"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 511
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "Read_3/ReadVariableOp"
      op: "ReadVariableOp"
      input: "cs_similarity_transformer/symbol_modality_8164_128/shared/weights_3"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 511
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "Identity_3"
      op: "Identity"
      input: "Read_3/ReadVariableOp"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 511
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/symbol_modality_8164_128/shared/weights_4/Initializer/random_normal/shape"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@cs_similarity_transformer/symbol_modality_8164_128/shared/weights_4"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 2
              }
            }
            tensor_content: "\376\001\000\000\200\000\000\000"
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/symbol_modality_8164_128/shared/weights_4/Initializer/random_normal/mean"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@cs_similarity_transformer/symbol_modality_8164_128/shared/weights_4"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.0
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/symbol_modality_8164_128/shared/weights_4/Initializer/random_normal/stddev"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@cs_similarity_transformer/symbol_modality_8164_128/shared/weights_4"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.0883883461356163
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/symbol_modality_8164_128/shared/weights_4/Initializer/random_normal/RandomStandardNormal"
      op: "RandomStandardNormal"
      input: "cs_similarity_transformer/symbol_modality_8164_128/shared/weights_4/Initializer/random_normal/shape"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@cs_similarity_transformer/symbol_modality_8164_128/shared/weights_4"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 510
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "cs_similarity_transformer/symbol_modality_8164_128/shared/weights_4/Initializer/random_normal/mul"
      op: "Mul"
      input: "cs_similarity_transformer/symbol_modality_8164_128/shared/weights_4/Initializer/random_normal/RandomStandardNormal"
      input: "cs_similarity_transformer/symbol_modality_8164_128/shared/weights_4/Initializer/random_normal/stddev"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@cs_similarity_transformer/symbol_modality_8164_128/shared/weights_4"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 510
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/symbol_modality_8164_128/shared/weights_4/Initializer/random_normal"
      op: "Add"
      input: "cs_similarity_transformer/symbol_modality_8164_128/shared/weights_4/Initializer/random_normal/mul"
      input: "cs_similarity_transformer/symbol_modality_8164_128/shared/weights_4/Initializer/random_normal/mean"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@cs_similarity_transformer/symbol_modality_8164_128/shared/weights_4"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 510
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/symbol_modality_8164_128/shared/weights_4"
      op: "VarHandleOp"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@cs_similarity_transformer/symbol_modality_8164_128/shared/weights_4"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 510
            }
            dim {
              size: 128
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: "cs_similarity_transformer/symbol_modality_8164_128/shared/weights_4"
        }
      }
    }
    node {
      name: "cs_similarity_transformer/symbol_modality_8164_128/shared/weights_4/IsInitialized/VarIsInitializedOp"
      op: "VarIsInitializedOp"
      input: "cs_similarity_transformer/symbol_modality_8164_128/shared/weights_4"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/symbol_modality_8164_128/shared/weights_4/Assign"
      op: "AssignVariableOp"
      input: "cs_similarity_transformer/symbol_modality_8164_128/shared/weights_4"
      input: "cs_similarity_transformer/symbol_modality_8164_128/shared/weights_4/Initializer/random_normal"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@cs_similarity_transformer/symbol_modality_8164_128/shared/weights_4"
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "cs_similarity_transformer/symbol_modality_8164_128/shared/weights_4/Read/ReadVariableOp"
      op: "ReadVariableOp"
      input: "cs_similarity_transformer/symbol_modality_8164_128/shared/weights_4"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@cs_similarity_transformer/symbol_modality_8164_128/shared/weights_4"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 510
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "Read_4/ReadVariableOp"
      op: "ReadVariableOp"
      input: "cs_similarity_transformer/symbol_modality_8164_128/shared/weights_4"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 510
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "Identity_4"
      op: "Identity"
      input: "Read_4/ReadVariableOp"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 510
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/symbol_modality_8164_128/shared/weights_5/Initializer/random_normal/shape"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@cs_similarity_transformer/symbol_modality_8164_128/shared/weights_5"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 2
              }
            }
            tensor_content: "\376\001\000\000\200\000\000\000"
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/symbol_modality_8164_128/shared/weights_5/Initializer/random_normal/mean"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@cs_similarity_transformer/symbol_modality_8164_128/shared/weights_5"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.0
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/symbol_modality_8164_128/shared/weights_5/Initializer/random_normal/stddev"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@cs_similarity_transformer/symbol_modality_8164_128/shared/weights_5"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.0883883461356163
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/symbol_modality_8164_128/shared/weights_5/Initializer/random_normal/RandomStandardNormal"
      op: "RandomStandardNormal"
      input: "cs_similarity_transformer/symbol_modality_8164_128/shared/weights_5/Initializer/random_normal/shape"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@cs_similarity_transformer/symbol_modality_8164_128/shared/weights_5"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 510
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "cs_similarity_transformer/symbol_modality_8164_128/shared/weights_5/Initializer/random_normal/mul"
      op: "Mul"
      input: "cs_similarity_transformer/symbol_modality_8164_128/shared/weights_5/Initializer/random_normal/RandomStandardNormal"
      input: "cs_similarity_transformer/symbol_modality_8164_128/shared/weights_5/Initializer/random_normal/stddev"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@cs_similarity_transformer/symbol_modality_8164_128/shared/weights_5"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 510
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/symbol_modality_8164_128/shared/weights_5/Initializer/random_normal"
      op: "Add"
      input: "cs_similarity_transformer/symbol_modality_8164_128/shared/weights_5/Initializer/random_normal/mul"
      input: "cs_similarity_transformer/symbol_modality_8164_128/shared/weights_5/Initializer/random_normal/mean"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@cs_similarity_transformer/symbol_modality_8164_128/shared/weights_5"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 510
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/symbol_modality_8164_128/shared/weights_5"
      op: "VarHandleOp"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@cs_similarity_transformer/symbol_modality_8164_128/shared/weights_5"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 510
            }
            dim {
              size: 128
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: "cs_similarity_transformer/symbol_modality_8164_128/shared/weights_5"
        }
      }
    }
    node {
      name: "cs_similarity_transformer/symbol_modality_8164_128/shared/weights_5/IsInitialized/VarIsInitializedOp"
      op: "VarIsInitializedOp"
      input: "cs_similarity_transformer/symbol_modality_8164_128/shared/weights_5"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/symbol_modality_8164_128/shared/weights_5/Assign"
      op: "AssignVariableOp"
      input: "cs_similarity_transformer/symbol_modality_8164_128/shared/weights_5"
      input: "cs_similarity_transformer/symbol_modality_8164_128/shared/weights_5/Initializer/random_normal"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@cs_similarity_transformer/symbol_modality_8164_128/shared/weights_5"
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "cs_similarity_transformer/symbol_modality_8164_128/shared/weights_5/Read/ReadVariableOp"
      op: "ReadVariableOp"
      input: "cs_similarity_transformer/symbol_modality_8164_128/shared/weights_5"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@cs_similarity_transformer/symbol_modality_8164_128/shared/weights_5"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 510
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "Read_5/ReadVariableOp"
      op: "ReadVariableOp"
      input: "cs_similarity_transformer/symbol_modality_8164_128/shared/weights_5"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 510
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "Identity_5"
      op: "Identity"
      input: "Read_5/ReadVariableOp"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 510
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/symbol_modality_8164_128/shared/weights_6/Initializer/random_normal/shape"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@cs_similarity_transformer/symbol_modality_8164_128/shared/weights_6"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 2
              }
            }
            tensor_content: "\376\001\000\000\200\000\000\000"
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/symbol_modality_8164_128/shared/weights_6/Initializer/random_normal/mean"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@cs_similarity_transformer/symbol_modality_8164_128/shared/weights_6"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.0
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/symbol_modality_8164_128/shared/weights_6/Initializer/random_normal/stddev"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@cs_similarity_transformer/symbol_modality_8164_128/shared/weights_6"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.0883883461356163
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/symbol_modality_8164_128/shared/weights_6/Initializer/random_normal/RandomStandardNormal"
      op: "RandomStandardNormal"
      input: "cs_similarity_transformer/symbol_modality_8164_128/shared/weights_6/Initializer/random_normal/shape"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@cs_similarity_transformer/symbol_modality_8164_128/shared/weights_6"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 510
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "cs_similarity_transformer/symbol_modality_8164_128/shared/weights_6/Initializer/random_normal/mul"
      op: "Mul"
      input: "cs_similarity_transformer/symbol_modality_8164_128/shared/weights_6/Initializer/random_normal/RandomStandardNormal"
      input: "cs_similarity_transformer/symbol_modality_8164_128/shared/weights_6/Initializer/random_normal/stddev"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@cs_similarity_transformer/symbol_modality_8164_128/shared/weights_6"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 510
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/symbol_modality_8164_128/shared/weights_6/Initializer/random_normal"
      op: "Add"
      input: "cs_similarity_transformer/symbol_modality_8164_128/shared/weights_6/Initializer/random_normal/mul"
      input: "cs_similarity_transformer/symbol_modality_8164_128/shared/weights_6/Initializer/random_normal/mean"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@cs_similarity_transformer/symbol_modality_8164_128/shared/weights_6"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 510
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/symbol_modality_8164_128/shared/weights_6"
      op: "VarHandleOp"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@cs_similarity_transformer/symbol_modality_8164_128/shared/weights_6"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 510
            }
            dim {
              size: 128
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: "cs_similarity_transformer/symbol_modality_8164_128/shared/weights_6"
        }
      }
    }
    node {
      name: "cs_similarity_transformer/symbol_modality_8164_128/shared/weights_6/IsInitialized/VarIsInitializedOp"
      op: "VarIsInitializedOp"
      input: "cs_similarity_transformer/symbol_modality_8164_128/shared/weights_6"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/symbol_modality_8164_128/shared/weights_6/Assign"
      op: "AssignVariableOp"
      input: "cs_similarity_transformer/symbol_modality_8164_128/shared/weights_6"
      input: "cs_similarity_transformer/symbol_modality_8164_128/shared/weights_6/Initializer/random_normal"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@cs_similarity_transformer/symbol_modality_8164_128/shared/weights_6"
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "cs_similarity_transformer/symbol_modality_8164_128/shared/weights_6/Read/ReadVariableOp"
      op: "ReadVariableOp"
      input: "cs_similarity_transformer/symbol_modality_8164_128/shared/weights_6"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@cs_similarity_transformer/symbol_modality_8164_128/shared/weights_6"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 510
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "Read_6/ReadVariableOp"
      op: "ReadVariableOp"
      input: "cs_similarity_transformer/symbol_modality_8164_128/shared/weights_6"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 510
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "Identity_6"
      op: "Identity"
      input: "Read_6/ReadVariableOp"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 510
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/symbol_modality_8164_128/shared/weights_7/Initializer/random_normal/shape"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@cs_similarity_transformer/symbol_modality_8164_128/shared/weights_7"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 2
              }
            }
            tensor_content: "\376\001\000\000\200\000\000\000"
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/symbol_modality_8164_128/shared/weights_7/Initializer/random_normal/mean"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@cs_similarity_transformer/symbol_modality_8164_128/shared/weights_7"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.0
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/symbol_modality_8164_128/shared/weights_7/Initializer/random_normal/stddev"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@cs_similarity_transformer/symbol_modality_8164_128/shared/weights_7"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.0883883461356163
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/symbol_modality_8164_128/shared/weights_7/Initializer/random_normal/RandomStandardNormal"
      op: "RandomStandardNormal"
      input: "cs_similarity_transformer/symbol_modality_8164_128/shared/weights_7/Initializer/random_normal/shape"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@cs_similarity_transformer/symbol_modality_8164_128/shared/weights_7"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 510
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "cs_similarity_transformer/symbol_modality_8164_128/shared/weights_7/Initializer/random_normal/mul"
      op: "Mul"
      input: "cs_similarity_transformer/symbol_modality_8164_128/shared/weights_7/Initializer/random_normal/RandomStandardNormal"
      input: "cs_similarity_transformer/symbol_modality_8164_128/shared/weights_7/Initializer/random_normal/stddev"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@cs_similarity_transformer/symbol_modality_8164_128/shared/weights_7"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 510
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/symbol_modality_8164_128/shared/weights_7/Initializer/random_normal"
      op: "Add"
      input: "cs_similarity_transformer/symbol_modality_8164_128/shared/weights_7/Initializer/random_normal/mul"
      input: "cs_similarity_transformer/symbol_modality_8164_128/shared/weights_7/Initializer/random_normal/mean"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@cs_similarity_transformer/symbol_modality_8164_128/shared/weights_7"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 510
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/symbol_modality_8164_128/shared/weights_7"
      op: "VarHandleOp"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@cs_similarity_transformer/symbol_modality_8164_128/shared/weights_7"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 510
            }
            dim {
              size: 128
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: "cs_similarity_transformer/symbol_modality_8164_128/shared/weights_7"
        }
      }
    }
    node {
      name: "cs_similarity_transformer/symbol_modality_8164_128/shared/weights_7/IsInitialized/VarIsInitializedOp"
      op: "VarIsInitializedOp"
      input: "cs_similarity_transformer/symbol_modality_8164_128/shared/weights_7"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/symbol_modality_8164_128/shared/weights_7/Assign"
      op: "AssignVariableOp"
      input: "cs_similarity_transformer/symbol_modality_8164_128/shared/weights_7"
      input: "cs_similarity_transformer/symbol_modality_8164_128/shared/weights_7/Initializer/random_normal"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@cs_similarity_transformer/symbol_modality_8164_128/shared/weights_7"
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "cs_similarity_transformer/symbol_modality_8164_128/shared/weights_7/Read/ReadVariableOp"
      op: "ReadVariableOp"
      input: "cs_similarity_transformer/symbol_modality_8164_128/shared/weights_7"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@cs_similarity_transformer/symbol_modality_8164_128/shared/weights_7"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 510
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "Read_7/ReadVariableOp"
      op: "ReadVariableOp"
      input: "cs_similarity_transformer/symbol_modality_8164_128/shared/weights_7"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 510
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "Identity_7"
      op: "Identity"
      input: "Read_7/ReadVariableOp"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 510
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/symbol_modality_8164_128/shared/weights_8/Initializer/random_normal/shape"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@cs_similarity_transformer/symbol_modality_8164_128/shared/weights_8"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 2
              }
            }
            tensor_content: "\376\001\000\000\200\000\000\000"
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/symbol_modality_8164_128/shared/weights_8/Initializer/random_normal/mean"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@cs_similarity_transformer/symbol_modality_8164_128/shared/weights_8"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.0
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/symbol_modality_8164_128/shared/weights_8/Initializer/random_normal/stddev"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@cs_similarity_transformer/symbol_modality_8164_128/shared/weights_8"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.0883883461356163
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/symbol_modality_8164_128/shared/weights_8/Initializer/random_normal/RandomStandardNormal"
      op: "RandomStandardNormal"
      input: "cs_similarity_transformer/symbol_modality_8164_128/shared/weights_8/Initializer/random_normal/shape"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@cs_similarity_transformer/symbol_modality_8164_128/shared/weights_8"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 510
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "cs_similarity_transformer/symbol_modality_8164_128/shared/weights_8/Initializer/random_normal/mul"
      op: "Mul"
      input: "cs_similarity_transformer/symbol_modality_8164_128/shared/weights_8/Initializer/random_normal/RandomStandardNormal"
      input: "cs_similarity_transformer/symbol_modality_8164_128/shared/weights_8/Initializer/random_normal/stddev"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@cs_similarity_transformer/symbol_modality_8164_128/shared/weights_8"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 510
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/symbol_modality_8164_128/shared/weights_8/Initializer/random_normal"
      op: "Add"
      input: "cs_similarity_transformer/symbol_modality_8164_128/shared/weights_8/Initializer/random_normal/mul"
      input: "cs_similarity_transformer/symbol_modality_8164_128/shared/weights_8/Initializer/random_normal/mean"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@cs_similarity_transformer/symbol_modality_8164_128/shared/weights_8"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 510
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/symbol_modality_8164_128/shared/weights_8"
      op: "VarHandleOp"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@cs_similarity_transformer/symbol_modality_8164_128/shared/weights_8"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 510
            }
            dim {
              size: 128
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: "cs_similarity_transformer/symbol_modality_8164_128/shared/weights_8"
        }
      }
    }
    node {
      name: "cs_similarity_transformer/symbol_modality_8164_128/shared/weights_8/IsInitialized/VarIsInitializedOp"
      op: "VarIsInitializedOp"
      input: "cs_similarity_transformer/symbol_modality_8164_128/shared/weights_8"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/symbol_modality_8164_128/shared/weights_8/Assign"
      op: "AssignVariableOp"
      input: "cs_similarity_transformer/symbol_modality_8164_128/shared/weights_8"
      input: "cs_similarity_transformer/symbol_modality_8164_128/shared/weights_8/Initializer/random_normal"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@cs_similarity_transformer/symbol_modality_8164_128/shared/weights_8"
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "cs_similarity_transformer/symbol_modality_8164_128/shared/weights_8/Read/ReadVariableOp"
      op: "ReadVariableOp"
      input: "cs_similarity_transformer/symbol_modality_8164_128/shared/weights_8"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@cs_similarity_transformer/symbol_modality_8164_128/shared/weights_8"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 510
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "Read_8/ReadVariableOp"
      op: "ReadVariableOp"
      input: "cs_similarity_transformer/symbol_modality_8164_128/shared/weights_8"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 510
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "Identity_8"
      op: "Identity"
      input: "Read_8/ReadVariableOp"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 510
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/symbol_modality_8164_128/shared/weights_9/Initializer/random_normal/shape"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@cs_similarity_transformer/symbol_modality_8164_128/shared/weights_9"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 2
              }
            }
            tensor_content: "\376\001\000\000\200\000\000\000"
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/symbol_modality_8164_128/shared/weights_9/Initializer/random_normal/mean"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@cs_similarity_transformer/symbol_modality_8164_128/shared/weights_9"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.0
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/symbol_modality_8164_128/shared/weights_9/Initializer/random_normal/stddev"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@cs_similarity_transformer/symbol_modality_8164_128/shared/weights_9"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.0883883461356163
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/symbol_modality_8164_128/shared/weights_9/Initializer/random_normal/RandomStandardNormal"
      op: "RandomStandardNormal"
      input: "cs_similarity_transformer/symbol_modality_8164_128/shared/weights_9/Initializer/random_normal/shape"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@cs_similarity_transformer/symbol_modality_8164_128/shared/weights_9"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 510
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "cs_similarity_transformer/symbol_modality_8164_128/shared/weights_9/Initializer/random_normal/mul"
      op: "Mul"
      input: "cs_similarity_transformer/symbol_modality_8164_128/shared/weights_9/Initializer/random_normal/RandomStandardNormal"
      input: "cs_similarity_transformer/symbol_modality_8164_128/shared/weights_9/Initializer/random_normal/stddev"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@cs_similarity_transformer/symbol_modality_8164_128/shared/weights_9"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 510
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/symbol_modality_8164_128/shared/weights_9/Initializer/random_normal"
      op: "Add"
      input: "cs_similarity_transformer/symbol_modality_8164_128/shared/weights_9/Initializer/random_normal/mul"
      input: "cs_similarity_transformer/symbol_modality_8164_128/shared/weights_9/Initializer/random_normal/mean"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@cs_similarity_transformer/symbol_modality_8164_128/shared/weights_9"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 510
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/symbol_modality_8164_128/shared/weights_9"
      op: "VarHandleOp"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@cs_similarity_transformer/symbol_modality_8164_128/shared/weights_9"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 510
            }
            dim {
              size: 128
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: "cs_similarity_transformer/symbol_modality_8164_128/shared/weights_9"
        }
      }
    }
    node {
      name: "cs_similarity_transformer/symbol_modality_8164_128/shared/weights_9/IsInitialized/VarIsInitializedOp"
      op: "VarIsInitializedOp"
      input: "cs_similarity_transformer/symbol_modality_8164_128/shared/weights_9"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/symbol_modality_8164_128/shared/weights_9/Assign"
      op: "AssignVariableOp"
      input: "cs_similarity_transformer/symbol_modality_8164_128/shared/weights_9"
      input: "cs_similarity_transformer/symbol_modality_8164_128/shared/weights_9/Initializer/random_normal"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@cs_similarity_transformer/symbol_modality_8164_128/shared/weights_9"
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "cs_similarity_transformer/symbol_modality_8164_128/shared/weights_9/Read/ReadVariableOp"
      op: "ReadVariableOp"
      input: "cs_similarity_transformer/symbol_modality_8164_128/shared/weights_9"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@cs_similarity_transformer/symbol_modality_8164_128/shared/weights_9"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 510
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "Read_9/ReadVariableOp"
      op: "ReadVariableOp"
      input: "cs_similarity_transformer/symbol_modality_8164_128/shared/weights_9"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 510
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "Identity_9"
      op: "Identity"
      input: "Read_9/ReadVariableOp"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 510
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/symbol_modality_8164_128/shared/weights_10/Initializer/random_normal/shape"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@cs_similarity_transformer/symbol_modality_8164_128/shared/weights_10"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 2
              }
            }
            tensor_content: "\376\001\000\000\200\000\000\000"
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/symbol_modality_8164_128/shared/weights_10/Initializer/random_normal/mean"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@cs_similarity_transformer/symbol_modality_8164_128/shared/weights_10"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.0
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/symbol_modality_8164_128/shared/weights_10/Initializer/random_normal/stddev"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@cs_similarity_transformer/symbol_modality_8164_128/shared/weights_10"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.0883883461356163
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/symbol_modality_8164_128/shared/weights_10/Initializer/random_normal/RandomStandardNormal"
      op: "RandomStandardNormal"
      input: "cs_similarity_transformer/symbol_modality_8164_128/shared/weights_10/Initializer/random_normal/shape"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@cs_similarity_transformer/symbol_modality_8164_128/shared/weights_10"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 510
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "cs_similarity_transformer/symbol_modality_8164_128/shared/weights_10/Initializer/random_normal/mul"
      op: "Mul"
      input: "cs_similarity_transformer/symbol_modality_8164_128/shared/weights_10/Initializer/random_normal/RandomStandardNormal"
      input: "cs_similarity_transformer/symbol_modality_8164_128/shared/weights_10/Initializer/random_normal/stddev"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@cs_similarity_transformer/symbol_modality_8164_128/shared/weights_10"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 510
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/symbol_modality_8164_128/shared/weights_10/Initializer/random_normal"
      op: "Add"
      input: "cs_similarity_transformer/symbol_modality_8164_128/shared/weights_10/Initializer/random_normal/mul"
      input: "cs_similarity_transformer/symbol_modality_8164_128/shared/weights_10/Initializer/random_normal/mean"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@cs_similarity_transformer/symbol_modality_8164_128/shared/weights_10"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 510
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/symbol_modality_8164_128/shared/weights_10"
      op: "VarHandleOp"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@cs_similarity_transformer/symbol_modality_8164_128/shared/weights_10"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 510
            }
            dim {
              size: 128
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: "cs_similarity_transformer/symbol_modality_8164_128/shared/weights_10"
        }
      }
    }
    node {
      name: "cs_similarity_transformer/symbol_modality_8164_128/shared/weights_10/IsInitialized/VarIsInitializedOp"
      op: "VarIsInitializedOp"
      input: "cs_similarity_transformer/symbol_modality_8164_128/shared/weights_10"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/symbol_modality_8164_128/shared/weights_10/Assign"
      op: "AssignVariableOp"
      input: "cs_similarity_transformer/symbol_modality_8164_128/shared/weights_10"
      input: "cs_similarity_transformer/symbol_modality_8164_128/shared/weights_10/Initializer/random_normal"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@cs_similarity_transformer/symbol_modality_8164_128/shared/weights_10"
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "cs_similarity_transformer/symbol_modality_8164_128/shared/weights_10/Read/ReadVariableOp"
      op: "ReadVariableOp"
      input: "cs_similarity_transformer/symbol_modality_8164_128/shared/weights_10"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@cs_similarity_transformer/symbol_modality_8164_128/shared/weights_10"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 510
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "Read_10/ReadVariableOp"
      op: "ReadVariableOp"
      input: "cs_similarity_transformer/symbol_modality_8164_128/shared/weights_10"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 510
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "Identity_10"
      op: "Identity"
      input: "Read_10/ReadVariableOp"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 510
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/symbol_modality_8164_128/shared/weights_11/Initializer/random_normal/shape"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@cs_similarity_transformer/symbol_modality_8164_128/shared/weights_11"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 2
              }
            }
            tensor_content: "\376\001\000\000\200\000\000\000"
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/symbol_modality_8164_128/shared/weights_11/Initializer/random_normal/mean"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@cs_similarity_transformer/symbol_modality_8164_128/shared/weights_11"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.0
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/symbol_modality_8164_128/shared/weights_11/Initializer/random_normal/stddev"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@cs_similarity_transformer/symbol_modality_8164_128/shared/weights_11"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.0883883461356163
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/symbol_modality_8164_128/shared/weights_11/Initializer/random_normal/RandomStandardNormal"
      op: "RandomStandardNormal"
      input: "cs_similarity_transformer/symbol_modality_8164_128/shared/weights_11/Initializer/random_normal/shape"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@cs_similarity_transformer/symbol_modality_8164_128/shared/weights_11"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 510
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "cs_similarity_transformer/symbol_modality_8164_128/shared/weights_11/Initializer/random_normal/mul"
      op: "Mul"
      input: "cs_similarity_transformer/symbol_modality_8164_128/shared/weights_11/Initializer/random_normal/RandomStandardNormal"
      input: "cs_similarity_transformer/symbol_modality_8164_128/shared/weights_11/Initializer/random_normal/stddev"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@cs_similarity_transformer/symbol_modality_8164_128/shared/weights_11"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 510
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/symbol_modality_8164_128/shared/weights_11/Initializer/random_normal"
      op: "Add"
      input: "cs_similarity_transformer/symbol_modality_8164_128/shared/weights_11/Initializer/random_normal/mul"
      input: "cs_similarity_transformer/symbol_modality_8164_128/shared/weights_11/Initializer/random_normal/mean"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@cs_similarity_transformer/symbol_modality_8164_128/shared/weights_11"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 510
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/symbol_modality_8164_128/shared/weights_11"
      op: "VarHandleOp"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@cs_similarity_transformer/symbol_modality_8164_128/shared/weights_11"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 510
            }
            dim {
              size: 128
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: "cs_similarity_transformer/symbol_modality_8164_128/shared/weights_11"
        }
      }
    }
    node {
      name: "cs_similarity_transformer/symbol_modality_8164_128/shared/weights_11/IsInitialized/VarIsInitializedOp"
      op: "VarIsInitializedOp"
      input: "cs_similarity_transformer/symbol_modality_8164_128/shared/weights_11"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/symbol_modality_8164_128/shared/weights_11/Assign"
      op: "AssignVariableOp"
      input: "cs_similarity_transformer/symbol_modality_8164_128/shared/weights_11"
      input: "cs_similarity_transformer/symbol_modality_8164_128/shared/weights_11/Initializer/random_normal"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@cs_similarity_transformer/symbol_modality_8164_128/shared/weights_11"
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "cs_similarity_transformer/symbol_modality_8164_128/shared/weights_11/Read/ReadVariableOp"
      op: "ReadVariableOp"
      input: "cs_similarity_transformer/symbol_modality_8164_128/shared/weights_11"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@cs_similarity_transformer/symbol_modality_8164_128/shared/weights_11"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 510
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "Read_11/ReadVariableOp"
      op: "ReadVariableOp"
      input: "cs_similarity_transformer/symbol_modality_8164_128/shared/weights_11"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 510
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "Identity_11"
      op: "Identity"
      input: "Read_11/ReadVariableOp"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 510
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/symbol_modality_8164_128/shared/weights_12/Initializer/random_normal/shape"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@cs_similarity_transformer/symbol_modality_8164_128/shared/weights_12"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 2
              }
            }
            tensor_content: "\376\001\000\000\200\000\000\000"
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/symbol_modality_8164_128/shared/weights_12/Initializer/random_normal/mean"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@cs_similarity_transformer/symbol_modality_8164_128/shared/weights_12"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.0
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/symbol_modality_8164_128/shared/weights_12/Initializer/random_normal/stddev"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@cs_similarity_transformer/symbol_modality_8164_128/shared/weights_12"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.0883883461356163
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/symbol_modality_8164_128/shared/weights_12/Initializer/random_normal/RandomStandardNormal"
      op: "RandomStandardNormal"
      input: "cs_similarity_transformer/symbol_modality_8164_128/shared/weights_12/Initializer/random_normal/shape"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@cs_similarity_transformer/symbol_modality_8164_128/shared/weights_12"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 510
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "cs_similarity_transformer/symbol_modality_8164_128/shared/weights_12/Initializer/random_normal/mul"
      op: "Mul"
      input: "cs_similarity_transformer/symbol_modality_8164_128/shared/weights_12/Initializer/random_normal/RandomStandardNormal"
      input: "cs_similarity_transformer/symbol_modality_8164_128/shared/weights_12/Initializer/random_normal/stddev"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@cs_similarity_transformer/symbol_modality_8164_128/shared/weights_12"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 510
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/symbol_modality_8164_128/shared/weights_12/Initializer/random_normal"
      op: "Add"
      input: "cs_similarity_transformer/symbol_modality_8164_128/shared/weights_12/Initializer/random_normal/mul"
      input: "cs_similarity_transformer/symbol_modality_8164_128/shared/weights_12/Initializer/random_normal/mean"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@cs_similarity_transformer/symbol_modality_8164_128/shared/weights_12"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 510
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/symbol_modality_8164_128/shared/weights_12"
      op: "VarHandleOp"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@cs_similarity_transformer/symbol_modality_8164_128/shared/weights_12"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 510
            }
            dim {
              size: 128
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: "cs_similarity_transformer/symbol_modality_8164_128/shared/weights_12"
        }
      }
    }
    node {
      name: "cs_similarity_transformer/symbol_modality_8164_128/shared/weights_12/IsInitialized/VarIsInitializedOp"
      op: "VarIsInitializedOp"
      input: "cs_similarity_transformer/symbol_modality_8164_128/shared/weights_12"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/symbol_modality_8164_128/shared/weights_12/Assign"
      op: "AssignVariableOp"
      input: "cs_similarity_transformer/symbol_modality_8164_128/shared/weights_12"
      input: "cs_similarity_transformer/symbol_modality_8164_128/shared/weights_12/Initializer/random_normal"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@cs_similarity_transformer/symbol_modality_8164_128/shared/weights_12"
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "cs_similarity_transformer/symbol_modality_8164_128/shared/weights_12/Read/ReadVariableOp"
      op: "ReadVariableOp"
      input: "cs_similarity_transformer/symbol_modality_8164_128/shared/weights_12"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@cs_similarity_transformer/symbol_modality_8164_128/shared/weights_12"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 510
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "Read_12/ReadVariableOp"
      op: "ReadVariableOp"
      input: "cs_similarity_transformer/symbol_modality_8164_128/shared/weights_12"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 510
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "Identity_12"
      op: "Identity"
      input: "Read_12/ReadVariableOp"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 510
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/symbol_modality_8164_128/shared/weights_13/Initializer/random_normal/shape"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@cs_similarity_transformer/symbol_modality_8164_128/shared/weights_13"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 2
              }
            }
            tensor_content: "\376\001\000\000\200\000\000\000"
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/symbol_modality_8164_128/shared/weights_13/Initializer/random_normal/mean"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@cs_similarity_transformer/symbol_modality_8164_128/shared/weights_13"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.0
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/symbol_modality_8164_128/shared/weights_13/Initializer/random_normal/stddev"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@cs_similarity_transformer/symbol_modality_8164_128/shared/weights_13"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.0883883461356163
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/symbol_modality_8164_128/shared/weights_13/Initializer/random_normal/RandomStandardNormal"
      op: "RandomStandardNormal"
      input: "cs_similarity_transformer/symbol_modality_8164_128/shared/weights_13/Initializer/random_normal/shape"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@cs_similarity_transformer/symbol_modality_8164_128/shared/weights_13"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 510
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "cs_similarity_transformer/symbol_modality_8164_128/shared/weights_13/Initializer/random_normal/mul"
      op: "Mul"
      input: "cs_similarity_transformer/symbol_modality_8164_128/shared/weights_13/Initializer/random_normal/RandomStandardNormal"
      input: "cs_similarity_transformer/symbol_modality_8164_128/shared/weights_13/Initializer/random_normal/stddev"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@cs_similarity_transformer/symbol_modality_8164_128/shared/weights_13"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 510
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/symbol_modality_8164_128/shared/weights_13/Initializer/random_normal"
      op: "Add"
      input: "cs_similarity_transformer/symbol_modality_8164_128/shared/weights_13/Initializer/random_normal/mul"
      input: "cs_similarity_transformer/symbol_modality_8164_128/shared/weights_13/Initializer/random_normal/mean"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@cs_similarity_transformer/symbol_modality_8164_128/shared/weights_13"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 510
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/symbol_modality_8164_128/shared/weights_13"
      op: "VarHandleOp"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@cs_similarity_transformer/symbol_modality_8164_128/shared/weights_13"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 510
            }
            dim {
              size: 128
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: "cs_similarity_transformer/symbol_modality_8164_128/shared/weights_13"
        }
      }
    }
    node {
      name: "cs_similarity_transformer/symbol_modality_8164_128/shared/weights_13/IsInitialized/VarIsInitializedOp"
      op: "VarIsInitializedOp"
      input: "cs_similarity_transformer/symbol_modality_8164_128/shared/weights_13"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/symbol_modality_8164_128/shared/weights_13/Assign"
      op: "AssignVariableOp"
      input: "cs_similarity_transformer/symbol_modality_8164_128/shared/weights_13"
      input: "cs_similarity_transformer/symbol_modality_8164_128/shared/weights_13/Initializer/random_normal"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@cs_similarity_transformer/symbol_modality_8164_128/shared/weights_13"
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "cs_similarity_transformer/symbol_modality_8164_128/shared/weights_13/Read/ReadVariableOp"
      op: "ReadVariableOp"
      input: "cs_similarity_transformer/symbol_modality_8164_128/shared/weights_13"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@cs_similarity_transformer/symbol_modality_8164_128/shared/weights_13"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 510
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "Read_13/ReadVariableOp"
      op: "ReadVariableOp"
      input: "cs_similarity_transformer/symbol_modality_8164_128/shared/weights_13"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 510
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "Identity_13"
      op: "Identity"
      input: "Read_13/ReadVariableOp"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 510
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/symbol_modality_8164_128/shared/weights_14/Initializer/random_normal/shape"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@cs_similarity_transformer/symbol_modality_8164_128/shared/weights_14"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 2
              }
            }
            tensor_content: "\376\001\000\000\200\000\000\000"
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/symbol_modality_8164_128/shared/weights_14/Initializer/random_normal/mean"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@cs_similarity_transformer/symbol_modality_8164_128/shared/weights_14"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.0
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/symbol_modality_8164_128/shared/weights_14/Initializer/random_normal/stddev"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@cs_similarity_transformer/symbol_modality_8164_128/shared/weights_14"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.0883883461356163
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/symbol_modality_8164_128/shared/weights_14/Initializer/random_normal/RandomStandardNormal"
      op: "RandomStandardNormal"
      input: "cs_similarity_transformer/symbol_modality_8164_128/shared/weights_14/Initializer/random_normal/shape"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@cs_similarity_transformer/symbol_modality_8164_128/shared/weights_14"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 510
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "cs_similarity_transformer/symbol_modality_8164_128/shared/weights_14/Initializer/random_normal/mul"
      op: "Mul"
      input: "cs_similarity_transformer/symbol_modality_8164_128/shared/weights_14/Initializer/random_normal/RandomStandardNormal"
      input: "cs_similarity_transformer/symbol_modality_8164_128/shared/weights_14/Initializer/random_normal/stddev"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@cs_similarity_transformer/symbol_modality_8164_128/shared/weights_14"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 510
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/symbol_modality_8164_128/shared/weights_14/Initializer/random_normal"
      op: "Add"
      input: "cs_similarity_transformer/symbol_modality_8164_128/shared/weights_14/Initializer/random_normal/mul"
      input: "cs_similarity_transformer/symbol_modality_8164_128/shared/weights_14/Initializer/random_normal/mean"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@cs_similarity_transformer/symbol_modality_8164_128/shared/weights_14"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 510
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/symbol_modality_8164_128/shared/weights_14"
      op: "VarHandleOp"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@cs_similarity_transformer/symbol_modality_8164_128/shared/weights_14"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 510
            }
            dim {
              size: 128
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: "cs_similarity_transformer/symbol_modality_8164_128/shared/weights_14"
        }
      }
    }
    node {
      name: "cs_similarity_transformer/symbol_modality_8164_128/shared/weights_14/IsInitialized/VarIsInitializedOp"
      op: "VarIsInitializedOp"
      input: "cs_similarity_transformer/symbol_modality_8164_128/shared/weights_14"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/symbol_modality_8164_128/shared/weights_14/Assign"
      op: "AssignVariableOp"
      input: "cs_similarity_transformer/symbol_modality_8164_128/shared/weights_14"
      input: "cs_similarity_transformer/symbol_modality_8164_128/shared/weights_14/Initializer/random_normal"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@cs_similarity_transformer/symbol_modality_8164_128/shared/weights_14"
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "cs_similarity_transformer/symbol_modality_8164_128/shared/weights_14/Read/ReadVariableOp"
      op: "ReadVariableOp"
      input: "cs_similarity_transformer/symbol_modality_8164_128/shared/weights_14"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@cs_similarity_transformer/symbol_modality_8164_128/shared/weights_14"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 510
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "Read_14/ReadVariableOp"
      op: "ReadVariableOp"
      input: "cs_similarity_transformer/symbol_modality_8164_128/shared/weights_14"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 510
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "Identity_14"
      op: "Identity"
      input: "Read_14/ReadVariableOp"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 510
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/symbol_modality_8164_128/shared/weights_15/Initializer/random_normal/shape"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@cs_similarity_transformer/symbol_modality_8164_128/shared/weights_15"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 2
              }
            }
            tensor_content: "\376\001\000\000\200\000\000\000"
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/symbol_modality_8164_128/shared/weights_15/Initializer/random_normal/mean"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@cs_similarity_transformer/symbol_modality_8164_128/shared/weights_15"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.0
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/symbol_modality_8164_128/shared/weights_15/Initializer/random_normal/stddev"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@cs_similarity_transformer/symbol_modality_8164_128/shared/weights_15"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.0883883461356163
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/symbol_modality_8164_128/shared/weights_15/Initializer/random_normal/RandomStandardNormal"
      op: "RandomStandardNormal"
      input: "cs_similarity_transformer/symbol_modality_8164_128/shared/weights_15/Initializer/random_normal/shape"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@cs_similarity_transformer/symbol_modality_8164_128/shared/weights_15"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 510
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "cs_similarity_transformer/symbol_modality_8164_128/shared/weights_15/Initializer/random_normal/mul"
      op: "Mul"
      input: "cs_similarity_transformer/symbol_modality_8164_128/shared/weights_15/Initializer/random_normal/RandomStandardNormal"
      input: "cs_similarity_transformer/symbol_modality_8164_128/shared/weights_15/Initializer/random_normal/stddev"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@cs_similarity_transformer/symbol_modality_8164_128/shared/weights_15"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 510
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/symbol_modality_8164_128/shared/weights_15/Initializer/random_normal"
      op: "Add"
      input: "cs_similarity_transformer/symbol_modality_8164_128/shared/weights_15/Initializer/random_normal/mul"
      input: "cs_similarity_transformer/symbol_modality_8164_128/shared/weights_15/Initializer/random_normal/mean"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@cs_similarity_transformer/symbol_modality_8164_128/shared/weights_15"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 510
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/symbol_modality_8164_128/shared/weights_15"
      op: "VarHandleOp"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@cs_similarity_transformer/symbol_modality_8164_128/shared/weights_15"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 510
            }
            dim {
              size: 128
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: "cs_similarity_transformer/symbol_modality_8164_128/shared/weights_15"
        }
      }
    }
    node {
      name: "cs_similarity_transformer/symbol_modality_8164_128/shared/weights_15/IsInitialized/VarIsInitializedOp"
      op: "VarIsInitializedOp"
      input: "cs_similarity_transformer/symbol_modality_8164_128/shared/weights_15"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/symbol_modality_8164_128/shared/weights_15/Assign"
      op: "AssignVariableOp"
      input: "cs_similarity_transformer/symbol_modality_8164_128/shared/weights_15"
      input: "cs_similarity_transformer/symbol_modality_8164_128/shared/weights_15/Initializer/random_normal"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@cs_similarity_transformer/symbol_modality_8164_128/shared/weights_15"
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "cs_similarity_transformer/symbol_modality_8164_128/shared/weights_15/Read/ReadVariableOp"
      op: "ReadVariableOp"
      input: "cs_similarity_transformer/symbol_modality_8164_128/shared/weights_15"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@cs_similarity_transformer/symbol_modality_8164_128/shared/weights_15"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 510
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "Read_15/ReadVariableOp"
      op: "ReadVariableOp"
      input: "cs_similarity_transformer/symbol_modality_8164_128/shared/weights_15"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 510
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "Identity_15"
      op: "Identity"
      input: "Read_15/ReadVariableOp"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 510
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/symbol_modality_8164_128/shared/concat/axis"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/symbol_modality_8164_128/shared/concat"
      op: "ConcatV2"
      input: "Identity"
      input: "Identity_1"
      input: "Identity_2"
      input: "Identity_3"
      input: "Identity_4"
      input: "Identity_5"
      input: "Identity_6"
      input: "Identity_7"
      input: "Identity_8"
      input: "Identity_9"
      input: "Identity_10"
      input: "Identity_11"
      input: "Identity_12"
      input: "Identity_13"
      input: "Identity_14"
      input: "Identity_15"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/symbol_modality_8164_128/shared/concat/axis"
      attr {
        key: "N"
        value {
          i: 16
        }
      }
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 8164
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/symbol_modality_8164_128/shared/convert_gradient_to_tensor_HBc3xYw22Mw"
      op: "convert_gradient_to_tensor_HBc3xYw22Mw"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/symbol_modality_8164_128/shared/concat"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 8164
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/symbol_modality_8164_128/shared/GatherV2/axis"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/symbol_modality_8164_128/shared/GatherV2"
      op: "GatherV2"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/symbol_modality_8164_128/shared/convert_gradient_to_tensor_HBc3xYw22Mw"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/symbol_modality_8164_128/shared/Squeeze"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/symbol_modality_8164_128/shared/GatherV2/axis"
      attr {
        key: "Taxis"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "Tindices"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "Tparams"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: -1
              }
              dim {
                size: 1
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/symbol_modality_8164_128/shared/mul/y"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 11.313708305358887
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/symbol_modality_8164_128/shared/mul"
      op: "Mul"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/symbol_modality_8164_128/shared/GatherV2"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/symbol_modality_8164_128/shared/mul/y"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: -1
              }
              dim {
                size: 1
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/symbol_modality_8164_128/shared/NotEqual/y"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/symbol_modality_8164_128/shared/NotEqual"
      op: "NotEqual"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/symbol_modality_8164_128/shared/Squeeze"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/symbol_modality_8164_128/shared/NotEqual/y"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/symbol_modality_8164_128/shared/ToFloat"
      op: "Cast"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/symbol_modality_8164_128/shared/NotEqual"
      attr {
        key: "DstT"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "SrcT"
        value {
          type: DT_BOOL
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/symbol_modality_8164_128/shared/ExpandDims/dim"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: -1
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/symbol_modality_8164_128/shared/ExpandDims"
      op: "ExpandDims"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/symbol_modality_8164_128/shared/ToFloat"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/symbol_modality_8164_128/shared/ExpandDims/dim"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: -1
              }
              dim {
                size: 1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/symbol_modality_8164_128/shared/mul_1"
      op: "Mul"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/symbol_modality_8164_128/shared/mul"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/symbol_modality_8164_128/shared/ExpandDims"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: -1
              }
              dim {
                size: 1
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/Const"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 2
              }
            }
            tensor_content: "\000\000\000\000\001\000\000\000"
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/Max"
      op: "Max"
      input: "cs_similarity_transformer/parallel_0_1/cs_similarity_transformer/Identity"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/Const"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/Greater/y"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/Greater"
      op: "Greater"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/Max"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/Greater/y"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/Switch"
      op: "Switch"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/Greater"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/Greater"
      attr {
        key: "T"
        value {
          type: DT_BOOL
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
            shape {
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_t"
      op: "Identity"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/Switch:1"
      attr {
        key: "T"
        value {
          type: DT_BOOL
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_f"
      op: "Identity"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/Switch"
      attr {
        key: "T"
        value {
          type: DT_BOOL
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/pred_id"
      op: "Identity"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/Greater"
      attr {
        key: "T"
        value {
          type: DT_BOOL
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/Shape"
      op: "Shape"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/Shape/Switch:1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 4
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/Shape/Switch"
      op: "Switch"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/symbol_modality_8164_128/shared/mul_1"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/pred_id"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/symbol_modality_8164_128/shared/mul_1"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: -1
              }
              dim {
                size: 1
              }
              dim {
                size: 128
              }
            }
            shape {
              dim {
                size: -1
              }
              dim {
                size: -1
              }
              dim {
                size: 1
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/strided_slice/stack"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_t"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/strided_slice/stack_1"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_t"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/strided_slice/stack_2"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_t"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/strided_slice"
      op: "StridedSlice"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/Shape"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/strided_slice/stack"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/strided_slice/stack_1"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/strided_slice/stack_2"
      attr {
        key: "Index"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "shrink_axis_mask"
        value {
          i: 1
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/strided_slice_1/stack"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_t"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/strided_slice_1/stack_1"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_t"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 2
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/strided_slice_1/stack_2"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_t"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/strided_slice_1"
      op: "StridedSlice"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/Shape"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/strided_slice_1/stack"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/strided_slice_1/stack_1"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/strided_slice_1/stack_2"
      attr {
        key: "Index"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "shrink_axis_mask"
        value {
          i: 1
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/mul/y"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_t"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/mul"
      op: "Mul"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/strided_slice_1"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/mul/y"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/Reshape/shape/2"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_t"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 128
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/Reshape/shape"
      op: "Pack"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/strided_slice"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/mul"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/Reshape/shape/2"
      attr {
        key: "N"
        value {
          i: 3
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/Reshape"
      op: "Reshape"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/Shape/Switch:1"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/Reshape/shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: -1
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/embedding_to_padding/Abs"
      op: "Abs"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/Reshape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: -1
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/embedding_to_padding/Sum/reduction_indices"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_t"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: -1
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/embedding_to_padding/Sum"
      op: "Sum"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/embedding_to_padding/Abs"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/embedding_to_padding/Sum/reduction_indices"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/embedding_to_padding/Equal/y"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_t"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.0
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/embedding_to_padding/Equal"
      op: "Equal"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/embedding_to_padding/Sum"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/embedding_to_padding/Equal/y"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/embedding_to_padding/ToFloat"
      op: "Cast"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/embedding_to_padding/Equal"
      attr {
        key: "DstT"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "SrcT"
        value {
          type: DT_BOOL
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/attention_bias_ignore_padding/mul/y"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_t"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: -1000000000.0
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/attention_bias_ignore_padding/mul"
      op: "Mul"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/embedding_to_padding/ToFloat"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/attention_bias_ignore_padding/mul/y"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/attention_bias_ignore_padding/ExpandDims/dim"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_t"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/attention_bias_ignore_padding/ExpandDims"
      op: "ExpandDims"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/attention_bias_ignore_padding/mul"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/attention_bias_ignore_padding/ExpandDims/dim"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/attention_bias_ignore_padding/ExpandDims_1/dim"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_t"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/attention_bias_ignore_padding/ExpandDims_1"
      op: "ExpandDims"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/attention_bias_ignore_padding/ExpandDims"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/attention_bias_ignore_padding/ExpandDims_1/dim"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
              dim {
                size: 1
              }
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/body/code_embedding/target_space_embedding/kernel/Initializer/random_uniform/shape"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@cs_similarity_transformer/body/code_embedding/target_space_embedding/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 2
              }
            }
            tensor_content: " \000\000\000\200\000\000\000"
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/body/code_embedding/target_space_embedding/kernel/Initializer/random_uniform/min"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@cs_similarity_transformer/body/code_embedding/target_space_embedding/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: -0.19364917278289795
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/body/code_embedding/target_space_embedding/kernel/Initializer/random_uniform/max"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@cs_similarity_transformer/body/code_embedding/target_space_embedding/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.19364917278289795
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/body/code_embedding/target_space_embedding/kernel/Initializer/random_uniform/RandomUniform"
      op: "RandomUniform"
      input: "cs_similarity_transformer/body/code_embedding/target_space_embedding/kernel/Initializer/random_uniform/shape"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@cs_similarity_transformer/body/code_embedding/target_space_embedding/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "cs_similarity_transformer/body/code_embedding/target_space_embedding/kernel/Initializer/random_uniform/sub"
      op: "Sub"
      input: "cs_similarity_transformer/body/code_embedding/target_space_embedding/kernel/Initializer/random_uniform/max"
      input: "cs_similarity_transformer/body/code_embedding/target_space_embedding/kernel/Initializer/random_uniform/min"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@cs_similarity_transformer/body/code_embedding/target_space_embedding/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/body/code_embedding/target_space_embedding/kernel/Initializer/random_uniform/mul"
      op: "Mul"
      input: "cs_similarity_transformer/body/code_embedding/target_space_embedding/kernel/Initializer/random_uniform/RandomUniform"
      input: "cs_similarity_transformer/body/code_embedding/target_space_embedding/kernel/Initializer/random_uniform/sub"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@cs_similarity_transformer/body/code_embedding/target_space_embedding/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/body/code_embedding/target_space_embedding/kernel/Initializer/random_uniform"
      op: "Add"
      input: "cs_similarity_transformer/body/code_embedding/target_space_embedding/kernel/Initializer/random_uniform/mul"
      input: "cs_similarity_transformer/body/code_embedding/target_space_embedding/kernel/Initializer/random_uniform/min"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@cs_similarity_transformer/body/code_embedding/target_space_embedding/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/body/code_embedding/target_space_embedding/kernel"
      op: "VarHandleOp"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@cs_similarity_transformer/body/code_embedding/target_space_embedding/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 32
            }
            dim {
              size: 128
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: "cs_similarity_transformer/body/code_embedding/target_space_embedding/kernel"
        }
      }
    }
    node {
      name: "cs_similarity_transformer/body/code_embedding/target_space_embedding/kernel/IsInitialized/VarIsInitializedOp"
      op: "VarIsInitializedOp"
      input: "cs_similarity_transformer/body/code_embedding/target_space_embedding/kernel"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/body/code_embedding/target_space_embedding/kernel/Assign"
      op: "AssignVariableOp"
      input: "cs_similarity_transformer/body/code_embedding/target_space_embedding/kernel"
      input: "cs_similarity_transformer/body/code_embedding/target_space_embedding/kernel/Initializer/random_uniform"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@cs_similarity_transformer/body/code_embedding/target_space_embedding/kernel"
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "cs_similarity_transformer/body/code_embedding/target_space_embedding/kernel/Read/ReadVariableOp"
      op: "ReadVariableOp"
      input: "cs_similarity_transformer/body/code_embedding/target_space_embedding/kernel"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@cs_similarity_transformer/body/code_embedding/target_space_embedding/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "Read_16/ReadVariableOp"
      op: "ReadVariableOp"
      input: "Read_16/ReadVariableOp/Switch:1"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "Read_16/ReadVariableOp/Switch"
      op: "Switch"
      input: "cs_similarity_transformer/body/code_embedding/target_space_embedding/kernel"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/pred_id"
      attr {
        key: "T"
        value {
          type: DT_RESOURCE
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@cs_similarity_transformer/body/code_embedding/target_space_embedding/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
            shape {
            }
          }
        }
      }
    }
    node {
      name: "Identity_16"
      op: "Identity"
      input: "Read_16/ReadVariableOp"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/target_space_embedding/convert_gradient_to_tensor_HBc3xYw22Mw"
      op: "convert_gradient_to_tensor_HBc3xYw22Mw"
      input: "Identity_16"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_t"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/target_space_embedding/GatherV2/indices"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_t"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 3
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/target_space_embedding/GatherV2/axis"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_t"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/target_space_embedding/GatherV2"
      op: "GatherV2"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/target_space_embedding/convert_gradient_to_tensor_HBc3xYw22Mw"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/target_space_embedding/GatherV2/indices"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/target_space_embedding/GatherV2/axis"
      attr {
        key: "Taxis"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "Tindices"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "Tparams"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/Reshape_1/shape"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_t"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 3
              }
            }
            tensor_content: "\001\000\000\000\001\000\000\000\377\377\377\377"
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/Reshape_1"
      op: "Reshape"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/target_space_embedding/GatherV2"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/Reshape_1/shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
              dim {
                size: 1
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/add"
      op: "Add"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/Reshape"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/Reshape_1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: -1
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/add_timing_signal_1d/Shape"
      op: "Shape"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/add"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/add_timing_signal_1d/strided_slice/stack"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_t"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/add_timing_signal_1d/strided_slice/stack_1"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_t"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/add_timing_signal_1d/strided_slice/stack_2"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_t"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/add_timing_signal_1d/strided_slice"
      op: "StridedSlice"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/add_timing_signal_1d/Shape"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/add_timing_signal_1d/strided_slice/stack"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/add_timing_signal_1d/strided_slice/stack_1"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/add_timing_signal_1d/strided_slice/stack_2"
      attr {
        key: "Index"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "shrink_axis_mask"
        value {
          i: 1
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/add_timing_signal_1d/strided_slice_1/stack"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_t"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/add_timing_signal_1d/strided_slice_1/stack_1"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_t"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 2
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/add_timing_signal_1d/strided_slice_1/stack_2"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_t"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/add_timing_signal_1d/strided_slice_1"
      op: "StridedSlice"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/add_timing_signal_1d/Shape"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/add_timing_signal_1d/strided_slice_1/stack"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/add_timing_signal_1d/strided_slice_1/stack_1"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/add_timing_signal_1d/strided_slice_1/stack_2"
      attr {
        key: "Index"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "shrink_axis_mask"
        value {
          i: 1
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/add_timing_signal_1d/Shape_1"
      op: "Shape"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/add"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/add_timing_signal_1d/strided_slice_2/stack"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_t"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/add_timing_signal_1d/strided_slice_2/stack_1"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_t"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/add_timing_signal_1d/strided_slice_2/stack_2"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_t"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/add_timing_signal_1d/strided_slice_2"
      op: "StridedSlice"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/add_timing_signal_1d/Shape_1"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/add_timing_signal_1d/strided_slice_2/stack"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/add_timing_signal_1d/strided_slice_2/stack_1"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/add_timing_signal_1d/strided_slice_2/stack_2"
      attr {
        key: "Index"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "shrink_axis_mask"
        value {
          i: 1
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/add_timing_signal_1d/strided_slice_3/stack"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_t"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/add_timing_signal_1d/strided_slice_3/stack_1"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_t"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 2
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/add_timing_signal_1d/strided_slice_3/stack_2"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_t"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/add_timing_signal_1d/strided_slice_3"
      op: "StridedSlice"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/add_timing_signal_1d/Shape_1"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/add_timing_signal_1d/strided_slice_3/stack"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/add_timing_signal_1d/strided_slice_3/stack_1"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/add_timing_signal_1d/strided_slice_3/stack_2"
      attr {
        key: "Index"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "shrink_axis_mask"
        value {
          i: 1
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/add_timing_signal_1d/get_timing_signal_1d/range/start"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_t"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/add_timing_signal_1d/get_timing_signal_1d/range/delta"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_t"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/add_timing_signal_1d/get_timing_signal_1d/range"
      op: "Range"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/add_timing_signal_1d/get_timing_signal_1d/range/start"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/add_timing_signal_1d/strided_slice_1"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/add_timing_signal_1d/get_timing_signal_1d/range/delta"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/add_timing_signal_1d/get_timing_signal_1d/add/y"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_t"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/add_timing_signal_1d/get_timing_signal_1d/add"
      op: "Add"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/add_timing_signal_1d/get_timing_signal_1d/range"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/add_timing_signal_1d/get_timing_signal_1d/add/y"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/add_timing_signal_1d/get_timing_signal_1d/ToFloat"
      op: "Cast"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/add_timing_signal_1d/get_timing_signal_1d/add"
      attr {
        key: "DstT"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "SrcT"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/add_timing_signal_1d/get_timing_signal_1d/ToFloat_1/x"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_t"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 64
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/add_timing_signal_1d/get_timing_signal_1d/ToFloat_1"
      op: "Cast"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/add_timing_signal_1d/get_timing_signal_1d/ToFloat_1/x"
      attr {
        key: "DstT"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "SrcT"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/add_timing_signal_1d/get_timing_signal_1d/sub/y"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_t"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 1.0
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/add_timing_signal_1d/get_timing_signal_1d/sub"
      op: "Sub"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/add_timing_signal_1d/get_timing_signal_1d/ToFloat_1"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/add_timing_signal_1d/get_timing_signal_1d/sub/y"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/add_timing_signal_1d/get_timing_signal_1d/Maximum/y"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_t"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 1.0
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/add_timing_signal_1d/get_timing_signal_1d/Maximum"
      op: "Maximum"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/add_timing_signal_1d/get_timing_signal_1d/sub"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/add_timing_signal_1d/get_timing_signal_1d/Maximum/y"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/add_timing_signal_1d/get_timing_signal_1d/truediv/x"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_t"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 9.21034049987793
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/add_timing_signal_1d/get_timing_signal_1d/truediv"
      op: "RealDiv"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/add_timing_signal_1d/get_timing_signal_1d/truediv/x"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/add_timing_signal_1d/get_timing_signal_1d/Maximum"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/add_timing_signal_1d/get_timing_signal_1d/range_1/start"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_t"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/add_timing_signal_1d/get_timing_signal_1d/range_1/limit"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_t"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 64
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/add_timing_signal_1d/get_timing_signal_1d/range_1/delta"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_t"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/add_timing_signal_1d/get_timing_signal_1d/range_1"
      op: "Range"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/add_timing_signal_1d/get_timing_signal_1d/range_1/start"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/add_timing_signal_1d/get_timing_signal_1d/range_1/limit"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/add_timing_signal_1d/get_timing_signal_1d/range_1/delta"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/add_timing_signal_1d/get_timing_signal_1d/ToFloat_2"
      op: "Cast"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/add_timing_signal_1d/get_timing_signal_1d/range_1"
      attr {
        key: "DstT"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "SrcT"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/add_timing_signal_1d/get_timing_signal_1d/Neg"
      op: "Neg"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/add_timing_signal_1d/get_timing_signal_1d/truediv"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/add_timing_signal_1d/get_timing_signal_1d/mul"
      op: "Mul"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/add_timing_signal_1d/get_timing_signal_1d/ToFloat_2"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/add_timing_signal_1d/get_timing_signal_1d/Neg"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/add_timing_signal_1d/get_timing_signal_1d/Exp"
      op: "Exp"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/add_timing_signal_1d/get_timing_signal_1d/mul"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/add_timing_signal_1d/get_timing_signal_1d/mul_1/x"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_t"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 1.0
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/add_timing_signal_1d/get_timing_signal_1d/mul_1"
      op: "Mul"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/add_timing_signal_1d/get_timing_signal_1d/mul_1/x"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/add_timing_signal_1d/get_timing_signal_1d/Exp"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/add_timing_signal_1d/get_timing_signal_1d/ExpandDims/dim"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_t"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/add_timing_signal_1d/get_timing_signal_1d/ExpandDims"
      op: "ExpandDims"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/add_timing_signal_1d/get_timing_signal_1d/ToFloat"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/add_timing_signal_1d/get_timing_signal_1d/ExpandDims/dim"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/add_timing_signal_1d/get_timing_signal_1d/ExpandDims_1/dim"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_t"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/add_timing_signal_1d/get_timing_signal_1d/ExpandDims_1"
      op: "ExpandDims"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/add_timing_signal_1d/get_timing_signal_1d/mul_1"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/add_timing_signal_1d/get_timing_signal_1d/ExpandDims_1/dim"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/add_timing_signal_1d/get_timing_signal_1d/mul_2"
      op: "Mul"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/add_timing_signal_1d/get_timing_signal_1d/ExpandDims"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/add_timing_signal_1d/get_timing_signal_1d/ExpandDims_1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/add_timing_signal_1d/get_timing_signal_1d/Sin"
      op: "Sin"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/add_timing_signal_1d/get_timing_signal_1d/mul_2"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/add_timing_signal_1d/get_timing_signal_1d/Cos"
      op: "Cos"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/add_timing_signal_1d/get_timing_signal_1d/mul_2"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/add_timing_signal_1d/get_timing_signal_1d/concat/axis"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_t"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/add_timing_signal_1d/get_timing_signal_1d/concat"
      op: "ConcatV2"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/add_timing_signal_1d/get_timing_signal_1d/Sin"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/add_timing_signal_1d/get_timing_signal_1d/Cos"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/add_timing_signal_1d/get_timing_signal_1d/concat/axis"
      attr {
        key: "N"
        value {
          i: 2
        }
      }
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/add_timing_signal_1d/get_timing_signal_1d/FloorMod/x"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_t"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 128
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/add_timing_signal_1d/get_timing_signal_1d/FloorMod/y"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_t"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 2
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/add_timing_signal_1d/get_timing_signal_1d/FloorMod"
      op: "FloorMod"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/add_timing_signal_1d/get_timing_signal_1d/FloorMod/x"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/add_timing_signal_1d/get_timing_signal_1d/FloorMod/y"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/add_timing_signal_1d/get_timing_signal_1d/Pad/paddings/1/0"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_t"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/add_timing_signal_1d/get_timing_signal_1d/Pad/paddings/1"
      op: "Pack"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/add_timing_signal_1d/get_timing_signal_1d/Pad/paddings/1/0"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/add_timing_signal_1d/get_timing_signal_1d/FloorMod"
      attr {
        key: "N"
        value {
          i: 2
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/add_timing_signal_1d/get_timing_signal_1d/Pad/paddings/0_1"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_t"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 2
              }
            }
            tensor_content: "\000\000\000\000\000\000\000\000"
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/add_timing_signal_1d/get_timing_signal_1d/Pad/paddings"
      op: "Pack"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/add_timing_signal_1d/get_timing_signal_1d/Pad/paddings/0_1"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/add_timing_signal_1d/get_timing_signal_1d/Pad/paddings/1"
      attr {
        key: "N"
        value {
          i: 2
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
              dim {
                size: 2
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/add_timing_signal_1d/get_timing_signal_1d/Pad"
      op: "Pad"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/add_timing_signal_1d/get_timing_signal_1d/concat"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/add_timing_signal_1d/get_timing_signal_1d/Pad/paddings"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/add_timing_signal_1d/get_timing_signal_1d/Reshape/shape/0"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_t"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/add_timing_signal_1d/get_timing_signal_1d/Reshape/shape/2"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_t"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 128
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/add_timing_signal_1d/get_timing_signal_1d/Reshape/shape"
      op: "Pack"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/add_timing_signal_1d/get_timing_signal_1d/Reshape/shape/0"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/add_timing_signal_1d/strided_slice_1"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/add_timing_signal_1d/get_timing_signal_1d/Reshape/shape/2"
      attr {
        key: "N"
        value {
          i: 3
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/add_timing_signal_1d/get_timing_signal_1d/Reshape"
      op: "Reshape"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/add_timing_signal_1d/get_timing_signal_1d/Pad"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/add_timing_signal_1d/get_timing_signal_1d/Reshape/shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
              dim {
                size: -1
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/add_timing_signal_1d/add"
      op: "Add"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/add"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/add_timing_signal_1d/get_timing_signal_1d/Reshape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: -1
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/attention_bias_to_padding/Less/y"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_t"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: -1.0
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/attention_bias_to_padding/Less"
      op: "Less"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/attention_bias_ignore_padding/ExpandDims_1"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/attention_bias_to_padding/Less/y"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
              dim {
                size: 1
              }
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/attention_bias_to_padding/ToFloat"
      op: "Cast"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/attention_bias_to_padding/Less"
      attr {
        key: "DstT"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "SrcT"
        value {
          type: DT_BOOL
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
              dim {
                size: 1
              }
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/attention_bias_to_padding/Squeeze"
      op: "Squeeze"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/attention_bias_to_padding/ToFloat"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: -1
              }
            }
          }
        }
      }
      attr {
        key: "squeeze_dims"
        value {
          list {
            i: 1
            i: 2
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/sub/x"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_t"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 1.0
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/sub"
      op: "Sub"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/sub/x"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/attention_bias_to_padding/Squeeze"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/pad_reduce/get_ids/Reshape/shape"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_t"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: -1
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/pad_reduce/get_ids/Reshape"
      op: "Reshape"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/attention_bias_to_padding/Squeeze"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/pad_reduce/get_ids/Reshape/shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/pad_reduce/get_ids/Less/y"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_t"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 9.999999717180685e-10
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/pad_reduce/get_ids/Less"
      op: "Less"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/pad_reduce/get_ids/Reshape"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/pad_reduce/get_ids/Less/y"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/pad_reduce/get_ids/Where"
      op: "Where"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/pad_reduce/get_ids/Less"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/pad_reduce/get_ids/ToInt32"
      op: "Cast"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/pad_reduce/get_ids/Where"
      attr {
        key: "DstT"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "SrcT"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/pad_reduce/get_ids/Shape"
      op: "Shape"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/pad_reduce/get_ids/Reshape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/pad_reduce/get_ids/strided_slice/stack"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_t"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/pad_reduce/get_ids/strided_slice/stack_1"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_t"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/pad_reduce/get_ids/strided_slice/stack_2"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_t"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/pad_reduce/get_ids/strided_slice"
      op: "StridedSlice"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/pad_reduce/get_ids/Shape"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/pad_reduce/get_ids/strided_slice/stack"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/pad_reduce/get_ids/strided_slice/stack_1"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/pad_reduce/get_ids/strided_slice/stack_2"
      attr {
        key: "Index"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "begin_mask"
        value {
          i: 1
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/layer_prepostprocess/Shape"
      op: "Shape"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/add_timing_signal_1d/add"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/layer_prepostprocess/strided_slice/stack"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_t"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/layer_prepostprocess/strided_slice/stack_1"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_t"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/layer_prepostprocess/strided_slice/stack_2"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_t"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/layer_prepostprocess/strided_slice"
      op: "StridedSlice"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/layer_prepostprocess/Shape"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/layer_prepostprocess/strided_slice/stack"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/layer_prepostprocess/strided_slice/stack_1"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/layer_prepostprocess/strided_slice/stack_2"
      attr {
        key: "Index"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "shrink_axis_mask"
        value {
          i: 1
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/layer_prepostprocess/strided_slice_1/stack"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_t"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/layer_prepostprocess/strided_slice_1/stack_1"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_t"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 2
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/layer_prepostprocess/strided_slice_1/stack_2"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_t"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/layer_prepostprocess/strided_slice_1"
      op: "StridedSlice"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/layer_prepostprocess/Shape"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/layer_prepostprocess/strided_slice_1/stack"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/layer_prepostprocess/strided_slice_1/stack_1"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/layer_prepostprocess/strided_slice_1/stack_2"
      attr {
        key: "Index"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "shrink_axis_mask"
        value {
          i: 1
        }
      }
    }
    node {
      name: "cs_similarity_transformer/body/code_embedding/encoder/layer_0/self_attention/layer_prepostprocess/layer_norm/layer_norm_scale/Initializer/ones"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@cs_similarity_transformer/body/code_embedding/encoder/layer_0/self_attention/layer_prepostprocess/layer_norm/layer_norm_scale"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
              dim {
                size: 128
              }
            }
            float_val: 1.0
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/body/code_embedding/encoder/layer_0/self_attention/layer_prepostprocess/layer_norm/layer_norm_scale"
      op: "VarHandleOp"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@cs_similarity_transformer/body/code_embedding/encoder/layer_0/self_attention/layer_prepostprocess/layer_norm/layer_norm_scale"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 128
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: "cs_similarity_transformer/body/code_embedding/encoder/layer_0/self_attention/layer_prepostprocess/layer_norm/layer_norm_scale"
        }
      }
    }
    node {
      name: "cs_similarity_transformer/body/code_embedding/encoder/layer_0/self_attention/layer_prepostprocess/layer_norm/layer_norm_scale/IsInitialized/VarIsInitializedOp"
      op: "VarIsInitializedOp"
      input: "cs_similarity_transformer/body/code_embedding/encoder/layer_0/self_attention/layer_prepostprocess/layer_norm/layer_norm_scale"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/body/code_embedding/encoder/layer_0/self_attention/layer_prepostprocess/layer_norm/layer_norm_scale/Assign"
      op: "AssignVariableOp"
      input: "cs_similarity_transformer/body/code_embedding/encoder/layer_0/self_attention/layer_prepostprocess/layer_norm/layer_norm_scale"
      input: "cs_similarity_transformer/body/code_embedding/encoder/layer_0/self_attention/layer_prepostprocess/layer_norm/layer_norm_scale/Initializer/ones"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@cs_similarity_transformer/body/code_embedding/encoder/layer_0/self_attention/layer_prepostprocess/layer_norm/layer_norm_scale"
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "cs_similarity_transformer/body/code_embedding/encoder/layer_0/self_attention/layer_prepostprocess/layer_norm/layer_norm_scale/Read/ReadVariableOp"
      op: "ReadVariableOp"
      input: "cs_similarity_transformer/body/code_embedding/encoder/layer_0/self_attention/layer_prepostprocess/layer_norm/layer_norm_scale"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@cs_similarity_transformer/body/code_embedding/encoder/layer_0/self_attention/layer_prepostprocess/layer_norm/layer_norm_scale"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "Read_17/ReadVariableOp"
      op: "ReadVariableOp"
      input: "Read_17/ReadVariableOp/Switch:1"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "Read_17/ReadVariableOp/Switch"
      op: "Switch"
      input: "cs_similarity_transformer/body/code_embedding/encoder/layer_0/self_attention/layer_prepostprocess/layer_norm/layer_norm_scale"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/pred_id"
      attr {
        key: "T"
        value {
          type: DT_RESOURCE
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@cs_similarity_transformer/body/code_embedding/encoder/layer_0/self_attention/layer_prepostprocess/layer_norm/layer_norm_scale"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
            shape {
            }
          }
        }
      }
    }
    node {
      name: "Identity_17"
      op: "Identity"
      input: "Read_17/ReadVariableOp"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/body/code_embedding/encoder/layer_0/self_attention/layer_prepostprocess/layer_norm/layer_norm_bias/Initializer/zeros"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@cs_similarity_transformer/body/code_embedding/encoder/layer_0/self_attention/layer_prepostprocess/layer_norm/layer_norm_bias"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
              dim {
                size: 128
              }
            }
            float_val: 0.0
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/body/code_embedding/encoder/layer_0/self_attention/layer_prepostprocess/layer_norm/layer_norm_bias"
      op: "VarHandleOp"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@cs_similarity_transformer/body/code_embedding/encoder/layer_0/self_attention/layer_prepostprocess/layer_norm/layer_norm_bias"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 128
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: "cs_similarity_transformer/body/code_embedding/encoder/layer_0/self_attention/layer_prepostprocess/layer_norm/layer_norm_bias"
        }
      }
    }
    node {
      name: "cs_similarity_transformer/body/code_embedding/encoder/layer_0/self_attention/layer_prepostprocess/layer_norm/layer_norm_bias/IsInitialized/VarIsInitializedOp"
      op: "VarIsInitializedOp"
      input: "cs_similarity_transformer/body/code_embedding/encoder/layer_0/self_attention/layer_prepostprocess/layer_norm/layer_norm_bias"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/body/code_embedding/encoder/layer_0/self_attention/layer_prepostprocess/layer_norm/layer_norm_bias/Assign"
      op: "AssignVariableOp"
      input: "cs_similarity_transformer/body/code_embedding/encoder/layer_0/self_attention/layer_prepostprocess/layer_norm/layer_norm_bias"
      input: "cs_similarity_transformer/body/code_embedding/encoder/layer_0/self_attention/layer_prepostprocess/layer_norm/layer_norm_bias/Initializer/zeros"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@cs_similarity_transformer/body/code_embedding/encoder/layer_0/self_attention/layer_prepostprocess/layer_norm/layer_norm_bias"
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "cs_similarity_transformer/body/code_embedding/encoder/layer_0/self_attention/layer_prepostprocess/layer_norm/layer_norm_bias/Read/ReadVariableOp"
      op: "ReadVariableOp"
      input: "cs_similarity_transformer/body/code_embedding/encoder/layer_0/self_attention/layer_prepostprocess/layer_norm/layer_norm_bias"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@cs_similarity_transformer/body/code_embedding/encoder/layer_0/self_attention/layer_prepostprocess/layer_norm/layer_norm_bias"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "Read_18/ReadVariableOp"
      op: "ReadVariableOp"
      input: "Read_18/ReadVariableOp/Switch:1"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "Read_18/ReadVariableOp/Switch"
      op: "Switch"
      input: "cs_similarity_transformer/body/code_embedding/encoder/layer_0/self_attention/layer_prepostprocess/layer_norm/layer_norm_bias"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/pred_id"
      attr {
        key: "T"
        value {
          type: DT_RESOURCE
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@cs_similarity_transformer/body/code_embedding/encoder/layer_0/self_attention/layer_prepostprocess/layer_norm/layer_norm_bias"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
            shape {
            }
          }
        }
      }
    }
    node {
      name: "Identity_18"
      op: "Identity"
      input: "Read_18/ReadVariableOp"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/layer_prepostprocess/layer_norm/Const"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_t"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 9.999999974752427e-07
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/layer_prepostprocess/layer_norm/Mean/reduction_indices"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_t"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: -1
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/layer_prepostprocess/layer_norm/Mean"
      op: "Mean"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/add_timing_signal_1d/add"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/layer_prepostprocess/layer_norm/Mean/reduction_indices"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: true
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/layer_prepostprocess/layer_norm/sub"
      op: "Sub"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/add_timing_signal_1d/add"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/layer_prepostprocess/layer_norm/Mean"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: -1
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/layer_prepostprocess/layer_norm/Square"
      op: "Square"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/layer_prepostprocess/layer_norm/sub"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: -1
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/layer_prepostprocess/layer_norm/Mean_1/reduction_indices"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_t"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: -1
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/layer_prepostprocess/layer_norm/Mean_1"
      op: "Mean"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/layer_prepostprocess/layer_norm/Square"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/layer_prepostprocess/layer_norm/Mean_1/reduction_indices"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: true
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/layer_prepostprocess/layer_norm/sub_1"
      op: "Sub"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/add_timing_signal_1d/add"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/layer_prepostprocess/layer_norm/Mean"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: -1
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/layer_prepostprocess/layer_norm/add"
      op: "Add"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/layer_prepostprocess/layer_norm/Mean_1"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/layer_prepostprocess/layer_norm/Const"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/layer_prepostprocess/layer_norm/Rsqrt"
      op: "Rsqrt"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/layer_prepostprocess/layer_norm/add"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/layer_prepostprocess/layer_norm/mul"
      op: "Mul"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/layer_prepostprocess/layer_norm/sub_1"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/layer_prepostprocess/layer_norm/Rsqrt"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: -1
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/layer_prepostprocess/layer_norm/mul_1"
      op: "Mul"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/layer_prepostprocess/layer_norm/mul"
      input: "Identity_17"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: -1
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/layer_prepostprocess/layer_norm/add_1"
      op: "Add"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/layer_prepostprocess/layer_norm/mul_1"
      input: "Identity_18"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: -1
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/body/code_embedding/encoder/layer_0/self_attention/multihead_attention/q/kernel/Initializer/random_uniform/shape"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@cs_similarity_transformer/body/code_embedding/encoder/layer_0/self_attention/multihead_attention/q/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 2
              }
            }
            tensor_content: "\200\000\000\000\200\000\000\000"
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/body/code_embedding/encoder/layer_0/self_attention/multihead_attention/q/kernel/Initializer/random_uniform/min"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@cs_similarity_transformer/body/code_embedding/encoder/layer_0/self_attention/multihead_attention/q/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: -0.1530931144952774
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/body/code_embedding/encoder/layer_0/self_attention/multihead_attention/q/kernel/Initializer/random_uniform/max"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@cs_similarity_transformer/body/code_embedding/encoder/layer_0/self_attention/multihead_attention/q/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.1530931144952774
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/body/code_embedding/encoder/layer_0/self_attention/multihead_attention/q/kernel/Initializer/random_uniform/RandomUniform"
      op: "RandomUniform"
      input: "cs_similarity_transformer/body/code_embedding/encoder/layer_0/self_attention/multihead_attention/q/kernel/Initializer/random_uniform/shape"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@cs_similarity_transformer/body/code_embedding/encoder/layer_0/self_attention/multihead_attention/q/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "cs_similarity_transformer/body/code_embedding/encoder/layer_0/self_attention/multihead_attention/q/kernel/Initializer/random_uniform/sub"
      op: "Sub"
      input: "cs_similarity_transformer/body/code_embedding/encoder/layer_0/self_attention/multihead_attention/q/kernel/Initializer/random_uniform/max"
      input: "cs_similarity_transformer/body/code_embedding/encoder/layer_0/self_attention/multihead_attention/q/kernel/Initializer/random_uniform/min"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@cs_similarity_transformer/body/code_embedding/encoder/layer_0/self_attention/multihead_attention/q/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/body/code_embedding/encoder/layer_0/self_attention/multihead_attention/q/kernel/Initializer/random_uniform/mul"
      op: "Mul"
      input: "cs_similarity_transformer/body/code_embedding/encoder/layer_0/self_attention/multihead_attention/q/kernel/Initializer/random_uniform/RandomUniform"
      input: "cs_similarity_transformer/body/code_embedding/encoder/layer_0/self_attention/multihead_attention/q/kernel/Initializer/random_uniform/sub"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@cs_similarity_transformer/body/code_embedding/encoder/layer_0/self_attention/multihead_attention/q/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/body/code_embedding/encoder/layer_0/self_attention/multihead_attention/q/kernel/Initializer/random_uniform"
      op: "Add"
      input: "cs_similarity_transformer/body/code_embedding/encoder/layer_0/self_attention/multihead_attention/q/kernel/Initializer/random_uniform/mul"
      input: "cs_similarity_transformer/body/code_embedding/encoder/layer_0/self_attention/multihead_attention/q/kernel/Initializer/random_uniform/min"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@cs_similarity_transformer/body/code_embedding/encoder/layer_0/self_attention/multihead_attention/q/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/body/code_embedding/encoder/layer_0/self_attention/multihead_attention/q/kernel"
      op: "VarHandleOp"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@cs_similarity_transformer/body/code_embedding/encoder/layer_0/self_attention/multihead_attention/q/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 128
            }
            dim {
              size: 128
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: "cs_similarity_transformer/body/code_embedding/encoder/layer_0/self_attention/multihead_attention/q/kernel"
        }
      }
    }
    node {
      name: "cs_similarity_transformer/body/code_embedding/encoder/layer_0/self_attention/multihead_attention/q/kernel/IsInitialized/VarIsInitializedOp"
      op: "VarIsInitializedOp"
      input: "cs_similarity_transformer/body/code_embedding/encoder/layer_0/self_attention/multihead_attention/q/kernel"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/body/code_embedding/encoder/layer_0/self_attention/multihead_attention/q/kernel/Assign"
      op: "AssignVariableOp"
      input: "cs_similarity_transformer/body/code_embedding/encoder/layer_0/self_attention/multihead_attention/q/kernel"
      input: "cs_similarity_transformer/body/code_embedding/encoder/layer_0/self_attention/multihead_attention/q/kernel/Initializer/random_uniform"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@cs_similarity_transformer/body/code_embedding/encoder/layer_0/self_attention/multihead_attention/q/kernel"
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "cs_similarity_transformer/body/code_embedding/encoder/layer_0/self_attention/multihead_attention/q/kernel/Read/ReadVariableOp"
      op: "ReadVariableOp"
      input: "cs_similarity_transformer/body/code_embedding/encoder/layer_0/self_attention/multihead_attention/q/kernel"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@cs_similarity_transformer/body/code_embedding/encoder/layer_0/self_attention/multihead_attention/q/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "Read_19/ReadVariableOp"
      op: "ReadVariableOp"
      input: "Read_19/ReadVariableOp/Switch:1"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "Read_19/ReadVariableOp/Switch"
      op: "Switch"
      input: "cs_similarity_transformer/body/code_embedding/encoder/layer_0/self_attention/multihead_attention/q/kernel"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/pred_id"
      attr {
        key: "T"
        value {
          type: DT_RESOURCE
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@cs_similarity_transformer/body/code_embedding/encoder/layer_0/self_attention/multihead_attention/q/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
            shape {
            }
          }
        }
      }
    }
    node {
      name: "Identity_19"
      op: "Identity"
      input: "Read_19/ReadVariableOp"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/q/Tensordot/Shape"
      op: "Shape"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/layer_prepostprocess/layer_norm/add_1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/q/Tensordot/Rank"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_t"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 3
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/q/Tensordot/axes"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_t"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 2
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/q/Tensordot/GreaterEqual/y"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_t"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/q/Tensordot/GreaterEqual"
      op: "GreaterEqual"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/q/Tensordot/axes"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/q/Tensordot/GreaterEqual/y"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/q/Tensordot/Cast"
      op: "Cast"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/q/Tensordot/GreaterEqual"
      attr {
        key: "DstT"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "SrcT"
        value {
          type: DT_BOOL
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/q/Tensordot/mul"
      op: "Mul"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/q/Tensordot/Cast"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/q/Tensordot/axes"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/q/Tensordot/Less/y"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_t"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/q/Tensordot/Less"
      op: "Less"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/q/Tensordot/axes"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/q/Tensordot/Less/y"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/q/Tensordot/Cast_1"
      op: "Cast"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/q/Tensordot/Less"
      attr {
        key: "DstT"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "SrcT"
        value {
          type: DT_BOOL
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/q/Tensordot/add"
      op: "Add"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/q/Tensordot/axes"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/q/Tensordot/Rank"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/q/Tensordot/mul_1"
      op: "Mul"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/q/Tensordot/Cast_1"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/q/Tensordot/add"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/q/Tensordot/add_1"
      op: "Add"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/q/Tensordot/mul"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/q/Tensordot/mul_1"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/q/Tensordot/range/start"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_t"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/q/Tensordot/range/delta"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_t"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/q/Tensordot/range"
      op: "Range"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/q/Tensordot/range/start"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/q/Tensordot/Rank"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/q/Tensordot/range/delta"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/q/Tensordot/ListDiff"
      op: "ListDiff"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/q/Tensordot/range"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/q/Tensordot/add_1"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/q/Tensordot/GatherV2/axis"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_t"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/q/Tensordot/GatherV2"
      op: "GatherV2"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/q/Tensordot/Shape"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/q/Tensordot/ListDiff"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/q/Tensordot/GatherV2/axis"
      attr {
        key: "Taxis"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "Tindices"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "Tparams"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/q/Tensordot/GatherV2_1/axis"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_t"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/q/Tensordot/GatherV2_1"
      op: "GatherV2"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/q/Tensordot/Shape"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/q/Tensordot/add_1"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/q/Tensordot/GatherV2_1/axis"
      attr {
        key: "Taxis"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "Tindices"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "Tparams"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/q/Tensordot/Const"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_t"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/q/Tensordot/Prod"
      op: "Prod"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/q/Tensordot/GatherV2"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/q/Tensordot/Const"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/q/Tensordot/Const_1"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_t"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/q/Tensordot/Prod_1"
      op: "Prod"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/q/Tensordot/GatherV2_1"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/q/Tensordot/Const_1"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/q/Tensordot/concat/axis"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_t"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/q/Tensordot/concat"
      op: "ConcatV2"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/q/Tensordot/GatherV2_1"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/q/Tensordot/GatherV2"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/q/Tensordot/concat/axis"
      attr {
        key: "N"
        value {
          i: 2
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/q/Tensordot/concat_1/axis"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_t"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/q/Tensordot/concat_1"
      op: "ConcatV2"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/q/Tensordot/ListDiff"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/q/Tensordot/add_1"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/q/Tensordot/concat_1/axis"
      attr {
        key: "N"
        value {
          i: 2
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/q/Tensordot/stack"
      op: "Pack"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/q/Tensordot/Prod"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/q/Tensordot/Prod_1"
      attr {
        key: "N"
        value {
          i: 2
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/q/Tensordot/transpose"
      op: "Transpose"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/layer_prepostprocess/layer_norm/add_1"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/q/Tensordot/concat_1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: -1
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/q/Tensordot/Reshape"
      op: "Reshape"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/q/Tensordot/transpose"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/q/Tensordot/stack"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/q/Tensordot/transpose_1/perm"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_t"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 2
              }
            }
            tensor_content: "\000\000\000\000\001\000\000\000"
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/q/Tensordot/transpose_1"
      op: "Transpose"
      input: "Identity_19"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/q/Tensordot/transpose_1/perm"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/q/Tensordot/Reshape_1/shape"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_t"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 2
              }
            }
            tensor_content: "\200\000\000\000\200\000\000\000"
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/q/Tensordot/Reshape_1"
      op: "Reshape"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/q/Tensordot/transpose_1"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/q/Tensordot/Reshape_1/shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/q/Tensordot/MatMul"
      op: "MatMul"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/q/Tensordot/Reshape"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/q/Tensordot/Reshape_1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/q/Tensordot/Const_2"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_t"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 128
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/q/Tensordot/concat_2/axis"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_t"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/q/Tensordot/concat_2"
      op: "ConcatV2"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/q/Tensordot/GatherV2"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/q/Tensordot/Const_2"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/q/Tensordot/concat_2/axis"
      attr {
        key: "N"
        value {
          i: 2
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/q/Tensordot"
      op: "Reshape"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/q/Tensordot/MatMul"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/q/Tensordot/concat_2"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: -1
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/body/code_embedding/encoder/layer_0/self_attention/multihead_attention/k/kernel/Initializer/random_uniform/shape"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@cs_similarity_transformer/body/code_embedding/encoder/layer_0/self_attention/multihead_attention/k/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 2
              }
            }
            tensor_content: "\200\000\000\000\200\000\000\000"
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/body/code_embedding/encoder/layer_0/self_attention/multihead_attention/k/kernel/Initializer/random_uniform/min"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@cs_similarity_transformer/body/code_embedding/encoder/layer_0/self_attention/multihead_attention/k/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: -0.1530931144952774
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/body/code_embedding/encoder/layer_0/self_attention/multihead_attention/k/kernel/Initializer/random_uniform/max"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@cs_similarity_transformer/body/code_embedding/encoder/layer_0/self_attention/multihead_attention/k/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.1530931144952774
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/body/code_embedding/encoder/layer_0/self_attention/multihead_attention/k/kernel/Initializer/random_uniform/RandomUniform"
      op: "RandomUniform"
      input: "cs_similarity_transformer/body/code_embedding/encoder/layer_0/self_attention/multihead_attention/k/kernel/Initializer/random_uniform/shape"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@cs_similarity_transformer/body/code_embedding/encoder/layer_0/self_attention/multihead_attention/k/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "cs_similarity_transformer/body/code_embedding/encoder/layer_0/self_attention/multihead_attention/k/kernel/Initializer/random_uniform/sub"
      op: "Sub"
      input: "cs_similarity_transformer/body/code_embedding/encoder/layer_0/self_attention/multihead_attention/k/kernel/Initializer/random_uniform/max"
      input: "cs_similarity_transformer/body/code_embedding/encoder/layer_0/self_attention/multihead_attention/k/kernel/Initializer/random_uniform/min"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@cs_similarity_transformer/body/code_embedding/encoder/layer_0/self_attention/multihead_attention/k/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/body/code_embedding/encoder/layer_0/self_attention/multihead_attention/k/kernel/Initializer/random_uniform/mul"
      op: "Mul"
      input: "cs_similarity_transformer/body/code_embedding/encoder/layer_0/self_attention/multihead_attention/k/kernel/Initializer/random_uniform/RandomUniform"
      input: "cs_similarity_transformer/body/code_embedding/encoder/layer_0/self_attention/multihead_attention/k/kernel/Initializer/random_uniform/sub"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@cs_similarity_transformer/body/code_embedding/encoder/layer_0/self_attention/multihead_attention/k/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/body/code_embedding/encoder/layer_0/self_attention/multihead_attention/k/kernel/Initializer/random_uniform"
      op: "Add"
      input: "cs_similarity_transformer/body/code_embedding/encoder/layer_0/self_attention/multihead_attention/k/kernel/Initializer/random_uniform/mul"
      input: "cs_similarity_transformer/body/code_embedding/encoder/layer_0/self_attention/multihead_attention/k/kernel/Initializer/random_uniform/min"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@cs_similarity_transformer/body/code_embedding/encoder/layer_0/self_attention/multihead_attention/k/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/body/code_embedding/encoder/layer_0/self_attention/multihead_attention/k/kernel"
      op: "VarHandleOp"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@cs_similarity_transformer/body/code_embedding/encoder/layer_0/self_attention/multihead_attention/k/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 128
            }
            dim {
              size: 128
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: "cs_similarity_transformer/body/code_embedding/encoder/layer_0/self_attention/multihead_attention/k/kernel"
        }
      }
    }
    node {
      name: "cs_similarity_transformer/body/code_embedding/encoder/layer_0/self_attention/multihead_attention/k/kernel/IsInitialized/VarIsInitializedOp"
      op: "VarIsInitializedOp"
      input: "cs_similarity_transformer/body/code_embedding/encoder/layer_0/self_attention/multihead_attention/k/kernel"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/body/code_embedding/encoder/layer_0/self_attention/multihead_attention/k/kernel/Assign"
      op: "AssignVariableOp"
      input: "cs_similarity_transformer/body/code_embedding/encoder/layer_0/self_attention/multihead_attention/k/kernel"
      input: "cs_similarity_transformer/body/code_embedding/encoder/layer_0/self_attention/multihead_attention/k/kernel/Initializer/random_uniform"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@cs_similarity_transformer/body/code_embedding/encoder/layer_0/self_attention/multihead_attention/k/kernel"
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "cs_similarity_transformer/body/code_embedding/encoder/layer_0/self_attention/multihead_attention/k/kernel/Read/ReadVariableOp"
      op: "ReadVariableOp"
      input: "cs_similarity_transformer/body/code_embedding/encoder/layer_0/self_attention/multihead_attention/k/kernel"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@cs_similarity_transformer/body/code_embedding/encoder/layer_0/self_attention/multihead_attention/k/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "Read_20/ReadVariableOp"
      op: "ReadVariableOp"
      input: "Read_20/ReadVariableOp/Switch:1"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "Read_20/ReadVariableOp/Switch"
      op: "Switch"
      input: "cs_similarity_transformer/body/code_embedding/encoder/layer_0/self_attention/multihead_attention/k/kernel"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/pred_id"
      attr {
        key: "T"
        value {
          type: DT_RESOURCE
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@cs_similarity_transformer/body/code_embedding/encoder/layer_0/self_attention/multihead_attention/k/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
            shape {
            }
          }
        }
      }
    }
    node {
      name: "Identity_20"
      op: "Identity"
      input: "Read_20/ReadVariableOp"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/k/Tensordot/Shape"
      op: "Shape"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/layer_prepostprocess/layer_norm/add_1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/k/Tensordot/Rank"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_t"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 3
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/k/Tensordot/axes"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_t"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 2
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/k/Tensordot/GreaterEqual/y"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_t"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/k/Tensordot/GreaterEqual"
      op: "GreaterEqual"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/k/Tensordot/axes"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/k/Tensordot/GreaterEqual/y"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/k/Tensordot/Cast"
      op: "Cast"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/k/Tensordot/GreaterEqual"
      attr {
        key: "DstT"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "SrcT"
        value {
          type: DT_BOOL
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/k/Tensordot/mul"
      op: "Mul"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/k/Tensordot/Cast"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/k/Tensordot/axes"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/k/Tensordot/Less/y"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_t"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/k/Tensordot/Less"
      op: "Less"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/k/Tensordot/axes"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/k/Tensordot/Less/y"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/k/Tensordot/Cast_1"
      op: "Cast"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/k/Tensordot/Less"
      attr {
        key: "DstT"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "SrcT"
        value {
          type: DT_BOOL
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/k/Tensordot/add"
      op: "Add"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/k/Tensordot/axes"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/k/Tensordot/Rank"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/k/Tensordot/mul_1"
      op: "Mul"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/k/Tensordot/Cast_1"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/k/Tensordot/add"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/k/Tensordot/add_1"
      op: "Add"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/k/Tensordot/mul"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/k/Tensordot/mul_1"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/k/Tensordot/range/start"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_t"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/k/Tensordot/range/delta"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_t"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/k/Tensordot/range"
      op: "Range"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/k/Tensordot/range/start"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/k/Tensordot/Rank"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/k/Tensordot/range/delta"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/k/Tensordot/ListDiff"
      op: "ListDiff"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/k/Tensordot/range"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/k/Tensordot/add_1"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/k/Tensordot/GatherV2/axis"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_t"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/k/Tensordot/GatherV2"
      op: "GatherV2"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/k/Tensordot/Shape"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/k/Tensordot/ListDiff"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/k/Tensordot/GatherV2/axis"
      attr {
        key: "Taxis"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "Tindices"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "Tparams"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/k/Tensordot/GatherV2_1/axis"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_t"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/k/Tensordot/GatherV2_1"
      op: "GatherV2"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/k/Tensordot/Shape"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/k/Tensordot/add_1"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/k/Tensordot/GatherV2_1/axis"
      attr {
        key: "Taxis"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "Tindices"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "Tparams"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/k/Tensordot/Const"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_t"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/k/Tensordot/Prod"
      op: "Prod"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/k/Tensordot/GatherV2"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/k/Tensordot/Const"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/k/Tensordot/Const_1"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_t"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/k/Tensordot/Prod_1"
      op: "Prod"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/k/Tensordot/GatherV2_1"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/k/Tensordot/Const_1"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/k/Tensordot/concat/axis"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_t"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/k/Tensordot/concat"
      op: "ConcatV2"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/k/Tensordot/GatherV2_1"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/k/Tensordot/GatherV2"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/k/Tensordot/concat/axis"
      attr {
        key: "N"
        value {
          i: 2
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/k/Tensordot/concat_1/axis"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_t"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/k/Tensordot/concat_1"
      op: "ConcatV2"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/k/Tensordot/ListDiff"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/k/Tensordot/add_1"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/k/Tensordot/concat_1/axis"
      attr {
        key: "N"
        value {
          i: 2
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/k/Tensordot/stack"
      op: "Pack"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/k/Tensordot/Prod"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/k/Tensordot/Prod_1"
      attr {
        key: "N"
        value {
          i: 2
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/k/Tensordot/transpose"
      op: "Transpose"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/layer_prepostprocess/layer_norm/add_1"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/k/Tensordot/concat_1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: -1
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/k/Tensordot/Reshape"
      op: "Reshape"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/k/Tensordot/transpose"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/k/Tensordot/stack"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/k/Tensordot/transpose_1/perm"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_t"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 2
              }
            }
            tensor_content: "\000\000\000\000\001\000\000\000"
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/k/Tensordot/transpose_1"
      op: "Transpose"
      input: "Identity_20"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/k/Tensordot/transpose_1/perm"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/k/Tensordot/Reshape_1/shape"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_t"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 2
              }
            }
            tensor_content: "\200\000\000\000\200\000\000\000"
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/k/Tensordot/Reshape_1"
      op: "Reshape"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/k/Tensordot/transpose_1"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/k/Tensordot/Reshape_1/shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/k/Tensordot/MatMul"
      op: "MatMul"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/k/Tensordot/Reshape"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/k/Tensordot/Reshape_1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/k/Tensordot/Const_2"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_t"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 128
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/k/Tensordot/concat_2/axis"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_t"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/k/Tensordot/concat_2"
      op: "ConcatV2"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/k/Tensordot/GatherV2"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/k/Tensordot/Const_2"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/k/Tensordot/concat_2/axis"
      attr {
        key: "N"
        value {
          i: 2
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/k/Tensordot"
      op: "Reshape"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/k/Tensordot/MatMul"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/k/Tensordot/concat_2"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: -1
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/body/code_embedding/encoder/layer_0/self_attention/multihead_attention/v/kernel/Initializer/random_uniform/shape"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@cs_similarity_transformer/body/code_embedding/encoder/layer_0/self_attention/multihead_attention/v/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 2
              }
            }
            tensor_content: "\200\000\000\000\200\000\000\000"
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/body/code_embedding/encoder/layer_0/self_attention/multihead_attention/v/kernel/Initializer/random_uniform/min"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@cs_similarity_transformer/body/code_embedding/encoder/layer_0/self_attention/multihead_attention/v/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: -0.1530931144952774
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/body/code_embedding/encoder/layer_0/self_attention/multihead_attention/v/kernel/Initializer/random_uniform/max"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@cs_similarity_transformer/body/code_embedding/encoder/layer_0/self_attention/multihead_attention/v/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.1530931144952774
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/body/code_embedding/encoder/layer_0/self_attention/multihead_attention/v/kernel/Initializer/random_uniform/RandomUniform"
      op: "RandomUniform"
      input: "cs_similarity_transformer/body/code_embedding/encoder/layer_0/self_attention/multihead_attention/v/kernel/Initializer/random_uniform/shape"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@cs_similarity_transformer/body/code_embedding/encoder/layer_0/self_attention/multihead_attention/v/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "cs_similarity_transformer/body/code_embedding/encoder/layer_0/self_attention/multihead_attention/v/kernel/Initializer/random_uniform/sub"
      op: "Sub"
      input: "cs_similarity_transformer/body/code_embedding/encoder/layer_0/self_attention/multihead_attention/v/kernel/Initializer/random_uniform/max"
      input: "cs_similarity_transformer/body/code_embedding/encoder/layer_0/self_attention/multihead_attention/v/kernel/Initializer/random_uniform/min"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@cs_similarity_transformer/body/code_embedding/encoder/layer_0/self_attention/multihead_attention/v/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/body/code_embedding/encoder/layer_0/self_attention/multihead_attention/v/kernel/Initializer/random_uniform/mul"
      op: "Mul"
      input: "cs_similarity_transformer/body/code_embedding/encoder/layer_0/self_attention/multihead_attention/v/kernel/Initializer/random_uniform/RandomUniform"
      input: "cs_similarity_transformer/body/code_embedding/encoder/layer_0/self_attention/multihead_attention/v/kernel/Initializer/random_uniform/sub"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@cs_similarity_transformer/body/code_embedding/encoder/layer_0/self_attention/multihead_attention/v/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/body/code_embedding/encoder/layer_0/self_attention/multihead_attention/v/kernel/Initializer/random_uniform"
      op: "Add"
      input: "cs_similarity_transformer/body/code_embedding/encoder/layer_0/self_attention/multihead_attention/v/kernel/Initializer/random_uniform/mul"
      input: "cs_similarity_transformer/body/code_embedding/encoder/layer_0/self_attention/multihead_attention/v/kernel/Initializer/random_uniform/min"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@cs_similarity_transformer/body/code_embedding/encoder/layer_0/self_attention/multihead_attention/v/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/body/code_embedding/encoder/layer_0/self_attention/multihead_attention/v/kernel"
      op: "VarHandleOp"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@cs_similarity_transformer/body/code_embedding/encoder/layer_0/self_attention/multihead_attention/v/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 128
            }
            dim {
              size: 128
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: "cs_similarity_transformer/body/code_embedding/encoder/layer_0/self_attention/multihead_attention/v/kernel"
        }
      }
    }
    node {
      name: "cs_similarity_transformer/body/code_embedding/encoder/layer_0/self_attention/multihead_attention/v/kernel/IsInitialized/VarIsInitializedOp"
      op: "VarIsInitializedOp"
      input: "cs_similarity_transformer/body/code_embedding/encoder/layer_0/self_attention/multihead_attention/v/kernel"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/body/code_embedding/encoder/layer_0/self_attention/multihead_attention/v/kernel/Assign"
      op: "AssignVariableOp"
      input: "cs_similarity_transformer/body/code_embedding/encoder/layer_0/self_attention/multihead_attention/v/kernel"
      input: "cs_similarity_transformer/body/code_embedding/encoder/layer_0/self_attention/multihead_attention/v/kernel/Initializer/random_uniform"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@cs_similarity_transformer/body/code_embedding/encoder/layer_0/self_attention/multihead_attention/v/kernel"
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "cs_similarity_transformer/body/code_embedding/encoder/layer_0/self_attention/multihead_attention/v/kernel/Read/ReadVariableOp"
      op: "ReadVariableOp"
      input: "cs_similarity_transformer/body/code_embedding/encoder/layer_0/self_attention/multihead_attention/v/kernel"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@cs_similarity_transformer/body/code_embedding/encoder/layer_0/self_attention/multihead_attention/v/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "Read_21/ReadVariableOp"
      op: "ReadVariableOp"
      input: "Read_21/ReadVariableOp/Switch:1"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "Read_21/ReadVariableOp/Switch"
      op: "Switch"
      input: "cs_similarity_transformer/body/code_embedding/encoder/layer_0/self_attention/multihead_attention/v/kernel"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/pred_id"
      attr {
        key: "T"
        value {
          type: DT_RESOURCE
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@cs_similarity_transformer/body/code_embedding/encoder/layer_0/self_attention/multihead_attention/v/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
            shape {
            }
          }
        }
      }
    }
    node {
      name: "Identity_21"
      op: "Identity"
      input: "Read_21/ReadVariableOp"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/v/Tensordot/Shape"
      op: "Shape"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/layer_prepostprocess/layer_norm/add_1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/v/Tensordot/Rank"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_t"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 3
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/v/Tensordot/axes"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_t"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 2
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/v/Tensordot/GreaterEqual/y"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_t"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/v/Tensordot/GreaterEqual"
      op: "GreaterEqual"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/v/Tensordot/axes"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/v/Tensordot/GreaterEqual/y"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/v/Tensordot/Cast"
      op: "Cast"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/v/Tensordot/GreaterEqual"
      attr {
        key: "DstT"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "SrcT"
        value {
          type: DT_BOOL
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/v/Tensordot/mul"
      op: "Mul"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/v/Tensordot/Cast"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/v/Tensordot/axes"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/v/Tensordot/Less/y"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_t"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/v/Tensordot/Less"
      op: "Less"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/v/Tensordot/axes"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/v/Tensordot/Less/y"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/v/Tensordot/Cast_1"
      op: "Cast"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/v/Tensordot/Less"
      attr {
        key: "DstT"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "SrcT"
        value {
          type: DT_BOOL
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/v/Tensordot/add"
      op: "Add"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/v/Tensordot/axes"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/v/Tensordot/Rank"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/v/Tensordot/mul_1"
      op: "Mul"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/v/Tensordot/Cast_1"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/v/Tensordot/add"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/v/Tensordot/add_1"
      op: "Add"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/v/Tensordot/mul"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/v/Tensordot/mul_1"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/v/Tensordot/range/start"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_t"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/v/Tensordot/range/delta"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_t"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/v/Tensordot/range"
      op: "Range"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/v/Tensordot/range/start"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/v/Tensordot/Rank"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/v/Tensordot/range/delta"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/v/Tensordot/ListDiff"
      op: "ListDiff"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/v/Tensordot/range"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/v/Tensordot/add_1"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/v/Tensordot/GatherV2/axis"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_t"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/v/Tensordot/GatherV2"
      op: "GatherV2"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/v/Tensordot/Shape"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/v/Tensordot/ListDiff"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/v/Tensordot/GatherV2/axis"
      attr {
        key: "Taxis"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "Tindices"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "Tparams"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/v/Tensordot/GatherV2_1/axis"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_t"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/v/Tensordot/GatherV2_1"
      op: "GatherV2"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/v/Tensordot/Shape"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/v/Tensordot/add_1"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/v/Tensordot/GatherV2_1/axis"
      attr {
        key: "Taxis"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "Tindices"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "Tparams"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/v/Tensordot/Const"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_t"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/v/Tensordot/Prod"
      op: "Prod"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/v/Tensordot/GatherV2"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/v/Tensordot/Const"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/v/Tensordot/Const_1"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_t"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/v/Tensordot/Prod_1"
      op: "Prod"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/v/Tensordot/GatherV2_1"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/v/Tensordot/Const_1"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/v/Tensordot/concat/axis"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_t"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/v/Tensordot/concat"
      op: "ConcatV2"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/v/Tensordot/GatherV2_1"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/v/Tensordot/GatherV2"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/v/Tensordot/concat/axis"
      attr {
        key: "N"
        value {
          i: 2
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/v/Tensordot/concat_1/axis"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_t"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/v/Tensordot/concat_1"
      op: "ConcatV2"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/v/Tensordot/ListDiff"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/v/Tensordot/add_1"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/v/Tensordot/concat_1/axis"
      attr {
        key: "N"
        value {
          i: 2
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/v/Tensordot/stack"
      op: "Pack"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/v/Tensordot/Prod"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/v/Tensordot/Prod_1"
      attr {
        key: "N"
        value {
          i: 2
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/v/Tensordot/transpose"
      op: "Transpose"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/layer_prepostprocess/layer_norm/add_1"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/v/Tensordot/concat_1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: -1
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/v/Tensordot/Reshape"
      op: "Reshape"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/v/Tensordot/transpose"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/v/Tensordot/stack"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/v/Tensordot/transpose_1/perm"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_t"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 2
              }
            }
            tensor_content: "\000\000\000\000\001\000\000\000"
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/v/Tensordot/transpose_1"
      op: "Transpose"
      input: "Identity_21"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/v/Tensordot/transpose_1/perm"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/v/Tensordot/Reshape_1/shape"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_t"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 2
              }
            }
            tensor_content: "\200\000\000\000\200\000\000\000"
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/v/Tensordot/Reshape_1"
      op: "Reshape"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/v/Tensordot/transpose_1"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/v/Tensordot/Reshape_1/shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/v/Tensordot/MatMul"
      op: "MatMul"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/v/Tensordot/Reshape"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/v/Tensordot/Reshape_1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/v/Tensordot/Const_2"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_t"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 128
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/v/Tensordot/concat_2/axis"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_t"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/v/Tensordot/concat_2"
      op: "ConcatV2"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/v/Tensordot/GatherV2"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/v/Tensordot/Const_2"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/v/Tensordot/concat_2/axis"
      attr {
        key: "N"
        value {
          i: 2
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/v/Tensordot"
      op: "Reshape"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/v/Tensordot/MatMul"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/v/Tensordot/concat_2"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: -1
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/split_heads/split_last_dimension/Shape"
      op: "Shape"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/q/Tensordot"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/split_heads/split_last_dimension/strided_slice/stack"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_t"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/split_heads/split_last_dimension/strided_slice/stack_1"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_t"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/split_heads/split_last_dimension/strided_slice/stack_2"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_t"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/split_heads/split_last_dimension/strided_slice"
      op: "StridedSlice"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/split_heads/split_last_dimension/Shape"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/split_heads/split_last_dimension/strided_slice/stack"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/split_heads/split_last_dimension/strided_slice/stack_1"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/split_heads/split_last_dimension/strided_slice/stack_2"
      attr {
        key: "Index"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "shrink_axis_mask"
        value {
          i: 1
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/split_heads/split_last_dimension/strided_slice_1/stack"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_t"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/split_heads/split_last_dimension/strided_slice_1/stack_1"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_t"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 2
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/split_heads/split_last_dimension/strided_slice_1/stack_2"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_t"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/split_heads/split_last_dimension/strided_slice_1"
      op: "StridedSlice"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/split_heads/split_last_dimension/Shape"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/split_heads/split_last_dimension/strided_slice_1/stack"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/split_heads/split_last_dimension/strided_slice_1/stack_1"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/split_heads/split_last_dimension/strided_slice_1/stack_2"
      attr {
        key: "Index"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "shrink_axis_mask"
        value {
          i: 1
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/split_heads/split_last_dimension/Reshape/shape/2"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_t"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 4
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/split_heads/split_last_dimension/Reshape/shape/3"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_t"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 32
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/split_heads/split_last_dimension/Reshape/shape"
      op: "Pack"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/split_heads/split_last_dimension/strided_slice"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/split_heads/split_last_dimension/strided_slice_1"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/split_heads/split_last_dimension/Reshape/shape/2"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/split_heads/split_last_dimension/Reshape/shape/3"
      attr {
        key: "N"
        value {
          i: 4
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 4
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/split_heads/split_last_dimension/Reshape"
      op: "Reshape"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/q/Tensordot"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/split_heads/split_last_dimension/Reshape/shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: -1
              }
              dim {
                size: 4
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/split_heads/transpose/perm"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_t"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 4
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 4
              }
            }
            tensor_content: "\000\000\000\000\002\000\000\000\001\000\000\000\003\000\000\000"
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/split_heads/transpose"
      op: "Transpose"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/split_heads/split_last_dimension/Reshape"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/split_heads/transpose/perm"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 4
              }
              dim {
                size: -1
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/split_heads_1/split_last_dimension/Shape"
      op: "Shape"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/k/Tensordot"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/split_heads_1/split_last_dimension/strided_slice/stack"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_t"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/split_heads_1/split_last_dimension/strided_slice/stack_1"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_t"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/split_heads_1/split_last_dimension/strided_slice/stack_2"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_t"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/split_heads_1/split_last_dimension/strided_slice"
      op: "StridedSlice"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/split_heads_1/split_last_dimension/Shape"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/split_heads_1/split_last_dimension/strided_slice/stack"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/split_heads_1/split_last_dimension/strided_slice/stack_1"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/split_heads_1/split_last_dimension/strided_slice/stack_2"
      attr {
        key: "Index"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "shrink_axis_mask"
        value {
          i: 1
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/split_heads_1/split_last_dimension/strided_slice_1/stack"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_t"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/split_heads_1/split_last_dimension/strided_slice_1/stack_1"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_t"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 2
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/split_heads_1/split_last_dimension/strided_slice_1/stack_2"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_t"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/split_heads_1/split_last_dimension/strided_slice_1"
      op: "StridedSlice"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/split_heads_1/split_last_dimension/Shape"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/split_heads_1/split_last_dimension/strided_slice_1/stack"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/split_heads_1/split_last_dimension/strided_slice_1/stack_1"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/split_heads_1/split_last_dimension/strided_slice_1/stack_2"
      attr {
        key: "Index"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "shrink_axis_mask"
        value {
          i: 1
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/split_heads_1/split_last_dimension/Reshape/shape/2"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_t"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 4
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/split_heads_1/split_last_dimension/Reshape/shape/3"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_t"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 32
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/split_heads_1/split_last_dimension/Reshape/shape"
      op: "Pack"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/split_heads_1/split_last_dimension/strided_slice"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/split_heads_1/split_last_dimension/strided_slice_1"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/split_heads_1/split_last_dimension/Reshape/shape/2"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/split_heads_1/split_last_dimension/Reshape/shape/3"
      attr {
        key: "N"
        value {
          i: 4
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 4
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/split_heads_1/split_last_dimension/Reshape"
      op: "Reshape"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/k/Tensordot"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/split_heads_1/split_last_dimension/Reshape/shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: -1
              }
              dim {
                size: 4
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/split_heads_1/transpose/perm"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_t"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 4
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 4
              }
            }
            tensor_content: "\000\000\000\000\002\000\000\000\001\000\000\000\003\000\000\000"
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/split_heads_1/transpose"
      op: "Transpose"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/split_heads_1/split_last_dimension/Reshape"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/split_heads_1/transpose/perm"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 4
              }
              dim {
                size: -1
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/split_heads_2/split_last_dimension/Shape"
      op: "Shape"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/v/Tensordot"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/split_heads_2/split_last_dimension/strided_slice/stack"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_t"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/split_heads_2/split_last_dimension/strided_slice/stack_1"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_t"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/split_heads_2/split_last_dimension/strided_slice/stack_2"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_t"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/split_heads_2/split_last_dimension/strided_slice"
      op: "StridedSlice"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/split_heads_2/split_last_dimension/Shape"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/split_heads_2/split_last_dimension/strided_slice/stack"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/split_heads_2/split_last_dimension/strided_slice/stack_1"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/split_heads_2/split_last_dimension/strided_slice/stack_2"
      attr {
        key: "Index"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "shrink_axis_mask"
        value {
          i: 1
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/split_heads_2/split_last_dimension/strided_slice_1/stack"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_t"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/split_heads_2/split_last_dimension/strided_slice_1/stack_1"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_t"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 2
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/split_heads_2/split_last_dimension/strided_slice_1/stack_2"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_t"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/split_heads_2/split_last_dimension/strided_slice_1"
      op: "StridedSlice"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/split_heads_2/split_last_dimension/Shape"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/split_heads_2/split_last_dimension/strided_slice_1/stack"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/split_heads_2/split_last_dimension/strided_slice_1/stack_1"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/split_heads_2/split_last_dimension/strided_slice_1/stack_2"
      attr {
        key: "Index"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "shrink_axis_mask"
        value {
          i: 1
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/split_heads_2/split_last_dimension/Reshape/shape/2"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_t"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 4
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/split_heads_2/split_last_dimension/Reshape/shape/3"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_t"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 32
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/split_heads_2/split_last_dimension/Reshape/shape"
      op: "Pack"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/split_heads_2/split_last_dimension/strided_slice"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/split_heads_2/split_last_dimension/strided_slice_1"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/split_heads_2/split_last_dimension/Reshape/shape/2"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/split_heads_2/split_last_dimension/Reshape/shape/3"
      attr {
        key: "N"
        value {
          i: 4
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 4
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/split_heads_2/split_last_dimension/Reshape"
      op: "Reshape"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/v/Tensordot"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/split_heads_2/split_last_dimension/Reshape/shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: -1
              }
              dim {
                size: 4
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/split_heads_2/transpose/perm"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_t"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 4
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 4
              }
            }
            tensor_content: "\000\000\000\000\002\000\000\000\001\000\000\000\003\000\000\000"
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/split_heads_2/transpose"
      op: "Transpose"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/split_heads_2/split_last_dimension/Reshape"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/split_heads_2/transpose/perm"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 4
              }
              dim {
                size: -1
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/mul/y"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_t"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.1767766922712326
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/mul"
      op: "Mul"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/split_heads/transpose"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/mul/y"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 4
              }
              dim {
                size: -1
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/dot_product_attention/MatMul"
      op: "BatchMatMul"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/mul"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/split_heads_1/transpose"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 4
              }
              dim {
                size: -1
              }
              dim {
                size: -1
              }
            }
          }
        }
      }
      attr {
        key: "adj_y"
        value {
          b: true
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/dot_product_attention/add"
      op: "Add"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/dot_product_attention/MatMul"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/attention_bias_ignore_padding/ExpandDims_1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 4
              }
              dim {
                size: -1
              }
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/dot_product_attention/attention_weights"
      op: "Softmax"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/dot_product_attention/add"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 4
              }
              dim {
                size: -1
              }
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/dot_product_attention/Shape"
      op: "Shape"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/dot_product_attention/attention_weights"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 4
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/dot_product_attention/strided_slice/stack"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_t"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/dot_product_attention/strided_slice/stack_1"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_t"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/dot_product_attention/strided_slice/stack_2"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_t"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/dot_product_attention/strided_slice"
      op: "StridedSlice"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/dot_product_attention/Shape"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/dot_product_attention/strided_slice/stack"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/dot_product_attention/strided_slice/stack_1"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/dot_product_attention/strided_slice/stack_2"
      attr {
        key: "Index"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "shrink_axis_mask"
        value {
          i: 1
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/dot_product_attention/strided_slice_1/stack"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_t"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 2
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/dot_product_attention/strided_slice_1/stack_1"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_t"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 3
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/dot_product_attention/strided_slice_1/stack_2"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_t"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/dot_product_attention/strided_slice_1"
      op: "StridedSlice"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/dot_product_attention/Shape"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/dot_product_attention/strided_slice_1/stack"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/dot_product_attention/strided_slice_1/stack_1"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/dot_product_attention/strided_slice_1/stack_2"
      attr {
        key: "Index"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "shrink_axis_mask"
        value {
          i: 1
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/dot_product_attention/strided_slice_2/stack"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_t"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 3
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/dot_product_attention/strided_slice_2/stack_1"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_t"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 4
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/dot_product_attention/strided_slice_2/stack_2"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_t"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/dot_product_attention/strided_slice_2"
      op: "StridedSlice"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/dot_product_attention/Shape"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/dot_product_attention/strided_slice_2/stack"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/dot_product_attention/strided_slice_2/stack_1"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/dot_product_attention/strided_slice_2/stack_2"
      attr {
        key: "Index"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "shrink_axis_mask"
        value {
          i: 1
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/dot_product_attention/transpose/perm"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_t"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 4
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 4
              }
            }
            tensor_content: "\000\000\000\000\002\000\000\000\003\000\000\000\001\000\000\000"
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/dot_product_attention/transpose"
      op: "Transpose"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/dot_product_attention/attention_weights"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/dot_product_attention/transpose/perm"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: -1
              }
              dim {
                size: -1
              }
              dim {
                size: 4
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/dot_product_attention/Pow/y"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_t"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.20000000298023224
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/dot_product_attention/Pow"
      op: "Pow"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/dot_product_attention/transpose"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/dot_product_attention/Pow/y"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: -1
              }
              dim {
                size: -1
              }
              dim {
                size: 4
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/dot_product_attention/FloorMod/x"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_t"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: -4
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/dot_product_attention/FloorMod/y"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_t"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 3
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/dot_product_attention/FloorMod"
      op: "FloorMod"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/dot_product_attention/FloorMod/x"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/dot_product_attention/FloorMod/y"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/dot_product_attention/Pad/paddings/3/0"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_t"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/dot_product_attention/Pad/paddings/3"
      op: "Pack"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/dot_product_attention/Pad/paddings/3/0"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/dot_product_attention/FloorMod"
      attr {
        key: "N"
        value {
          i: 2
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/dot_product_attention/Pad/paddings/0_1"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_t"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 2
              }
            }
            tensor_content: "\000\000\000\000\000\000\000\000"
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/dot_product_attention/Pad/paddings/1_1"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_t"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 2
              }
            }
            tensor_content: "\000\000\000\000\000\000\000\000"
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/dot_product_attention/Pad/paddings/2_1"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_t"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 2
              }
            }
            tensor_content: "\000\000\000\000\000\000\000\000"
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/dot_product_attention/Pad/paddings"
      op: "Pack"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/dot_product_attention/Pad/paddings/0_1"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/dot_product_attention/Pad/paddings/1_1"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/dot_product_attention/Pad/paddings/2_1"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/dot_product_attention/Pad/paddings/3"
      attr {
        key: "N"
        value {
          i: 4
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 4
              }
              dim {
                size: 2
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/dot_product_attention/Pad"
      op: "Pad"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/dot_product_attention/Pow"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/dot_product_attention/Pad/paddings"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: -1
              }
              dim {
                size: -1
              }
              dim {
                size: 6
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/dot_product_attention/split_last_dimension/Shape"
      op: "Shape"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/dot_product_attention/Pad"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 4
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/dot_product_attention/split_last_dimension/strided_slice/stack"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_t"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/dot_product_attention/split_last_dimension/strided_slice/stack_1"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_t"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/dot_product_attention/split_last_dimension/strided_slice/stack_2"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_t"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/dot_product_attention/split_last_dimension/strided_slice"
      op: "StridedSlice"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/dot_product_attention/split_last_dimension/Shape"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/dot_product_attention/split_last_dimension/strided_slice/stack"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/dot_product_attention/split_last_dimension/strided_slice/stack_1"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/dot_product_attention/split_last_dimension/strided_slice/stack_2"
      attr {
        key: "Index"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "shrink_axis_mask"
        value {
          i: 1
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/dot_product_attention/split_last_dimension/strided_slice_1/stack"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_t"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/dot_product_attention/split_last_dimension/strided_slice_1/stack_1"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_t"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 2
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/dot_product_attention/split_last_dimension/strided_slice_1/stack_2"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_t"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/dot_product_attention/split_last_dimension/strided_slice_1"
      op: "StridedSlice"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/dot_product_attention/split_last_dimension/Shape"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/dot_product_attention/split_last_dimension/strided_slice_1/stack"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/dot_product_attention/split_last_dimension/strided_slice_1/stack_1"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/dot_product_attention/split_last_dimension/strided_slice_1/stack_2"
      attr {
        key: "Index"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "shrink_axis_mask"
        value {
          i: 1
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/dot_product_attention/split_last_dimension/strided_slice_2/stack"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_t"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 2
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/dot_product_attention/split_last_dimension/strided_slice_2/stack_1"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_t"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 3
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/dot_product_attention/split_last_dimension/strided_slice_2/stack_2"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_t"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/dot_product_attention/split_last_dimension/strided_slice_2"
      op: "StridedSlice"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/dot_product_attention/split_last_dimension/Shape"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/dot_product_attention/split_last_dimension/strided_slice_2/stack"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/dot_product_attention/split_last_dimension/strided_slice_2/stack_1"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/dot_product_attention/split_last_dimension/strided_slice_2/stack_2"
      attr {
        key: "Index"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "shrink_axis_mask"
        value {
          i: 1
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/dot_product_attention/split_last_dimension/Reshape/shape/3"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_t"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 3
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/dot_product_attention/split_last_dimension/Reshape/shape/4"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_t"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 2
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/dot_product_attention/split_last_dimension/Reshape/shape"
      op: "Pack"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/dot_product_attention/split_last_dimension/strided_slice"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/dot_product_attention/split_last_dimension/strided_slice_1"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/dot_product_attention/split_last_dimension/strided_slice_2"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/dot_product_attention/split_last_dimension/Reshape/shape/3"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/dot_product_attention/split_last_dimension/Reshape/shape/4"
      attr {
        key: "N"
        value {
          i: 5
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 5
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/dot_product_attention/split_last_dimension/Reshape"
      op: "Reshape"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/dot_product_attention/Pad"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/dot_product_attention/split_last_dimension/Reshape/shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: -1
              }
              dim {
                size: -1
              }
              dim {
                size: 3
              }
              dim {
                size: 2
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/dot_product_attention/Max/reduction_indices"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_t"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 4
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/dot_product_attention/Max"
      op: "Max"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/dot_product_attention/split_last_dimension/Reshape"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/dot_product_attention/Max/reduction_indices"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: -1
              }
              dim {
                size: -1
              }
              dim {
                size: 3
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/dot_product_attention/attention/tag"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_t"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
            }
            string_val: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/dot_product_attention/attention"
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/dot_product_attention/attention"
      op: "ImageSummary"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/dot_product_attention/attention/tag"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/dot_product_attention/Max"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "max_images"
        value {
          i: 1
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/dot_product_attention/MatMul_1"
      op: "BatchMatMul"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/dot_product_attention/attention_weights"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/split_heads_2/transpose"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 4
              }
              dim {
                size: -1
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/combine_heads/transpose/perm"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_t"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 4
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 4
              }
            }
            tensor_content: "\000\000\000\000\002\000\000\000\001\000\000\000\003\000\000\000"
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/combine_heads/transpose"
      op: "Transpose"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/dot_product_attention/MatMul_1"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/combine_heads/transpose/perm"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: -1
              }
              dim {
                size: 4
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/combine_heads/combine_last_two_dimensions/Shape"
      op: "Shape"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/combine_heads/transpose"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 4
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/combine_heads/combine_last_two_dimensions/strided_slice/stack"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_t"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/combine_heads/combine_last_two_dimensions/strided_slice/stack_1"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_t"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/combine_heads/combine_last_two_dimensions/strided_slice/stack_2"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_t"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/combine_heads/combine_last_two_dimensions/strided_slice"
      op: "StridedSlice"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/combine_heads/combine_last_two_dimensions/Shape"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/combine_heads/combine_last_two_dimensions/strided_slice/stack"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/combine_heads/combine_last_two_dimensions/strided_slice/stack_1"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/combine_heads/combine_last_two_dimensions/strided_slice/stack_2"
      attr {
        key: "Index"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "shrink_axis_mask"
        value {
          i: 1
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/combine_heads/combine_last_two_dimensions/strided_slice_1/stack"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_t"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/combine_heads/combine_last_two_dimensions/strided_slice_1/stack_1"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_t"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 2
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/combine_heads/combine_last_two_dimensions/strided_slice_1/stack_2"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_t"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/combine_heads/combine_last_two_dimensions/strided_slice_1"
      op: "StridedSlice"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/combine_heads/combine_last_two_dimensions/Shape"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/combine_heads/combine_last_two_dimensions/strided_slice_1/stack"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/combine_heads/combine_last_two_dimensions/strided_slice_1/stack_1"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/combine_heads/combine_last_two_dimensions/strided_slice_1/stack_2"
      attr {
        key: "Index"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "shrink_axis_mask"
        value {
          i: 1
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/combine_heads/combine_last_two_dimensions/Reshape/shape/2"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_t"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 128
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/combine_heads/combine_last_two_dimensions/Reshape/shape"
      op: "Pack"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/combine_heads/combine_last_two_dimensions/strided_slice"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/combine_heads/combine_last_two_dimensions/strided_slice_1"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/combine_heads/combine_last_two_dimensions/Reshape/shape/2"
      attr {
        key: "N"
        value {
          i: 3
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/combine_heads/combine_last_two_dimensions/Reshape"
      op: "Reshape"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/combine_heads/transpose"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/combine_heads/combine_last_two_dimensions/Reshape/shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: -1
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/body/code_embedding/encoder/layer_0/self_attention/multihead_attention/output_transform/kernel/Initializer/random_uniform/shape"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@cs_similarity_transformer/body/code_embedding/encoder/layer_0/self_attention/multihead_attention/output_transform/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 2
              }
            }
            tensor_content: "\200\000\000\000\200\000\000\000"
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/body/code_embedding/encoder/layer_0/self_attention/multihead_attention/output_transform/kernel/Initializer/random_uniform/min"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@cs_similarity_transformer/body/code_embedding/encoder/layer_0/self_attention/multihead_attention/output_transform/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: -0.1530931144952774
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/body/code_embedding/encoder/layer_0/self_attention/multihead_attention/output_transform/kernel/Initializer/random_uniform/max"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@cs_similarity_transformer/body/code_embedding/encoder/layer_0/self_attention/multihead_attention/output_transform/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.1530931144952774
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/body/code_embedding/encoder/layer_0/self_attention/multihead_attention/output_transform/kernel/Initializer/random_uniform/RandomUniform"
      op: "RandomUniform"
      input: "cs_similarity_transformer/body/code_embedding/encoder/layer_0/self_attention/multihead_attention/output_transform/kernel/Initializer/random_uniform/shape"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@cs_similarity_transformer/body/code_embedding/encoder/layer_0/self_attention/multihead_attention/output_transform/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "cs_similarity_transformer/body/code_embedding/encoder/layer_0/self_attention/multihead_attention/output_transform/kernel/Initializer/random_uniform/sub"
      op: "Sub"
      input: "cs_similarity_transformer/body/code_embedding/encoder/layer_0/self_attention/multihead_attention/output_transform/kernel/Initializer/random_uniform/max"
      input: "cs_similarity_transformer/body/code_embedding/encoder/layer_0/self_attention/multihead_attention/output_transform/kernel/Initializer/random_uniform/min"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@cs_similarity_transformer/body/code_embedding/encoder/layer_0/self_attention/multihead_attention/output_transform/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/body/code_embedding/encoder/layer_0/self_attention/multihead_attention/output_transform/kernel/Initializer/random_uniform/mul"
      op: "Mul"
      input: "cs_similarity_transformer/body/code_embedding/encoder/layer_0/self_attention/multihead_attention/output_transform/kernel/Initializer/random_uniform/RandomUniform"
      input: "cs_similarity_transformer/body/code_embedding/encoder/layer_0/self_attention/multihead_attention/output_transform/kernel/Initializer/random_uniform/sub"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@cs_similarity_transformer/body/code_embedding/encoder/layer_0/self_attention/multihead_attention/output_transform/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/body/code_embedding/encoder/layer_0/self_attention/multihead_attention/output_transform/kernel/Initializer/random_uniform"
      op: "Add"
      input: "cs_similarity_transformer/body/code_embedding/encoder/layer_0/self_attention/multihead_attention/output_transform/kernel/Initializer/random_uniform/mul"
      input: "cs_similarity_transformer/body/code_embedding/encoder/layer_0/self_attention/multihead_attention/output_transform/kernel/Initializer/random_uniform/min"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@cs_similarity_transformer/body/code_embedding/encoder/layer_0/self_attention/multihead_attention/output_transform/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/body/code_embedding/encoder/layer_0/self_attention/multihead_attention/output_transform/kernel"
      op: "VarHandleOp"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@cs_similarity_transformer/body/code_embedding/encoder/layer_0/self_attention/multihead_attention/output_transform/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 128
            }
            dim {
              size: 128
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: "cs_similarity_transformer/body/code_embedding/encoder/layer_0/self_attention/multihead_attention/output_transform/kernel"
        }
      }
    }
    node {
      name: "cs_similarity_transformer/body/code_embedding/encoder/layer_0/self_attention/multihead_attention/output_transform/kernel/IsInitialized/VarIsInitializedOp"
      op: "VarIsInitializedOp"
      input: "cs_similarity_transformer/body/code_embedding/encoder/layer_0/self_attention/multihead_attention/output_transform/kernel"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/body/code_embedding/encoder/layer_0/self_attention/multihead_attention/output_transform/kernel/Assign"
      op: "AssignVariableOp"
      input: "cs_similarity_transformer/body/code_embedding/encoder/layer_0/self_attention/multihead_attention/output_transform/kernel"
      input: "cs_similarity_transformer/body/code_embedding/encoder/layer_0/self_attention/multihead_attention/output_transform/kernel/Initializer/random_uniform"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@cs_similarity_transformer/body/code_embedding/encoder/layer_0/self_attention/multihead_attention/output_transform/kernel"
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "cs_similarity_transformer/body/code_embedding/encoder/layer_0/self_attention/multihead_attention/output_transform/kernel/Read/ReadVariableOp"
      op: "ReadVariableOp"
      input: "cs_similarity_transformer/body/code_embedding/encoder/layer_0/self_attention/multihead_attention/output_transform/kernel"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@cs_similarity_transformer/body/code_embedding/encoder/layer_0/self_attention/multihead_attention/output_transform/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "Read_22/ReadVariableOp"
      op: "ReadVariableOp"
      input: "Read_22/ReadVariableOp/Switch:1"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "Read_22/ReadVariableOp/Switch"
      op: "Switch"
      input: "cs_similarity_transformer/body/code_embedding/encoder/layer_0/self_attention/multihead_attention/output_transform/kernel"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/pred_id"
      attr {
        key: "T"
        value {
          type: DT_RESOURCE
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@cs_similarity_transformer/body/code_embedding/encoder/layer_0/self_attention/multihead_attention/output_transform/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
            shape {
            }
          }
        }
      }
    }
    node {
      name: "Identity_22"
      op: "Identity"
      input: "Read_22/ReadVariableOp"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/output_transform/Tensordot/Shape"
      op: "Shape"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/combine_heads/combine_last_two_dimensions/Reshape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/output_transform/Tensordot/Rank"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_t"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 3
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/output_transform/Tensordot/axes"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_t"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 2
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/output_transform/Tensordot/GreaterEqual/y"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_t"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/output_transform/Tensordot/GreaterEqual"
      op: "GreaterEqual"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/output_transform/Tensordot/axes"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/output_transform/Tensordot/GreaterEqual/y"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/output_transform/Tensordot/Cast"
      op: "Cast"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/output_transform/Tensordot/GreaterEqual"
      attr {
        key: "DstT"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "SrcT"
        value {
          type: DT_BOOL
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/output_transform/Tensordot/mul"
      op: "Mul"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/output_transform/Tensordot/Cast"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/output_transform/Tensordot/axes"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/output_transform/Tensordot/Less/y"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_t"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/output_transform/Tensordot/Less"
      op: "Less"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/output_transform/Tensordot/axes"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/output_transform/Tensordot/Less/y"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/output_transform/Tensordot/Cast_1"
      op: "Cast"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/output_transform/Tensordot/Less"
      attr {
        key: "DstT"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "SrcT"
        value {
          type: DT_BOOL
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/output_transform/Tensordot/add"
      op: "Add"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/output_transform/Tensordot/axes"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/output_transform/Tensordot/Rank"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/output_transform/Tensordot/mul_1"
      op: "Mul"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/output_transform/Tensordot/Cast_1"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/output_transform/Tensordot/add"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/output_transform/Tensordot/add_1"
      op: "Add"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/output_transform/Tensordot/mul"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/output_transform/Tensordot/mul_1"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/output_transform/Tensordot/range/start"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_t"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/output_transform/Tensordot/range/delta"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_t"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/output_transform/Tensordot/range"
      op: "Range"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/output_transform/Tensordot/range/start"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/output_transform/Tensordot/Rank"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/output_transform/Tensordot/range/delta"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/output_transform/Tensordot/ListDiff"
      op: "ListDiff"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/output_transform/Tensordot/range"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/output_transform/Tensordot/add_1"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/output_transform/Tensordot/GatherV2/axis"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_t"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/output_transform/Tensordot/GatherV2"
      op: "GatherV2"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/output_transform/Tensordot/Shape"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/output_transform/Tensordot/ListDiff"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/output_transform/Tensordot/GatherV2/axis"
      attr {
        key: "Taxis"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "Tindices"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "Tparams"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/output_transform/Tensordot/GatherV2_1/axis"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_t"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/output_transform/Tensordot/GatherV2_1"
      op: "GatherV2"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/output_transform/Tensordot/Shape"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/output_transform/Tensordot/add_1"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/output_transform/Tensordot/GatherV2_1/axis"
      attr {
        key: "Taxis"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "Tindices"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "Tparams"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/output_transform/Tensordot/Const"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_t"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/output_transform/Tensordot/Prod"
      op: "Prod"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/output_transform/Tensordot/GatherV2"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/output_transform/Tensordot/Const"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/output_transform/Tensordot/Const_1"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_t"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/output_transform/Tensordot/Prod_1"
      op: "Prod"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/output_transform/Tensordot/GatherV2_1"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/output_transform/Tensordot/Const_1"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/output_transform/Tensordot/concat/axis"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_t"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/output_transform/Tensordot/concat"
      op: "ConcatV2"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/output_transform/Tensordot/GatherV2_1"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/output_transform/Tensordot/GatherV2"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/output_transform/Tensordot/concat/axis"
      attr {
        key: "N"
        value {
          i: 2
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/output_transform/Tensordot/concat_1/axis"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_t"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/output_transform/Tensordot/concat_1"
      op: "ConcatV2"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/output_transform/Tensordot/ListDiff"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/output_transform/Tensordot/add_1"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/output_transform/Tensordot/concat_1/axis"
      attr {
        key: "N"
        value {
          i: 2
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/output_transform/Tensordot/stack"
      op: "Pack"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/output_transform/Tensordot/Prod"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/output_transform/Tensordot/Prod_1"
      attr {
        key: "N"
        value {
          i: 2
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/output_transform/Tensordot/transpose"
      op: "Transpose"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/combine_heads/combine_last_two_dimensions/Reshape"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/output_transform/Tensordot/concat_1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: -1
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/output_transform/Tensordot/Reshape"
      op: "Reshape"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/output_transform/Tensordot/transpose"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/output_transform/Tensordot/stack"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/output_transform/Tensordot/transpose_1/perm"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_t"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 2
              }
            }
            tensor_content: "\000\000\000\000\001\000\000\000"
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/output_transform/Tensordot/transpose_1"
      op: "Transpose"
      input: "Identity_22"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/output_transform/Tensordot/transpose_1/perm"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/output_transform/Tensordot/Reshape_1/shape"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_t"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 2
              }
            }
            tensor_content: "\200\000\000\000\200\000\000\000"
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/output_transform/Tensordot/Reshape_1"
      op: "Reshape"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/output_transform/Tensordot/transpose_1"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/output_transform/Tensordot/Reshape_1/shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/output_transform/Tensordot/MatMul"
      op: "MatMul"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/output_transform/Tensordot/Reshape"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/output_transform/Tensordot/Reshape_1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/output_transform/Tensordot/Const_2"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_t"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 128
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/output_transform/Tensordot/concat_2/axis"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_t"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/output_transform/Tensordot/concat_2"
      op: "ConcatV2"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/output_transform/Tensordot/GatherV2"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/output_transform/Tensordot/Const_2"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/output_transform/Tensordot/concat_2/axis"
      attr {
        key: "N"
        value {
          i: 2
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/output_transform/Tensordot"
      op: "Reshape"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/output_transform/Tensordot/MatMul"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/output_transform/Tensordot/concat_2"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: -1
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/layer_postprocess/add"
      op: "Add"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/output_transform/Tensordot"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/add_timing_signal_1d/add"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: -1
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/ffn/layer_prepostprocess/Shape"
      op: "Shape"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/layer_postprocess/add"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/ffn/layer_prepostprocess/strided_slice/stack"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_t"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/ffn/layer_prepostprocess/strided_slice/stack_1"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_t"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/ffn/layer_prepostprocess/strided_slice/stack_2"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_t"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/ffn/layer_prepostprocess/strided_slice"
      op: "StridedSlice"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/ffn/layer_prepostprocess/Shape"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/ffn/layer_prepostprocess/strided_slice/stack"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/ffn/layer_prepostprocess/strided_slice/stack_1"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/ffn/layer_prepostprocess/strided_slice/stack_2"
      attr {
        key: "Index"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "shrink_axis_mask"
        value {
          i: 1
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/ffn/layer_prepostprocess/strided_slice_1/stack"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_t"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/ffn/layer_prepostprocess/strided_slice_1/stack_1"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_t"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 2
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/ffn/layer_prepostprocess/strided_slice_1/stack_2"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_t"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/ffn/layer_prepostprocess/strided_slice_1"
      op: "StridedSlice"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/ffn/layer_prepostprocess/Shape"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/ffn/layer_prepostprocess/strided_slice_1/stack"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/ffn/layer_prepostprocess/strided_slice_1/stack_1"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/ffn/layer_prepostprocess/strided_slice_1/stack_2"
      attr {
        key: "Index"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "shrink_axis_mask"
        value {
          i: 1
        }
      }
    }
    node {
      name: "cs_similarity_transformer/body/code_embedding/encoder/layer_0/ffn/layer_prepostprocess/layer_norm/layer_norm_scale/Initializer/ones"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@cs_similarity_transformer/body/code_embedding/encoder/layer_0/ffn/layer_prepostprocess/layer_norm/layer_norm_scale"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
              dim {
                size: 128
              }
            }
            float_val: 1.0
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/body/code_embedding/encoder/layer_0/ffn/layer_prepostprocess/layer_norm/layer_norm_scale"
      op: "VarHandleOp"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@cs_similarity_transformer/body/code_embedding/encoder/layer_0/ffn/layer_prepostprocess/layer_norm/layer_norm_scale"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 128
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: "cs_similarity_transformer/body/code_embedding/encoder/layer_0/ffn/layer_prepostprocess/layer_norm/layer_norm_scale"
        }
      }
    }
    node {
      name: "cs_similarity_transformer/body/code_embedding/encoder/layer_0/ffn/layer_prepostprocess/layer_norm/layer_norm_scale/IsInitialized/VarIsInitializedOp"
      op: "VarIsInitializedOp"
      input: "cs_similarity_transformer/body/code_embedding/encoder/layer_0/ffn/layer_prepostprocess/layer_norm/layer_norm_scale"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/body/code_embedding/encoder/layer_0/ffn/layer_prepostprocess/layer_norm/layer_norm_scale/Assign"
      op: "AssignVariableOp"
      input: "cs_similarity_transformer/body/code_embedding/encoder/layer_0/ffn/layer_prepostprocess/layer_norm/layer_norm_scale"
      input: "cs_similarity_transformer/body/code_embedding/encoder/layer_0/ffn/layer_prepostprocess/layer_norm/layer_norm_scale/Initializer/ones"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@cs_similarity_transformer/body/code_embedding/encoder/layer_0/ffn/layer_prepostprocess/layer_norm/layer_norm_scale"
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "cs_similarity_transformer/body/code_embedding/encoder/layer_0/ffn/layer_prepostprocess/layer_norm/layer_norm_scale/Read/ReadVariableOp"
      op: "ReadVariableOp"
      input: "cs_similarity_transformer/body/code_embedding/encoder/layer_0/ffn/layer_prepostprocess/layer_norm/layer_norm_scale"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@cs_similarity_transformer/body/code_embedding/encoder/layer_0/ffn/layer_prepostprocess/layer_norm/layer_norm_scale"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "Read_23/ReadVariableOp"
      op: "ReadVariableOp"
      input: "Read_23/ReadVariableOp/Switch:1"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "Read_23/ReadVariableOp/Switch"
      op: "Switch"
      input: "cs_similarity_transformer/body/code_embedding/encoder/layer_0/ffn/layer_prepostprocess/layer_norm/layer_norm_scale"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/pred_id"
      attr {
        key: "T"
        value {
          type: DT_RESOURCE
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@cs_similarity_transformer/body/code_embedding/encoder/layer_0/ffn/layer_prepostprocess/layer_norm/layer_norm_scale"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
            shape {
            }
          }
        }
      }
    }
    node {
      name: "Identity_23"
      op: "Identity"
      input: "Read_23/ReadVariableOp"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/body/code_embedding/encoder/layer_0/ffn/layer_prepostprocess/layer_norm/layer_norm_bias/Initializer/zeros"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@cs_similarity_transformer/body/code_embedding/encoder/layer_0/ffn/layer_prepostprocess/layer_norm/layer_norm_bias"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
              dim {
                size: 128
              }
            }
            float_val: 0.0
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/body/code_embedding/encoder/layer_0/ffn/layer_prepostprocess/layer_norm/layer_norm_bias"
      op: "VarHandleOp"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@cs_similarity_transformer/body/code_embedding/encoder/layer_0/ffn/layer_prepostprocess/layer_norm/layer_norm_bias"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 128
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: "cs_similarity_transformer/body/code_embedding/encoder/layer_0/ffn/layer_prepostprocess/layer_norm/layer_norm_bias"
        }
      }
    }
    node {
      name: "cs_similarity_transformer/body/code_embedding/encoder/layer_0/ffn/layer_prepostprocess/layer_norm/layer_norm_bias/IsInitialized/VarIsInitializedOp"
      op: "VarIsInitializedOp"
      input: "cs_similarity_transformer/body/code_embedding/encoder/layer_0/ffn/layer_prepostprocess/layer_norm/layer_norm_bias"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/body/code_embedding/encoder/layer_0/ffn/layer_prepostprocess/layer_norm/layer_norm_bias/Assign"
      op: "AssignVariableOp"
      input: "cs_similarity_transformer/body/code_embedding/encoder/layer_0/ffn/layer_prepostprocess/layer_norm/layer_norm_bias"
      input: "cs_similarity_transformer/body/code_embedding/encoder/layer_0/ffn/layer_prepostprocess/layer_norm/layer_norm_bias/Initializer/zeros"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@cs_similarity_transformer/body/code_embedding/encoder/layer_0/ffn/layer_prepostprocess/layer_norm/layer_norm_bias"
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "cs_similarity_transformer/body/code_embedding/encoder/layer_0/ffn/layer_prepostprocess/layer_norm/layer_norm_bias/Read/ReadVariableOp"
      op: "ReadVariableOp"
      input: "cs_similarity_transformer/body/code_embedding/encoder/layer_0/ffn/layer_prepostprocess/layer_norm/layer_norm_bias"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@cs_similarity_transformer/body/code_embedding/encoder/layer_0/ffn/layer_prepostprocess/layer_norm/layer_norm_bias"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "Read_24/ReadVariableOp"
      op: "ReadVariableOp"
      input: "Read_24/ReadVariableOp/Switch:1"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "Read_24/ReadVariableOp/Switch"
      op: "Switch"
      input: "cs_similarity_transformer/body/code_embedding/encoder/layer_0/ffn/layer_prepostprocess/layer_norm/layer_norm_bias"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/pred_id"
      attr {
        key: "T"
        value {
          type: DT_RESOURCE
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@cs_similarity_transformer/body/code_embedding/encoder/layer_0/ffn/layer_prepostprocess/layer_norm/layer_norm_bias"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
            shape {
            }
          }
        }
      }
    }
    node {
      name: "Identity_24"
      op: "Identity"
      input: "Read_24/ReadVariableOp"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/ffn/layer_prepostprocess/layer_norm/Const"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_t"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 9.999999974752427e-07
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/ffn/layer_prepostprocess/layer_norm/Mean/reduction_indices"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_t"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: -1
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/ffn/layer_prepostprocess/layer_norm/Mean"
      op: "Mean"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/layer_postprocess/add"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/ffn/layer_prepostprocess/layer_norm/Mean/reduction_indices"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: true
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/ffn/layer_prepostprocess/layer_norm/sub"
      op: "Sub"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/layer_postprocess/add"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/ffn/layer_prepostprocess/layer_norm/Mean"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: -1
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/ffn/layer_prepostprocess/layer_norm/Square"
      op: "Square"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/ffn/layer_prepostprocess/layer_norm/sub"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: -1
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/ffn/layer_prepostprocess/layer_norm/Mean_1/reduction_indices"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_t"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: -1
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/ffn/layer_prepostprocess/layer_norm/Mean_1"
      op: "Mean"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/ffn/layer_prepostprocess/layer_norm/Square"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/ffn/layer_prepostprocess/layer_norm/Mean_1/reduction_indices"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: true
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/ffn/layer_prepostprocess/layer_norm/sub_1"
      op: "Sub"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/layer_postprocess/add"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/ffn/layer_prepostprocess/layer_norm/Mean"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: -1
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/ffn/layer_prepostprocess/layer_norm/add"
      op: "Add"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/ffn/layer_prepostprocess/layer_norm/Mean_1"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/ffn/layer_prepostprocess/layer_norm/Const"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/ffn/layer_prepostprocess/layer_norm/Rsqrt"
      op: "Rsqrt"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/ffn/layer_prepostprocess/layer_norm/add"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/ffn/layer_prepostprocess/layer_norm/mul"
      op: "Mul"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/ffn/layer_prepostprocess/layer_norm/sub_1"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/ffn/layer_prepostprocess/layer_norm/Rsqrt"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: -1
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/ffn/layer_prepostprocess/layer_norm/mul_1"
      op: "Mul"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/ffn/layer_prepostprocess/layer_norm/mul"
      input: "Identity_23"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: -1
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/ffn/layer_prepostprocess/layer_norm/add_1"
      op: "Add"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/ffn/layer_prepostprocess/layer_norm/mul_1"
      input: "Identity_24"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: -1
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/ffn/Shape"
      op: "Shape"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/ffn/layer_prepostprocess/layer_norm/add_1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/ffn/strided_slice/stack"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_t"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/ffn/strided_slice/stack_1"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_t"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/ffn/strided_slice/stack_2"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_t"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/ffn/strided_slice"
      op: "StridedSlice"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/ffn/Shape"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/ffn/strided_slice/stack"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/ffn/strided_slice/stack_1"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/ffn/strided_slice/stack_2"
      attr {
        key: "Index"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "shrink_axis_mask"
        value {
          i: 1
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/ffn/strided_slice_1/stack"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_t"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/ffn/strided_slice_1/stack_1"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_t"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 2
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/ffn/strided_slice_1/stack_2"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_t"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/ffn/strided_slice_1"
      op: "StridedSlice"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/ffn/Shape"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/ffn/strided_slice_1/stack"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/ffn/strided_slice_1/stack_1"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/ffn/strided_slice_1/stack_2"
      attr {
        key: "Index"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "shrink_axis_mask"
        value {
          i: 1
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/ffn/concat/values_0"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_t"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: -1
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/ffn/concat/values_1"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_t"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 128
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/ffn/concat/axis"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_t"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/ffn/concat"
      op: "ConcatV2"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/ffn/concat/values_0"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/ffn/concat/values_1"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/ffn/concat/axis"
      attr {
        key: "N"
        value {
          i: 2
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/ffn/Reshape"
      op: "Reshape"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/ffn/layer_prepostprocess/layer_norm/add_1"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/ffn/concat"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/ffn/pad_reduce/remove/GatherNd"
      op: "GatherNd"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/ffn/Reshape"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/pad_reduce/get_ids/ToInt32"
      attr {
        key: "Tindices"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "Tparams"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/ffn/ExpandDims/dim"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_t"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/ffn/ExpandDims"
      op: "ExpandDims"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/ffn/pad_reduce/remove/GatherNd"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/ffn/ExpandDims/dim"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
              dim {
                size: -1
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/body/code_embedding/encoder/layer_0/ffn/conv1/kernel/Initializer/random_uniform/shape"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@cs_similarity_transformer/body/code_embedding/encoder/layer_0/ffn/conv1/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 2
              }
            }
            tensor_content: "\200\000\000\000\000\002\000\000"
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/body/code_embedding/encoder/layer_0/ffn/conv1/kernel/Initializer/random_uniform/min"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@cs_similarity_transformer/body/code_embedding/encoder/layer_0/ffn/conv1/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: -0.09682458639144897
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/body/code_embedding/encoder/layer_0/ffn/conv1/kernel/Initializer/random_uniform/max"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@cs_similarity_transformer/body/code_embedding/encoder/layer_0/ffn/conv1/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.09682458639144897
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/body/code_embedding/encoder/layer_0/ffn/conv1/kernel/Initializer/random_uniform/RandomUniform"
      op: "RandomUniform"
      input: "cs_similarity_transformer/body/code_embedding/encoder/layer_0/ffn/conv1/kernel/Initializer/random_uniform/shape"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@cs_similarity_transformer/body/code_embedding/encoder/layer_0/ffn/conv1/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
              dim {
                size: 512
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "cs_similarity_transformer/body/code_embedding/encoder/layer_0/ffn/conv1/kernel/Initializer/random_uniform/sub"
      op: "Sub"
      input: "cs_similarity_transformer/body/code_embedding/encoder/layer_0/ffn/conv1/kernel/Initializer/random_uniform/max"
      input: "cs_similarity_transformer/body/code_embedding/encoder/layer_0/ffn/conv1/kernel/Initializer/random_uniform/min"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@cs_similarity_transformer/body/code_embedding/encoder/layer_0/ffn/conv1/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/body/code_embedding/encoder/layer_0/ffn/conv1/kernel/Initializer/random_uniform/mul"
      op: "Mul"
      input: "cs_similarity_transformer/body/code_embedding/encoder/layer_0/ffn/conv1/kernel/Initializer/random_uniform/RandomUniform"
      input: "cs_similarity_transformer/body/code_embedding/encoder/layer_0/ffn/conv1/kernel/Initializer/random_uniform/sub"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@cs_similarity_transformer/body/code_embedding/encoder/layer_0/ffn/conv1/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
              dim {
                size: 512
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/body/code_embedding/encoder/layer_0/ffn/conv1/kernel/Initializer/random_uniform"
      op: "Add"
      input: "cs_similarity_transformer/body/code_embedding/encoder/layer_0/ffn/conv1/kernel/Initializer/random_uniform/mul"
      input: "cs_similarity_transformer/body/code_embedding/encoder/layer_0/ffn/conv1/kernel/Initializer/random_uniform/min"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@cs_similarity_transformer/body/code_embedding/encoder/layer_0/ffn/conv1/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
              dim {
                size: 512
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/body/code_embedding/encoder/layer_0/ffn/conv1/kernel"
      op: "VarHandleOp"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@cs_similarity_transformer/body/code_embedding/encoder/layer_0/ffn/conv1/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 128
            }
            dim {
              size: 512
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: "cs_similarity_transformer/body/code_embedding/encoder/layer_0/ffn/conv1/kernel"
        }
      }
    }
    node {
      name: "cs_similarity_transformer/body/code_embedding/encoder/layer_0/ffn/conv1/kernel/IsInitialized/VarIsInitializedOp"
      op: "VarIsInitializedOp"
      input: "cs_similarity_transformer/body/code_embedding/encoder/layer_0/ffn/conv1/kernel"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/body/code_embedding/encoder/layer_0/ffn/conv1/kernel/Assign"
      op: "AssignVariableOp"
      input: "cs_similarity_transformer/body/code_embedding/encoder/layer_0/ffn/conv1/kernel"
      input: "cs_similarity_transformer/body/code_embedding/encoder/layer_0/ffn/conv1/kernel/Initializer/random_uniform"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@cs_similarity_transformer/body/code_embedding/encoder/layer_0/ffn/conv1/kernel"
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "cs_similarity_transformer/body/code_embedding/encoder/layer_0/ffn/conv1/kernel/Read/ReadVariableOp"
      op: "ReadVariableOp"
      input: "cs_similarity_transformer/body/code_embedding/encoder/layer_0/ffn/conv1/kernel"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@cs_similarity_transformer/body/code_embedding/encoder/layer_0/ffn/conv1/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
              dim {
                size: 512
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "Read_25/ReadVariableOp"
      op: "ReadVariableOp"
      input: "Read_25/ReadVariableOp/Switch:1"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
              dim {
                size: 512
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "Read_25/ReadVariableOp/Switch"
      op: "Switch"
      input: "cs_similarity_transformer/body/code_embedding/encoder/layer_0/ffn/conv1/kernel"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/pred_id"
      attr {
        key: "T"
        value {
          type: DT_RESOURCE
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@cs_similarity_transformer/body/code_embedding/encoder/layer_0/ffn/conv1/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
            shape {
            }
          }
        }
      }
    }
    node {
      name: "Identity_25"
      op: "Identity"
      input: "Read_25/ReadVariableOp"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
              dim {
                size: 512
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/body/code_embedding/encoder/layer_0/ffn/conv1/bias/Initializer/zeros"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@cs_similarity_transformer/body/code_embedding/encoder/layer_0/ffn/conv1/bias"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 512
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
              dim {
                size: 512
              }
            }
            float_val: 0.0
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/body/code_embedding/encoder/layer_0/ffn/conv1/bias"
      op: "VarHandleOp"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@cs_similarity_transformer/body/code_embedding/encoder/layer_0/ffn/conv1/bias"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 512
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: "cs_similarity_transformer/body/code_embedding/encoder/layer_0/ffn/conv1/bias"
        }
      }
    }
    node {
      name: "cs_similarity_transformer/body/code_embedding/encoder/layer_0/ffn/conv1/bias/IsInitialized/VarIsInitializedOp"
      op: "VarIsInitializedOp"
      input: "cs_similarity_transformer/body/code_embedding/encoder/layer_0/ffn/conv1/bias"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/body/code_embedding/encoder/layer_0/ffn/conv1/bias/Assign"
      op: "AssignVariableOp"
      input: "cs_similarity_transformer/body/code_embedding/encoder/layer_0/ffn/conv1/bias"
      input: "cs_similarity_transformer/body/code_embedding/encoder/layer_0/ffn/conv1/bias/Initializer/zeros"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@cs_similarity_transformer/body/code_embedding/encoder/layer_0/ffn/conv1/bias"
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "cs_similarity_transformer/body/code_embedding/encoder/layer_0/ffn/conv1/bias/Read/ReadVariableOp"
      op: "ReadVariableOp"
      input: "cs_similarity_transformer/body/code_embedding/encoder/layer_0/ffn/conv1/bias"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@cs_similarity_transformer/body/code_embedding/encoder/layer_0/ffn/conv1/bias"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 512
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "Read_26/ReadVariableOp"
      op: "ReadVariableOp"
      input: "Read_26/ReadVariableOp/Switch:1"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 512
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "Read_26/ReadVariableOp/Switch"
      op: "Switch"
      input: "cs_similarity_transformer/body/code_embedding/encoder/layer_0/ffn/conv1/bias"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/pred_id"
      attr {
        key: "T"
        value {
          type: DT_RESOURCE
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@cs_similarity_transformer/body/code_embedding/encoder/layer_0/ffn/conv1/bias"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
            shape {
            }
          }
        }
      }
    }
    node {
      name: "Identity_26"
      op: "Identity"
      input: "Read_26/ReadVariableOp"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 512
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/ffn/conv1/Tensordot/Shape"
      op: "Shape"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/ffn/ExpandDims"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/ffn/conv1/Tensordot/Rank"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_t"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 3
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/ffn/conv1/Tensordot/axes"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_t"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 2
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/ffn/conv1/Tensordot/GreaterEqual/y"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_t"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/ffn/conv1/Tensordot/GreaterEqual"
      op: "GreaterEqual"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/ffn/conv1/Tensordot/axes"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/ffn/conv1/Tensordot/GreaterEqual/y"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/ffn/conv1/Tensordot/Cast"
      op: "Cast"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/ffn/conv1/Tensordot/GreaterEqual"
      attr {
        key: "DstT"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "SrcT"
        value {
          type: DT_BOOL
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/ffn/conv1/Tensordot/mul"
      op: "Mul"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/ffn/conv1/Tensordot/Cast"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/ffn/conv1/Tensordot/axes"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/ffn/conv1/Tensordot/Less/y"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_t"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/ffn/conv1/Tensordot/Less"
      op: "Less"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/ffn/conv1/Tensordot/axes"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/ffn/conv1/Tensordot/Less/y"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/ffn/conv1/Tensordot/Cast_1"
      op: "Cast"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/ffn/conv1/Tensordot/Less"
      attr {
        key: "DstT"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "SrcT"
        value {
          type: DT_BOOL
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/ffn/conv1/Tensordot/add"
      op: "Add"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/ffn/conv1/Tensordot/axes"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/ffn/conv1/Tensordot/Rank"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/ffn/conv1/Tensordot/mul_1"
      op: "Mul"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/ffn/conv1/Tensordot/Cast_1"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/ffn/conv1/Tensordot/add"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/ffn/conv1/Tensordot/add_1"
      op: "Add"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/ffn/conv1/Tensordot/mul"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/ffn/conv1/Tensordot/mul_1"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/ffn/conv1/Tensordot/range/start"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_t"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/ffn/conv1/Tensordot/range/delta"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_t"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/ffn/conv1/Tensordot/range"
      op: "Range"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/ffn/conv1/Tensordot/range/start"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/ffn/conv1/Tensordot/Rank"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/ffn/conv1/Tensordot/range/delta"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/ffn/conv1/Tensordot/ListDiff"
      op: "ListDiff"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/ffn/conv1/Tensordot/range"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/ffn/conv1/Tensordot/add_1"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/ffn/conv1/Tensordot/GatherV2/axis"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_t"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/ffn/conv1/Tensordot/GatherV2"
      op: "GatherV2"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/ffn/conv1/Tensordot/Shape"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/ffn/conv1/Tensordot/ListDiff"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/ffn/conv1/Tensordot/GatherV2/axis"
      attr {
        key: "Taxis"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "Tindices"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "Tparams"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/ffn/conv1/Tensordot/GatherV2_1/axis"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_t"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/ffn/conv1/Tensordot/GatherV2_1"
      op: "GatherV2"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/ffn/conv1/Tensordot/Shape"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/ffn/conv1/Tensordot/add_1"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/ffn/conv1/Tensordot/GatherV2_1/axis"
      attr {
        key: "Taxis"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "Tindices"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "Tparams"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/ffn/conv1/Tensordot/Const"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_t"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/ffn/conv1/Tensordot/Prod"
      op: "Prod"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/ffn/conv1/Tensordot/GatherV2"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/ffn/conv1/Tensordot/Const"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/ffn/conv1/Tensordot/Const_1"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_t"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/ffn/conv1/Tensordot/Prod_1"
      op: "Prod"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/ffn/conv1/Tensordot/GatherV2_1"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/ffn/conv1/Tensordot/Const_1"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/ffn/conv1/Tensordot/concat/axis"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_t"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/ffn/conv1/Tensordot/concat"
      op: "ConcatV2"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/ffn/conv1/Tensordot/GatherV2_1"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/ffn/conv1/Tensordot/GatherV2"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/ffn/conv1/Tensordot/concat/axis"
      attr {
        key: "N"
        value {
          i: 2
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/ffn/conv1/Tensordot/concat_1/axis"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_t"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/ffn/conv1/Tensordot/concat_1"
      op: "ConcatV2"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/ffn/conv1/Tensordot/ListDiff"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/ffn/conv1/Tensordot/add_1"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/ffn/conv1/Tensordot/concat_1/axis"
      attr {
        key: "N"
        value {
          i: 2
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/ffn/conv1/Tensordot/stack"
      op: "Pack"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/ffn/conv1/Tensordot/Prod"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/ffn/conv1/Tensordot/Prod_1"
      attr {
        key: "N"
        value {
          i: 2
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/ffn/conv1/Tensordot/transpose"
      op: "Transpose"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/ffn/ExpandDims"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/ffn/conv1/Tensordot/concat_1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
              dim {
                size: -1
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/ffn/conv1/Tensordot/Reshape"
      op: "Reshape"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/ffn/conv1/Tensordot/transpose"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/ffn/conv1/Tensordot/stack"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/ffn/conv1/Tensordot/transpose_1/perm"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_t"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 2
              }
            }
            tensor_content: "\000\000\000\000\001\000\000\000"
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/ffn/conv1/Tensordot/transpose_1"
      op: "Transpose"
      input: "Identity_25"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/ffn/conv1/Tensordot/transpose_1/perm"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
              dim {
                size: 512
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/ffn/conv1/Tensordot/Reshape_1/shape"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_t"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 2
              }
            }
            tensor_content: "\200\000\000\000\000\002\000\000"
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/ffn/conv1/Tensordot/Reshape_1"
      op: "Reshape"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/ffn/conv1/Tensordot/transpose_1"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/ffn/conv1/Tensordot/Reshape_1/shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
              dim {
                size: 512
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/ffn/conv1/Tensordot/MatMul"
      op: "MatMul"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/ffn/conv1/Tensordot/Reshape"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/ffn/conv1/Tensordot/Reshape_1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 512
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/ffn/conv1/Tensordot/Const_2"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_t"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 512
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/ffn/conv1/Tensordot/concat_2/axis"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_t"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/ffn/conv1/Tensordot/concat_2"
      op: "ConcatV2"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/ffn/conv1/Tensordot/GatherV2"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/ffn/conv1/Tensordot/Const_2"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/ffn/conv1/Tensordot/concat_2/axis"
      attr {
        key: "N"
        value {
          i: 2
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/ffn/conv1/Tensordot"
      op: "Reshape"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/ffn/conv1/Tensordot/MatMul"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/ffn/conv1/Tensordot/concat_2"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
              dim {
                size: -1
              }
              dim {
                size: 512
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/ffn/conv1/BiasAdd"
      op: "BiasAdd"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/ffn/conv1/Tensordot"
      input: "Identity_26"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
              dim {
                size: -1
              }
              dim {
                size: 512
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/ffn/conv1/Relu"
      op: "Relu"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/ffn/conv1/BiasAdd"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
              dim {
                size: -1
              }
              dim {
                size: 512
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/body/code_embedding/encoder/layer_0/ffn/conv2/kernel/Initializer/random_uniform/shape"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@cs_similarity_transformer/body/code_embedding/encoder/layer_0/ffn/conv2/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 2
              }
            }
            tensor_content: "\000\002\000\000\200\000\000\000"
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/body/code_embedding/encoder/layer_0/ffn/conv2/kernel/Initializer/random_uniform/min"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@cs_similarity_transformer/body/code_embedding/encoder/layer_0/ffn/conv2/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: -0.09682458639144897
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/body/code_embedding/encoder/layer_0/ffn/conv2/kernel/Initializer/random_uniform/max"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@cs_similarity_transformer/body/code_embedding/encoder/layer_0/ffn/conv2/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.09682458639144897
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/body/code_embedding/encoder/layer_0/ffn/conv2/kernel/Initializer/random_uniform/RandomUniform"
      op: "RandomUniform"
      input: "cs_similarity_transformer/body/code_embedding/encoder/layer_0/ffn/conv2/kernel/Initializer/random_uniform/shape"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@cs_similarity_transformer/body/code_embedding/encoder/layer_0/ffn/conv2/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 512
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "cs_similarity_transformer/body/code_embedding/encoder/layer_0/ffn/conv2/kernel/Initializer/random_uniform/sub"
      op: "Sub"
      input: "cs_similarity_transformer/body/code_embedding/encoder/layer_0/ffn/conv2/kernel/Initializer/random_uniform/max"
      input: "cs_similarity_transformer/body/code_embedding/encoder/layer_0/ffn/conv2/kernel/Initializer/random_uniform/min"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@cs_similarity_transformer/body/code_embedding/encoder/layer_0/ffn/conv2/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/body/code_embedding/encoder/layer_0/ffn/conv2/kernel/Initializer/random_uniform/mul"
      op: "Mul"
      input: "cs_similarity_transformer/body/code_embedding/encoder/layer_0/ffn/conv2/kernel/Initializer/random_uniform/RandomUniform"
      input: "cs_similarity_transformer/body/code_embedding/encoder/layer_0/ffn/conv2/kernel/Initializer/random_uniform/sub"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@cs_similarity_transformer/body/code_embedding/encoder/layer_0/ffn/conv2/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 512
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/body/code_embedding/encoder/layer_0/ffn/conv2/kernel/Initializer/random_uniform"
      op: "Add"
      input: "cs_similarity_transformer/body/code_embedding/encoder/layer_0/ffn/conv2/kernel/Initializer/random_uniform/mul"
      input: "cs_similarity_transformer/body/code_embedding/encoder/layer_0/ffn/conv2/kernel/Initializer/random_uniform/min"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@cs_similarity_transformer/body/code_embedding/encoder/layer_0/ffn/conv2/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 512
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/body/code_embedding/encoder/layer_0/ffn/conv2/kernel"
      op: "VarHandleOp"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@cs_similarity_transformer/body/code_embedding/encoder/layer_0/ffn/conv2/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 512
            }
            dim {
              size: 128
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: "cs_similarity_transformer/body/code_embedding/encoder/layer_0/ffn/conv2/kernel"
        }
      }
    }
    node {
      name: "cs_similarity_transformer/body/code_embedding/encoder/layer_0/ffn/conv2/kernel/IsInitialized/VarIsInitializedOp"
      op: "VarIsInitializedOp"
      input: "cs_similarity_transformer/body/code_embedding/encoder/layer_0/ffn/conv2/kernel"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/body/code_embedding/encoder/layer_0/ffn/conv2/kernel/Assign"
      op: "AssignVariableOp"
      input: "cs_similarity_transformer/body/code_embedding/encoder/layer_0/ffn/conv2/kernel"
      input: "cs_similarity_transformer/body/code_embedding/encoder/layer_0/ffn/conv2/kernel/Initializer/random_uniform"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@cs_similarity_transformer/body/code_embedding/encoder/layer_0/ffn/conv2/kernel"
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "cs_similarity_transformer/body/code_embedding/encoder/layer_0/ffn/conv2/kernel/Read/ReadVariableOp"
      op: "ReadVariableOp"
      input: "cs_similarity_transformer/body/code_embedding/encoder/layer_0/ffn/conv2/kernel"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@cs_similarity_transformer/body/code_embedding/encoder/layer_0/ffn/conv2/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 512
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "Read_27/ReadVariableOp"
      op: "ReadVariableOp"
      input: "Read_27/ReadVariableOp/Switch:1"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 512
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "Read_27/ReadVariableOp/Switch"
      op: "Switch"
      input: "cs_similarity_transformer/body/code_embedding/encoder/layer_0/ffn/conv2/kernel"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/pred_id"
      attr {
        key: "T"
        value {
          type: DT_RESOURCE
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@cs_similarity_transformer/body/code_embedding/encoder/layer_0/ffn/conv2/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
            shape {
            }
          }
        }
      }
    }
    node {
      name: "Identity_27"
      op: "Identity"
      input: "Read_27/ReadVariableOp"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 512
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/body/code_embedding/encoder/layer_0/ffn/conv2/bias/Initializer/zeros"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@cs_similarity_transformer/body/code_embedding/encoder/layer_0/ffn/conv2/bias"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
              dim {
                size: 128
              }
            }
            float_val: 0.0
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/body/code_embedding/encoder/layer_0/ffn/conv2/bias"
      op: "VarHandleOp"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@cs_similarity_transformer/body/code_embedding/encoder/layer_0/ffn/conv2/bias"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 128
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: "cs_similarity_transformer/body/code_embedding/encoder/layer_0/ffn/conv2/bias"
        }
      }
    }
    node {
      name: "cs_similarity_transformer/body/code_embedding/encoder/layer_0/ffn/conv2/bias/IsInitialized/VarIsInitializedOp"
      op: "VarIsInitializedOp"
      input: "cs_similarity_transformer/body/code_embedding/encoder/layer_0/ffn/conv2/bias"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/body/code_embedding/encoder/layer_0/ffn/conv2/bias/Assign"
      op: "AssignVariableOp"
      input: "cs_similarity_transformer/body/code_embedding/encoder/layer_0/ffn/conv2/bias"
      input: "cs_similarity_transformer/body/code_embedding/encoder/layer_0/ffn/conv2/bias/Initializer/zeros"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@cs_similarity_transformer/body/code_embedding/encoder/layer_0/ffn/conv2/bias"
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "cs_similarity_transformer/body/code_embedding/encoder/layer_0/ffn/conv2/bias/Read/ReadVariableOp"
      op: "ReadVariableOp"
      input: "cs_similarity_transformer/body/code_embedding/encoder/layer_0/ffn/conv2/bias"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@cs_similarity_transformer/body/code_embedding/encoder/layer_0/ffn/conv2/bias"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "Read_28/ReadVariableOp"
      op: "ReadVariableOp"
      input: "Read_28/ReadVariableOp/Switch:1"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "Read_28/ReadVariableOp/Switch"
      op: "Switch"
      input: "cs_similarity_transformer/body/code_embedding/encoder/layer_0/ffn/conv2/bias"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/pred_id"
      attr {
        key: "T"
        value {
          type: DT_RESOURCE
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@cs_similarity_transformer/body/code_embedding/encoder/layer_0/ffn/conv2/bias"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
            shape {
            }
          }
        }
      }
    }
    node {
      name: "Identity_28"
      op: "Identity"
      input: "Read_28/ReadVariableOp"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/ffn/conv2/Tensordot/Shape"
      op: "Shape"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/ffn/conv1/Relu"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/ffn/conv2/Tensordot/Rank"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_t"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 3
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/ffn/conv2/Tensordot/axes"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_t"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 2
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/ffn/conv2/Tensordot/GreaterEqual/y"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_t"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/ffn/conv2/Tensordot/GreaterEqual"
      op: "GreaterEqual"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/ffn/conv2/Tensordot/axes"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/ffn/conv2/Tensordot/GreaterEqual/y"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/ffn/conv2/Tensordot/Cast"
      op: "Cast"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/ffn/conv2/Tensordot/GreaterEqual"
      attr {
        key: "DstT"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "SrcT"
        value {
          type: DT_BOOL
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/ffn/conv2/Tensordot/mul"
      op: "Mul"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/ffn/conv2/Tensordot/Cast"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/ffn/conv2/Tensordot/axes"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/ffn/conv2/Tensordot/Less/y"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_t"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/ffn/conv2/Tensordot/Less"
      op: "Less"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/ffn/conv2/Tensordot/axes"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/ffn/conv2/Tensordot/Less/y"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/ffn/conv2/Tensordot/Cast_1"
      op: "Cast"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/ffn/conv2/Tensordot/Less"
      attr {
        key: "DstT"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "SrcT"
        value {
          type: DT_BOOL
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/ffn/conv2/Tensordot/add"
      op: "Add"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/ffn/conv2/Tensordot/axes"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/ffn/conv2/Tensordot/Rank"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/ffn/conv2/Tensordot/mul_1"
      op: "Mul"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/ffn/conv2/Tensordot/Cast_1"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/ffn/conv2/Tensordot/add"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/ffn/conv2/Tensordot/add_1"
      op: "Add"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/ffn/conv2/Tensordot/mul"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/ffn/conv2/Tensordot/mul_1"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/ffn/conv2/Tensordot/range/start"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_t"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/ffn/conv2/Tensordot/range/delta"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_t"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/ffn/conv2/Tensordot/range"
      op: "Range"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/ffn/conv2/Tensordot/range/start"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/ffn/conv2/Tensordot/Rank"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/ffn/conv2/Tensordot/range/delta"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/ffn/conv2/Tensordot/ListDiff"
      op: "ListDiff"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/ffn/conv2/Tensordot/range"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/ffn/conv2/Tensordot/add_1"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/ffn/conv2/Tensordot/GatherV2/axis"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_t"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/ffn/conv2/Tensordot/GatherV2"
      op: "GatherV2"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/ffn/conv2/Tensordot/Shape"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/ffn/conv2/Tensordot/ListDiff"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/ffn/conv2/Tensordot/GatherV2/axis"
      attr {
        key: "Taxis"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "Tindices"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "Tparams"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/ffn/conv2/Tensordot/GatherV2_1/axis"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_t"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/ffn/conv2/Tensordot/GatherV2_1"
      op: "GatherV2"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/ffn/conv2/Tensordot/Shape"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/ffn/conv2/Tensordot/add_1"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/ffn/conv2/Tensordot/GatherV2_1/axis"
      attr {
        key: "Taxis"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "Tindices"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "Tparams"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/ffn/conv2/Tensordot/Const"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_t"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/ffn/conv2/Tensordot/Prod"
      op: "Prod"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/ffn/conv2/Tensordot/GatherV2"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/ffn/conv2/Tensordot/Const"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/ffn/conv2/Tensordot/Const_1"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_t"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/ffn/conv2/Tensordot/Prod_1"
      op: "Prod"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/ffn/conv2/Tensordot/GatherV2_1"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/ffn/conv2/Tensordot/Const_1"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/ffn/conv2/Tensordot/concat/axis"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_t"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/ffn/conv2/Tensordot/concat"
      op: "ConcatV2"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/ffn/conv2/Tensordot/GatherV2_1"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/ffn/conv2/Tensordot/GatherV2"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/ffn/conv2/Tensordot/concat/axis"
      attr {
        key: "N"
        value {
          i: 2
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/ffn/conv2/Tensordot/concat_1/axis"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_t"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/ffn/conv2/Tensordot/concat_1"
      op: "ConcatV2"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/ffn/conv2/Tensordot/ListDiff"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/ffn/conv2/Tensordot/add_1"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/ffn/conv2/Tensordot/concat_1/axis"
      attr {
        key: "N"
        value {
          i: 2
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/ffn/conv2/Tensordot/stack"
      op: "Pack"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/ffn/conv2/Tensordot/Prod"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/ffn/conv2/Tensordot/Prod_1"
      attr {
        key: "N"
        value {
          i: 2
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/ffn/conv2/Tensordot/transpose"
      op: "Transpose"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/ffn/conv1/Relu"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/ffn/conv2/Tensordot/concat_1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
              dim {
                size: -1
              }
              dim {
                size: 512
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/ffn/conv2/Tensordot/Reshape"
      op: "Reshape"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/ffn/conv2/Tensordot/transpose"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/ffn/conv2/Tensordot/stack"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/ffn/conv2/Tensordot/transpose_1/perm"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_t"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 2
              }
            }
            tensor_content: "\000\000\000\000\001\000\000\000"
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/ffn/conv2/Tensordot/transpose_1"
      op: "Transpose"
      input: "Identity_27"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/ffn/conv2/Tensordot/transpose_1/perm"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 512
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/ffn/conv2/Tensordot/Reshape_1/shape"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_t"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 2
              }
            }
            tensor_content: "\000\002\000\000\200\000\000\000"
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/ffn/conv2/Tensordot/Reshape_1"
      op: "Reshape"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/ffn/conv2/Tensordot/transpose_1"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/ffn/conv2/Tensordot/Reshape_1/shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 512
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/ffn/conv2/Tensordot/MatMul"
      op: "MatMul"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/ffn/conv2/Tensordot/Reshape"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/ffn/conv2/Tensordot/Reshape_1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/ffn/conv2/Tensordot/Const_2"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_t"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 128
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/ffn/conv2/Tensordot/concat_2/axis"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_t"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/ffn/conv2/Tensordot/concat_2"
      op: "ConcatV2"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/ffn/conv2/Tensordot/GatherV2"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/ffn/conv2/Tensordot/Const_2"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/ffn/conv2/Tensordot/concat_2/axis"
      attr {
        key: "N"
        value {
          i: 2
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/ffn/conv2/Tensordot"
      op: "Reshape"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/ffn/conv2/Tensordot/MatMul"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/ffn/conv2/Tensordot/concat_2"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
              dim {
                size: -1
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/ffn/conv2/BiasAdd"
      op: "BiasAdd"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/ffn/conv2/Tensordot"
      input: "Identity_28"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
              dim {
                size: -1
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/ffn/Squeeze"
      op: "Squeeze"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/ffn/conv2/BiasAdd"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
      attr {
        key: "squeeze_dims"
        value {
          list {
            i: 0
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/ffn/pad_reduce/restore/Shape"
      op: "Shape"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/ffn/Squeeze"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/ffn/pad_reduce/restore/strided_slice/stack"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_t"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/ffn/pad_reduce/restore/strided_slice/stack_1"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_t"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/ffn/pad_reduce/restore/strided_slice/stack_2"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_t"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/ffn/pad_reduce/restore/strided_slice"
      op: "StridedSlice"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/ffn/pad_reduce/restore/Shape"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/ffn/pad_reduce/restore/strided_slice/stack"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/ffn/pad_reduce/restore/strided_slice/stack_1"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/ffn/pad_reduce/restore/strided_slice/stack_2"
      attr {
        key: "Index"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "end_mask"
        value {
          i: 1
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/ffn/pad_reduce/restore/concat/axis"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_t"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/ffn/pad_reduce/restore/concat"
      op: "ConcatV2"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/pad_reduce/get_ids/strided_slice"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/ffn/pad_reduce/restore/strided_slice"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/ffn/pad_reduce/restore/concat/axis"
      attr {
        key: "N"
        value {
          i: 2
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/ffn/pad_reduce/restore/ScatterNd"
      op: "ScatterNd"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/pad_reduce/get_ids/ToInt32"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/ffn/Squeeze"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/ffn/pad_reduce/restore/concat"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tindices"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/ffn/Reshape_1/shape/2"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_t"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 128
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/ffn/Reshape_1/shape"
      op: "Pack"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/ffn/strided_slice"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/ffn/strided_slice_1"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/ffn/Reshape_1/shape/2"
      attr {
        key: "N"
        value {
          i: 3
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/ffn/Reshape_1"
      op: "Reshape"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/ffn/pad_reduce/restore/ScatterNd"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/ffn/Reshape_1/shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: -1
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/ffn/layer_postprocess/add"
      op: "Add"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/ffn/Reshape_1"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/layer_postprocess/add"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: -1
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/layer_prepostprocess/Shape"
      op: "Shape"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/ffn/layer_postprocess/add"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/layer_prepostprocess/strided_slice/stack"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_t"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/layer_prepostprocess/strided_slice/stack_1"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_t"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/layer_prepostprocess/strided_slice/stack_2"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_t"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/layer_prepostprocess/strided_slice"
      op: "StridedSlice"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/layer_prepostprocess/Shape"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/layer_prepostprocess/strided_slice/stack"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/layer_prepostprocess/strided_slice/stack_1"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/layer_prepostprocess/strided_slice/stack_2"
      attr {
        key: "Index"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "shrink_axis_mask"
        value {
          i: 1
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/layer_prepostprocess/strided_slice_1/stack"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_t"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/layer_prepostprocess/strided_slice_1/stack_1"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_t"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 2
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/layer_prepostprocess/strided_slice_1/stack_2"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_t"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/layer_prepostprocess/strided_slice_1"
      op: "StridedSlice"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/layer_prepostprocess/Shape"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/layer_prepostprocess/strided_slice_1/stack"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/layer_prepostprocess/strided_slice_1/stack_1"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/layer_prepostprocess/strided_slice_1/stack_2"
      attr {
        key: "Index"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "shrink_axis_mask"
        value {
          i: 1
        }
      }
    }
    node {
      name: "cs_similarity_transformer/body/code_embedding/encoder/layer_1/self_attention/layer_prepostprocess/layer_norm/layer_norm_scale/Initializer/ones"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@cs_similarity_transformer/body/code_embedding/encoder/layer_1/self_attention/layer_prepostprocess/layer_norm/layer_norm_scale"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
              dim {
                size: 128
              }
            }
            float_val: 1.0
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/body/code_embedding/encoder/layer_1/self_attention/layer_prepostprocess/layer_norm/layer_norm_scale"
      op: "VarHandleOp"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@cs_similarity_transformer/body/code_embedding/encoder/layer_1/self_attention/layer_prepostprocess/layer_norm/layer_norm_scale"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 128
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: "cs_similarity_transformer/body/code_embedding/encoder/layer_1/self_attention/layer_prepostprocess/layer_norm/layer_norm_scale"
        }
      }
    }
    node {
      name: "cs_similarity_transformer/body/code_embedding/encoder/layer_1/self_attention/layer_prepostprocess/layer_norm/layer_norm_scale/IsInitialized/VarIsInitializedOp"
      op: "VarIsInitializedOp"
      input: "cs_similarity_transformer/body/code_embedding/encoder/layer_1/self_attention/layer_prepostprocess/layer_norm/layer_norm_scale"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/body/code_embedding/encoder/layer_1/self_attention/layer_prepostprocess/layer_norm/layer_norm_scale/Assign"
      op: "AssignVariableOp"
      input: "cs_similarity_transformer/body/code_embedding/encoder/layer_1/self_attention/layer_prepostprocess/layer_norm/layer_norm_scale"
      input: "cs_similarity_transformer/body/code_embedding/encoder/layer_1/self_attention/layer_prepostprocess/layer_norm/layer_norm_scale/Initializer/ones"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@cs_similarity_transformer/body/code_embedding/encoder/layer_1/self_attention/layer_prepostprocess/layer_norm/layer_norm_scale"
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "cs_similarity_transformer/body/code_embedding/encoder/layer_1/self_attention/layer_prepostprocess/layer_norm/layer_norm_scale/Read/ReadVariableOp"
      op: "ReadVariableOp"
      input: "cs_similarity_transformer/body/code_embedding/encoder/layer_1/self_attention/layer_prepostprocess/layer_norm/layer_norm_scale"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@cs_similarity_transformer/body/code_embedding/encoder/layer_1/self_attention/layer_prepostprocess/layer_norm/layer_norm_scale"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "Read_29/ReadVariableOp"
      op: "ReadVariableOp"
      input: "Read_29/ReadVariableOp/Switch:1"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "Read_29/ReadVariableOp/Switch"
      op: "Switch"
      input: "cs_similarity_transformer/body/code_embedding/encoder/layer_1/self_attention/layer_prepostprocess/layer_norm/layer_norm_scale"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/pred_id"
      attr {
        key: "T"
        value {
          type: DT_RESOURCE
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@cs_similarity_transformer/body/code_embedding/encoder/layer_1/self_attention/layer_prepostprocess/layer_norm/layer_norm_scale"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
            shape {
            }
          }
        }
      }
    }
    node {
      name: "Identity_29"
      op: "Identity"
      input: "Read_29/ReadVariableOp"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/body/code_embedding/encoder/layer_1/self_attention/layer_prepostprocess/layer_norm/layer_norm_bias/Initializer/zeros"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@cs_similarity_transformer/body/code_embedding/encoder/layer_1/self_attention/layer_prepostprocess/layer_norm/layer_norm_bias"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
              dim {
                size: 128
              }
            }
            float_val: 0.0
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/body/code_embedding/encoder/layer_1/self_attention/layer_prepostprocess/layer_norm/layer_norm_bias"
      op: "VarHandleOp"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@cs_similarity_transformer/body/code_embedding/encoder/layer_1/self_attention/layer_prepostprocess/layer_norm/layer_norm_bias"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 128
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: "cs_similarity_transformer/body/code_embedding/encoder/layer_1/self_attention/layer_prepostprocess/layer_norm/layer_norm_bias"
        }
      }
    }
    node {
      name: "cs_similarity_transformer/body/code_embedding/encoder/layer_1/self_attention/layer_prepostprocess/layer_norm/layer_norm_bias/IsInitialized/VarIsInitializedOp"
      op: "VarIsInitializedOp"
      input: "cs_similarity_transformer/body/code_embedding/encoder/layer_1/self_attention/layer_prepostprocess/layer_norm/layer_norm_bias"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/body/code_embedding/encoder/layer_1/self_attention/layer_prepostprocess/layer_norm/layer_norm_bias/Assign"
      op: "AssignVariableOp"
      input: "cs_similarity_transformer/body/code_embedding/encoder/layer_1/self_attention/layer_prepostprocess/layer_norm/layer_norm_bias"
      input: "cs_similarity_transformer/body/code_embedding/encoder/layer_1/self_attention/layer_prepostprocess/layer_norm/layer_norm_bias/Initializer/zeros"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@cs_similarity_transformer/body/code_embedding/encoder/layer_1/self_attention/layer_prepostprocess/layer_norm/layer_norm_bias"
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "cs_similarity_transformer/body/code_embedding/encoder/layer_1/self_attention/layer_prepostprocess/layer_norm/layer_norm_bias/Read/ReadVariableOp"
      op: "ReadVariableOp"
      input: "cs_similarity_transformer/body/code_embedding/encoder/layer_1/self_attention/layer_prepostprocess/layer_norm/layer_norm_bias"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@cs_similarity_transformer/body/code_embedding/encoder/layer_1/self_attention/layer_prepostprocess/layer_norm/layer_norm_bias"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "Read_30/ReadVariableOp"
      op: "ReadVariableOp"
      input: "Read_30/ReadVariableOp/Switch:1"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "Read_30/ReadVariableOp/Switch"
      op: "Switch"
      input: "cs_similarity_transformer/body/code_embedding/encoder/layer_1/self_attention/layer_prepostprocess/layer_norm/layer_norm_bias"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/pred_id"
      attr {
        key: "T"
        value {
          type: DT_RESOURCE
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@cs_similarity_transformer/body/code_embedding/encoder/layer_1/self_attention/layer_prepostprocess/layer_norm/layer_norm_bias"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
            shape {
            }
          }
        }
      }
    }
    node {
      name: "Identity_30"
      op: "Identity"
      input: "Read_30/ReadVariableOp"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/layer_prepostprocess/layer_norm/Const"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_t"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 9.999999974752427e-07
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/layer_prepostprocess/layer_norm/Mean/reduction_indices"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_t"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: -1
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/layer_prepostprocess/layer_norm/Mean"
      op: "Mean"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/ffn/layer_postprocess/add"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/layer_prepostprocess/layer_norm/Mean/reduction_indices"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: true
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/layer_prepostprocess/layer_norm/sub"
      op: "Sub"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/ffn/layer_postprocess/add"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/layer_prepostprocess/layer_norm/Mean"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: -1
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/layer_prepostprocess/layer_norm/Square"
      op: "Square"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/layer_prepostprocess/layer_norm/sub"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: -1
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/layer_prepostprocess/layer_norm/Mean_1/reduction_indices"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_t"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: -1
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/layer_prepostprocess/layer_norm/Mean_1"
      op: "Mean"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/layer_prepostprocess/layer_norm/Square"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/layer_prepostprocess/layer_norm/Mean_1/reduction_indices"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: true
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/layer_prepostprocess/layer_norm/sub_1"
      op: "Sub"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/ffn/layer_postprocess/add"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/layer_prepostprocess/layer_norm/Mean"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: -1
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/layer_prepostprocess/layer_norm/add"
      op: "Add"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/layer_prepostprocess/layer_norm/Mean_1"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/layer_prepostprocess/layer_norm/Const"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/layer_prepostprocess/layer_norm/Rsqrt"
      op: "Rsqrt"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/layer_prepostprocess/layer_norm/add"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/layer_prepostprocess/layer_norm/mul"
      op: "Mul"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/layer_prepostprocess/layer_norm/sub_1"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/layer_prepostprocess/layer_norm/Rsqrt"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: -1
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/layer_prepostprocess/layer_norm/mul_1"
      op: "Mul"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/layer_prepostprocess/layer_norm/mul"
      input: "Identity_29"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: -1
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/layer_prepostprocess/layer_norm/add_1"
      op: "Add"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/layer_prepostprocess/layer_norm/mul_1"
      input: "Identity_30"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: -1
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/body/code_embedding/encoder/layer_1/self_attention/multihead_attention/q/kernel/Initializer/random_uniform/shape"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@cs_similarity_transformer/body/code_embedding/encoder/layer_1/self_attention/multihead_attention/q/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 2
              }
            }
            tensor_content: "\200\000\000\000\200\000\000\000"
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/body/code_embedding/encoder/layer_1/self_attention/multihead_attention/q/kernel/Initializer/random_uniform/min"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@cs_similarity_transformer/body/code_embedding/encoder/layer_1/self_attention/multihead_attention/q/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: -0.1530931144952774
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/body/code_embedding/encoder/layer_1/self_attention/multihead_attention/q/kernel/Initializer/random_uniform/max"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@cs_similarity_transformer/body/code_embedding/encoder/layer_1/self_attention/multihead_attention/q/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.1530931144952774
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/body/code_embedding/encoder/layer_1/self_attention/multihead_attention/q/kernel/Initializer/random_uniform/RandomUniform"
      op: "RandomUniform"
      input: "cs_similarity_transformer/body/code_embedding/encoder/layer_1/self_attention/multihead_attention/q/kernel/Initializer/random_uniform/shape"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@cs_similarity_transformer/body/code_embedding/encoder/layer_1/self_attention/multihead_attention/q/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "cs_similarity_transformer/body/code_embedding/encoder/layer_1/self_attention/multihead_attention/q/kernel/Initializer/random_uniform/sub"
      op: "Sub"
      input: "cs_similarity_transformer/body/code_embedding/encoder/layer_1/self_attention/multihead_attention/q/kernel/Initializer/random_uniform/max"
      input: "cs_similarity_transformer/body/code_embedding/encoder/layer_1/self_attention/multihead_attention/q/kernel/Initializer/random_uniform/min"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@cs_similarity_transformer/body/code_embedding/encoder/layer_1/self_attention/multihead_attention/q/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/body/code_embedding/encoder/layer_1/self_attention/multihead_attention/q/kernel/Initializer/random_uniform/mul"
      op: "Mul"
      input: "cs_similarity_transformer/body/code_embedding/encoder/layer_1/self_attention/multihead_attention/q/kernel/Initializer/random_uniform/RandomUniform"
      input: "cs_similarity_transformer/body/code_embedding/encoder/layer_1/self_attention/multihead_attention/q/kernel/Initializer/random_uniform/sub"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@cs_similarity_transformer/body/code_embedding/encoder/layer_1/self_attention/multihead_attention/q/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/body/code_embedding/encoder/layer_1/self_attention/multihead_attention/q/kernel/Initializer/random_uniform"
      op: "Add"
      input: "cs_similarity_transformer/body/code_embedding/encoder/layer_1/self_attention/multihead_attention/q/kernel/Initializer/random_uniform/mul"
      input: "cs_similarity_transformer/body/code_embedding/encoder/layer_1/self_attention/multihead_attention/q/kernel/Initializer/random_uniform/min"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@cs_similarity_transformer/body/code_embedding/encoder/layer_1/self_attention/multihead_attention/q/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/body/code_embedding/encoder/layer_1/self_attention/multihead_attention/q/kernel"
      op: "VarHandleOp"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@cs_similarity_transformer/body/code_embedding/encoder/layer_1/self_attention/multihead_attention/q/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 128
            }
            dim {
              size: 128
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: "cs_similarity_transformer/body/code_embedding/encoder/layer_1/self_attention/multihead_attention/q/kernel"
        }
      }
    }
    node {
      name: "cs_similarity_transformer/body/code_embedding/encoder/layer_1/self_attention/multihead_attention/q/kernel/IsInitialized/VarIsInitializedOp"
      op: "VarIsInitializedOp"
      input: "cs_similarity_transformer/body/code_embedding/encoder/layer_1/self_attention/multihead_attention/q/kernel"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/body/code_embedding/encoder/layer_1/self_attention/multihead_attention/q/kernel/Assign"
      op: "AssignVariableOp"
      input: "cs_similarity_transformer/body/code_embedding/encoder/layer_1/self_attention/multihead_attention/q/kernel"
      input: "cs_similarity_transformer/body/code_embedding/encoder/layer_1/self_attention/multihead_attention/q/kernel/Initializer/random_uniform"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@cs_similarity_transformer/body/code_embedding/encoder/layer_1/self_attention/multihead_attention/q/kernel"
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "cs_similarity_transformer/body/code_embedding/encoder/layer_1/self_attention/multihead_attention/q/kernel/Read/ReadVariableOp"
      op: "ReadVariableOp"
      input: "cs_similarity_transformer/body/code_embedding/encoder/layer_1/self_attention/multihead_attention/q/kernel"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@cs_similarity_transformer/body/code_embedding/encoder/layer_1/self_attention/multihead_attention/q/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "Read_31/ReadVariableOp"
      op: "ReadVariableOp"
      input: "Read_31/ReadVariableOp/Switch:1"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "Read_31/ReadVariableOp/Switch"
      op: "Switch"
      input: "cs_similarity_transformer/body/code_embedding/encoder/layer_1/self_attention/multihead_attention/q/kernel"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/pred_id"
      attr {
        key: "T"
        value {
          type: DT_RESOURCE
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@cs_similarity_transformer/body/code_embedding/encoder/layer_1/self_attention/multihead_attention/q/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
            shape {
            }
          }
        }
      }
    }
    node {
      name: "Identity_31"
      op: "Identity"
      input: "Read_31/ReadVariableOp"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/q/Tensordot/Shape"
      op: "Shape"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/layer_prepostprocess/layer_norm/add_1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/q/Tensordot/Rank"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_t"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 3
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/q/Tensordot/axes"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_t"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 2
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/q/Tensordot/GreaterEqual/y"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_t"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/q/Tensordot/GreaterEqual"
      op: "GreaterEqual"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/q/Tensordot/axes"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/q/Tensordot/GreaterEqual/y"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/q/Tensordot/Cast"
      op: "Cast"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/q/Tensordot/GreaterEqual"
      attr {
        key: "DstT"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "SrcT"
        value {
          type: DT_BOOL
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/q/Tensordot/mul"
      op: "Mul"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/q/Tensordot/Cast"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/q/Tensordot/axes"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/q/Tensordot/Less/y"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_t"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/q/Tensordot/Less"
      op: "Less"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/q/Tensordot/axes"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/q/Tensordot/Less/y"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/q/Tensordot/Cast_1"
      op: "Cast"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/q/Tensordot/Less"
      attr {
        key: "DstT"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "SrcT"
        value {
          type: DT_BOOL
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/q/Tensordot/add"
      op: "Add"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/q/Tensordot/axes"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/q/Tensordot/Rank"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/q/Tensordot/mul_1"
      op: "Mul"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/q/Tensordot/Cast_1"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/q/Tensordot/add"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/q/Tensordot/add_1"
      op: "Add"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/q/Tensordot/mul"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/q/Tensordot/mul_1"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/q/Tensordot/range/start"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_t"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/q/Tensordot/range/delta"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_t"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/q/Tensordot/range"
      op: "Range"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/q/Tensordot/range/start"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/q/Tensordot/Rank"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/q/Tensordot/range/delta"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/q/Tensordot/ListDiff"
      op: "ListDiff"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/q/Tensordot/range"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/q/Tensordot/add_1"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/q/Tensordot/GatherV2/axis"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_t"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/q/Tensordot/GatherV2"
      op: "GatherV2"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/q/Tensordot/Shape"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/q/Tensordot/ListDiff"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/q/Tensordot/GatherV2/axis"
      attr {
        key: "Taxis"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "Tindices"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "Tparams"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/q/Tensordot/GatherV2_1/axis"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_t"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/q/Tensordot/GatherV2_1"
      op: "GatherV2"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/q/Tensordot/Shape"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/q/Tensordot/add_1"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/q/Tensordot/GatherV2_1/axis"
      attr {
        key: "Taxis"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "Tindices"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "Tparams"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/q/Tensordot/Const"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_t"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/q/Tensordot/Prod"
      op: "Prod"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/q/Tensordot/GatherV2"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/q/Tensordot/Const"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/q/Tensordot/Const_1"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_t"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/q/Tensordot/Prod_1"
      op: "Prod"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/q/Tensordot/GatherV2_1"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/q/Tensordot/Const_1"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/q/Tensordot/concat/axis"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_t"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/q/Tensordot/concat"
      op: "ConcatV2"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/q/Tensordot/GatherV2_1"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/q/Tensordot/GatherV2"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/q/Tensordot/concat/axis"
      attr {
        key: "N"
        value {
          i: 2
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/q/Tensordot/concat_1/axis"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_t"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/q/Tensordot/concat_1"
      op: "ConcatV2"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/q/Tensordot/ListDiff"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/q/Tensordot/add_1"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/q/Tensordot/concat_1/axis"
      attr {
        key: "N"
        value {
          i: 2
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/q/Tensordot/stack"
      op: "Pack"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/q/Tensordot/Prod"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/q/Tensordot/Prod_1"
      attr {
        key: "N"
        value {
          i: 2
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/q/Tensordot/transpose"
      op: "Transpose"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/layer_prepostprocess/layer_norm/add_1"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/q/Tensordot/concat_1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: -1
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/q/Tensordot/Reshape"
      op: "Reshape"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/q/Tensordot/transpose"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/q/Tensordot/stack"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/q/Tensordot/transpose_1/perm"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_t"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 2
              }
            }
            tensor_content: "\000\000\000\000\001\000\000\000"
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/q/Tensordot/transpose_1"
      op: "Transpose"
      input: "Identity_31"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/q/Tensordot/transpose_1/perm"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/q/Tensordot/Reshape_1/shape"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_t"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 2
              }
            }
            tensor_content: "\200\000\000\000\200\000\000\000"
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/q/Tensordot/Reshape_1"
      op: "Reshape"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/q/Tensordot/transpose_1"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/q/Tensordot/Reshape_1/shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/q/Tensordot/MatMul"
      op: "MatMul"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/q/Tensordot/Reshape"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/q/Tensordot/Reshape_1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/q/Tensordot/Const_2"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_t"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 128
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/q/Tensordot/concat_2/axis"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_t"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/q/Tensordot/concat_2"
      op: "ConcatV2"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/q/Tensordot/GatherV2"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/q/Tensordot/Const_2"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/q/Tensordot/concat_2/axis"
      attr {
        key: "N"
        value {
          i: 2
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/q/Tensordot"
      op: "Reshape"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/q/Tensordot/MatMul"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/q/Tensordot/concat_2"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: -1
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/body/code_embedding/encoder/layer_1/self_attention/multihead_attention/k/kernel/Initializer/random_uniform/shape"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@cs_similarity_transformer/body/code_embedding/encoder/layer_1/self_attention/multihead_attention/k/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 2
              }
            }
            tensor_content: "\200\000\000\000\200\000\000\000"
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/body/code_embedding/encoder/layer_1/self_attention/multihead_attention/k/kernel/Initializer/random_uniform/min"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@cs_similarity_transformer/body/code_embedding/encoder/layer_1/self_attention/multihead_attention/k/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: -0.1530931144952774
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/body/code_embedding/encoder/layer_1/self_attention/multihead_attention/k/kernel/Initializer/random_uniform/max"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@cs_similarity_transformer/body/code_embedding/encoder/layer_1/self_attention/multihead_attention/k/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.1530931144952774
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/body/code_embedding/encoder/layer_1/self_attention/multihead_attention/k/kernel/Initializer/random_uniform/RandomUniform"
      op: "RandomUniform"
      input: "cs_similarity_transformer/body/code_embedding/encoder/layer_1/self_attention/multihead_attention/k/kernel/Initializer/random_uniform/shape"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@cs_similarity_transformer/body/code_embedding/encoder/layer_1/self_attention/multihead_attention/k/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "cs_similarity_transformer/body/code_embedding/encoder/layer_1/self_attention/multihead_attention/k/kernel/Initializer/random_uniform/sub"
      op: "Sub"
      input: "cs_similarity_transformer/body/code_embedding/encoder/layer_1/self_attention/multihead_attention/k/kernel/Initializer/random_uniform/max"
      input: "cs_similarity_transformer/body/code_embedding/encoder/layer_1/self_attention/multihead_attention/k/kernel/Initializer/random_uniform/min"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@cs_similarity_transformer/body/code_embedding/encoder/layer_1/self_attention/multihead_attention/k/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/body/code_embedding/encoder/layer_1/self_attention/multihead_attention/k/kernel/Initializer/random_uniform/mul"
      op: "Mul"
      input: "cs_similarity_transformer/body/code_embedding/encoder/layer_1/self_attention/multihead_attention/k/kernel/Initializer/random_uniform/RandomUniform"
      input: "cs_similarity_transformer/body/code_embedding/encoder/layer_1/self_attention/multihead_attention/k/kernel/Initializer/random_uniform/sub"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@cs_similarity_transformer/body/code_embedding/encoder/layer_1/self_attention/multihead_attention/k/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/body/code_embedding/encoder/layer_1/self_attention/multihead_attention/k/kernel/Initializer/random_uniform"
      op: "Add"
      input: "cs_similarity_transformer/body/code_embedding/encoder/layer_1/self_attention/multihead_attention/k/kernel/Initializer/random_uniform/mul"
      input: "cs_similarity_transformer/body/code_embedding/encoder/layer_1/self_attention/multihead_attention/k/kernel/Initializer/random_uniform/min"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@cs_similarity_transformer/body/code_embedding/encoder/layer_1/self_attention/multihead_attention/k/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/body/code_embedding/encoder/layer_1/self_attention/multihead_attention/k/kernel"
      op: "VarHandleOp"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@cs_similarity_transformer/body/code_embedding/encoder/layer_1/self_attention/multihead_attention/k/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 128
            }
            dim {
              size: 128
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: "cs_similarity_transformer/body/code_embedding/encoder/layer_1/self_attention/multihead_attention/k/kernel"
        }
      }
    }
    node {
      name: "cs_similarity_transformer/body/code_embedding/encoder/layer_1/self_attention/multihead_attention/k/kernel/IsInitialized/VarIsInitializedOp"
      op: "VarIsInitializedOp"
      input: "cs_similarity_transformer/body/code_embedding/encoder/layer_1/self_attention/multihead_attention/k/kernel"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/body/code_embedding/encoder/layer_1/self_attention/multihead_attention/k/kernel/Assign"
      op: "AssignVariableOp"
      input: "cs_similarity_transformer/body/code_embedding/encoder/layer_1/self_attention/multihead_attention/k/kernel"
      input: "cs_similarity_transformer/body/code_embedding/encoder/layer_1/self_attention/multihead_attention/k/kernel/Initializer/random_uniform"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@cs_similarity_transformer/body/code_embedding/encoder/layer_1/self_attention/multihead_attention/k/kernel"
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "cs_similarity_transformer/body/code_embedding/encoder/layer_1/self_attention/multihead_attention/k/kernel/Read/ReadVariableOp"
      op: "ReadVariableOp"
      input: "cs_similarity_transformer/body/code_embedding/encoder/layer_1/self_attention/multihead_attention/k/kernel"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@cs_similarity_transformer/body/code_embedding/encoder/layer_1/self_attention/multihead_attention/k/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "Read_32/ReadVariableOp"
      op: "ReadVariableOp"
      input: "Read_32/ReadVariableOp/Switch:1"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "Read_32/ReadVariableOp/Switch"
      op: "Switch"
      input: "cs_similarity_transformer/body/code_embedding/encoder/layer_1/self_attention/multihead_attention/k/kernel"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/pred_id"
      attr {
        key: "T"
        value {
          type: DT_RESOURCE
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@cs_similarity_transformer/body/code_embedding/encoder/layer_1/self_attention/multihead_attention/k/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
            shape {
            }
          }
        }
      }
    }
    node {
      name: "Identity_32"
      op: "Identity"
      input: "Read_32/ReadVariableOp"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/k/Tensordot/Shape"
      op: "Shape"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/layer_prepostprocess/layer_norm/add_1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/k/Tensordot/Rank"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_t"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 3
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/k/Tensordot/axes"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_t"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 2
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/k/Tensordot/GreaterEqual/y"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_t"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/k/Tensordot/GreaterEqual"
      op: "GreaterEqual"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/k/Tensordot/axes"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/k/Tensordot/GreaterEqual/y"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/k/Tensordot/Cast"
      op: "Cast"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/k/Tensordot/GreaterEqual"
      attr {
        key: "DstT"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "SrcT"
        value {
          type: DT_BOOL
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/k/Tensordot/mul"
      op: "Mul"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/k/Tensordot/Cast"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/k/Tensordot/axes"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/k/Tensordot/Less/y"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_t"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/k/Tensordot/Less"
      op: "Less"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/k/Tensordot/axes"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/k/Tensordot/Less/y"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/k/Tensordot/Cast_1"
      op: "Cast"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/k/Tensordot/Less"
      attr {
        key: "DstT"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "SrcT"
        value {
          type: DT_BOOL
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/k/Tensordot/add"
      op: "Add"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/k/Tensordot/axes"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/k/Tensordot/Rank"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/k/Tensordot/mul_1"
      op: "Mul"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/k/Tensordot/Cast_1"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/k/Tensordot/add"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/k/Tensordot/add_1"
      op: "Add"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/k/Tensordot/mul"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/k/Tensordot/mul_1"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/k/Tensordot/range/start"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_t"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/k/Tensordot/range/delta"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_t"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/k/Tensordot/range"
      op: "Range"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/k/Tensordot/range/start"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/k/Tensordot/Rank"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/k/Tensordot/range/delta"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/k/Tensordot/ListDiff"
      op: "ListDiff"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/k/Tensordot/range"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/k/Tensordot/add_1"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/k/Tensordot/GatherV2/axis"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_t"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/k/Tensordot/GatherV2"
      op: "GatherV2"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/k/Tensordot/Shape"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/k/Tensordot/ListDiff"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/k/Tensordot/GatherV2/axis"
      attr {
        key: "Taxis"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "Tindices"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "Tparams"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/k/Tensordot/GatherV2_1/axis"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_t"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/k/Tensordot/GatherV2_1"
      op: "GatherV2"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/k/Tensordot/Shape"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/k/Tensordot/add_1"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/k/Tensordot/GatherV2_1/axis"
      attr {
        key: "Taxis"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "Tindices"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "Tparams"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/k/Tensordot/Const"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_t"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/k/Tensordot/Prod"
      op: "Prod"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/k/Tensordot/GatherV2"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/k/Tensordot/Const"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/k/Tensordot/Const_1"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_t"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/k/Tensordot/Prod_1"
      op: "Prod"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/k/Tensordot/GatherV2_1"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/k/Tensordot/Const_1"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/k/Tensordot/concat/axis"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_t"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/k/Tensordot/concat"
      op: "ConcatV2"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/k/Tensordot/GatherV2_1"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/k/Tensordot/GatherV2"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/k/Tensordot/concat/axis"
      attr {
        key: "N"
        value {
          i: 2
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/k/Tensordot/concat_1/axis"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_t"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/k/Tensordot/concat_1"
      op: "ConcatV2"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/k/Tensordot/ListDiff"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/k/Tensordot/add_1"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/k/Tensordot/concat_1/axis"
      attr {
        key: "N"
        value {
          i: 2
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/k/Tensordot/stack"
      op: "Pack"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/k/Tensordot/Prod"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/k/Tensordot/Prod_1"
      attr {
        key: "N"
        value {
          i: 2
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/k/Tensordot/transpose"
      op: "Transpose"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/layer_prepostprocess/layer_norm/add_1"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/k/Tensordot/concat_1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: -1
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/k/Tensordot/Reshape"
      op: "Reshape"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/k/Tensordot/transpose"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/k/Tensordot/stack"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/k/Tensordot/transpose_1/perm"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_t"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 2
              }
            }
            tensor_content: "\000\000\000\000\001\000\000\000"
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/k/Tensordot/transpose_1"
      op: "Transpose"
      input: "Identity_32"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/k/Tensordot/transpose_1/perm"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/k/Tensordot/Reshape_1/shape"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_t"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 2
              }
            }
            tensor_content: "\200\000\000\000\200\000\000\000"
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/k/Tensordot/Reshape_1"
      op: "Reshape"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/k/Tensordot/transpose_1"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/k/Tensordot/Reshape_1/shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/k/Tensordot/MatMul"
      op: "MatMul"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/k/Tensordot/Reshape"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/k/Tensordot/Reshape_1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/k/Tensordot/Const_2"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_t"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 128
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/k/Tensordot/concat_2/axis"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_t"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/k/Tensordot/concat_2"
      op: "ConcatV2"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/k/Tensordot/GatherV2"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/k/Tensordot/Const_2"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/k/Tensordot/concat_2/axis"
      attr {
        key: "N"
        value {
          i: 2
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/k/Tensordot"
      op: "Reshape"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/k/Tensordot/MatMul"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/k/Tensordot/concat_2"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: -1
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/body/code_embedding/encoder/layer_1/self_attention/multihead_attention/v/kernel/Initializer/random_uniform/shape"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@cs_similarity_transformer/body/code_embedding/encoder/layer_1/self_attention/multihead_attention/v/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 2
              }
            }
            tensor_content: "\200\000\000\000\200\000\000\000"
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/body/code_embedding/encoder/layer_1/self_attention/multihead_attention/v/kernel/Initializer/random_uniform/min"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@cs_similarity_transformer/body/code_embedding/encoder/layer_1/self_attention/multihead_attention/v/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: -0.1530931144952774
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/body/code_embedding/encoder/layer_1/self_attention/multihead_attention/v/kernel/Initializer/random_uniform/max"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@cs_similarity_transformer/body/code_embedding/encoder/layer_1/self_attention/multihead_attention/v/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.1530931144952774
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/body/code_embedding/encoder/layer_1/self_attention/multihead_attention/v/kernel/Initializer/random_uniform/RandomUniform"
      op: "RandomUniform"
      input: "cs_similarity_transformer/body/code_embedding/encoder/layer_1/self_attention/multihead_attention/v/kernel/Initializer/random_uniform/shape"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@cs_similarity_transformer/body/code_embedding/encoder/layer_1/self_attention/multihead_attention/v/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "cs_similarity_transformer/body/code_embedding/encoder/layer_1/self_attention/multihead_attention/v/kernel/Initializer/random_uniform/sub"
      op: "Sub"
      input: "cs_similarity_transformer/body/code_embedding/encoder/layer_1/self_attention/multihead_attention/v/kernel/Initializer/random_uniform/max"
      input: "cs_similarity_transformer/body/code_embedding/encoder/layer_1/self_attention/multihead_attention/v/kernel/Initializer/random_uniform/min"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@cs_similarity_transformer/body/code_embedding/encoder/layer_1/self_attention/multihead_attention/v/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/body/code_embedding/encoder/layer_1/self_attention/multihead_attention/v/kernel/Initializer/random_uniform/mul"
      op: "Mul"
      input: "cs_similarity_transformer/body/code_embedding/encoder/layer_1/self_attention/multihead_attention/v/kernel/Initializer/random_uniform/RandomUniform"
      input: "cs_similarity_transformer/body/code_embedding/encoder/layer_1/self_attention/multihead_attention/v/kernel/Initializer/random_uniform/sub"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@cs_similarity_transformer/body/code_embedding/encoder/layer_1/self_attention/multihead_attention/v/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/body/code_embedding/encoder/layer_1/self_attention/multihead_attention/v/kernel/Initializer/random_uniform"
      op: "Add"
      input: "cs_similarity_transformer/body/code_embedding/encoder/layer_1/self_attention/multihead_attention/v/kernel/Initializer/random_uniform/mul"
      input: "cs_similarity_transformer/body/code_embedding/encoder/layer_1/self_attention/multihead_attention/v/kernel/Initializer/random_uniform/min"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@cs_similarity_transformer/body/code_embedding/encoder/layer_1/self_attention/multihead_attention/v/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/body/code_embedding/encoder/layer_1/self_attention/multihead_attention/v/kernel"
      op: "VarHandleOp"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@cs_similarity_transformer/body/code_embedding/encoder/layer_1/self_attention/multihead_attention/v/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 128
            }
            dim {
              size: 128
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: "cs_similarity_transformer/body/code_embedding/encoder/layer_1/self_attention/multihead_attention/v/kernel"
        }
      }
    }
    node {
      name: "cs_similarity_transformer/body/code_embedding/encoder/layer_1/self_attention/multihead_attention/v/kernel/IsInitialized/VarIsInitializedOp"
      op: "VarIsInitializedOp"
      input: "cs_similarity_transformer/body/code_embedding/encoder/layer_1/self_attention/multihead_attention/v/kernel"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/body/code_embedding/encoder/layer_1/self_attention/multihead_attention/v/kernel/Assign"
      op: "AssignVariableOp"
      input: "cs_similarity_transformer/body/code_embedding/encoder/layer_1/self_attention/multihead_attention/v/kernel"
      input: "cs_similarity_transformer/body/code_embedding/encoder/layer_1/self_attention/multihead_attention/v/kernel/Initializer/random_uniform"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@cs_similarity_transformer/body/code_embedding/encoder/layer_1/self_attention/multihead_attention/v/kernel"
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "cs_similarity_transformer/body/code_embedding/encoder/layer_1/self_attention/multihead_attention/v/kernel/Read/ReadVariableOp"
      op: "ReadVariableOp"
      input: "cs_similarity_transformer/body/code_embedding/encoder/layer_1/self_attention/multihead_attention/v/kernel"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@cs_similarity_transformer/body/code_embedding/encoder/layer_1/self_attention/multihead_attention/v/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "Read_33/ReadVariableOp"
      op: "ReadVariableOp"
      input: "Read_33/ReadVariableOp/Switch:1"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "Read_33/ReadVariableOp/Switch"
      op: "Switch"
      input: "cs_similarity_transformer/body/code_embedding/encoder/layer_1/self_attention/multihead_attention/v/kernel"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/pred_id"
      attr {
        key: "T"
        value {
          type: DT_RESOURCE
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@cs_similarity_transformer/body/code_embedding/encoder/layer_1/self_attention/multihead_attention/v/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
            shape {
            }
          }
        }
      }
    }
    node {
      name: "Identity_33"
      op: "Identity"
      input: "Read_33/ReadVariableOp"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/v/Tensordot/Shape"
      op: "Shape"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/layer_prepostprocess/layer_norm/add_1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/v/Tensordot/Rank"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_t"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 3
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/v/Tensordot/axes"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_t"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 2
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/v/Tensordot/GreaterEqual/y"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_t"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/v/Tensordot/GreaterEqual"
      op: "GreaterEqual"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/v/Tensordot/axes"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/v/Tensordot/GreaterEqual/y"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/v/Tensordot/Cast"
      op: "Cast"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/v/Tensordot/GreaterEqual"
      attr {
        key: "DstT"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "SrcT"
        value {
          type: DT_BOOL
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/v/Tensordot/mul"
      op: "Mul"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/v/Tensordot/Cast"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/v/Tensordot/axes"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/v/Tensordot/Less/y"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_t"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/v/Tensordot/Less"
      op: "Less"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/v/Tensordot/axes"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/v/Tensordot/Less/y"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/v/Tensordot/Cast_1"
      op: "Cast"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/v/Tensordot/Less"
      attr {
        key: "DstT"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "SrcT"
        value {
          type: DT_BOOL
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/v/Tensordot/add"
      op: "Add"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/v/Tensordot/axes"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/v/Tensordot/Rank"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/v/Tensordot/mul_1"
      op: "Mul"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/v/Tensordot/Cast_1"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/v/Tensordot/add"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/v/Tensordot/add_1"
      op: "Add"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/v/Tensordot/mul"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/v/Tensordot/mul_1"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/v/Tensordot/range/start"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_t"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/v/Tensordot/range/delta"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_t"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/v/Tensordot/range"
      op: "Range"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/v/Tensordot/range/start"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/v/Tensordot/Rank"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/v/Tensordot/range/delta"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/v/Tensordot/ListDiff"
      op: "ListDiff"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/v/Tensordot/range"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/v/Tensordot/add_1"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/v/Tensordot/GatherV2/axis"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_t"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/v/Tensordot/GatherV2"
      op: "GatherV2"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/v/Tensordot/Shape"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/v/Tensordot/ListDiff"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/v/Tensordot/GatherV2/axis"
      attr {
        key: "Taxis"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "Tindices"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "Tparams"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/v/Tensordot/GatherV2_1/axis"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_t"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/v/Tensordot/GatherV2_1"
      op: "GatherV2"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/v/Tensordot/Shape"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/v/Tensordot/add_1"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/v/Tensordot/GatherV2_1/axis"
      attr {
        key: "Taxis"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "Tindices"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "Tparams"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/v/Tensordot/Const"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_t"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/v/Tensordot/Prod"
      op: "Prod"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/v/Tensordot/GatherV2"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/v/Tensordot/Const"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/v/Tensordot/Const_1"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_t"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/v/Tensordot/Prod_1"
      op: "Prod"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/v/Tensordot/GatherV2_1"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/v/Tensordot/Const_1"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/v/Tensordot/concat/axis"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_t"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/v/Tensordot/concat"
      op: "ConcatV2"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/v/Tensordot/GatherV2_1"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/v/Tensordot/GatherV2"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/v/Tensordot/concat/axis"
      attr {
        key: "N"
        value {
          i: 2
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/v/Tensordot/concat_1/axis"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_t"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/v/Tensordot/concat_1"
      op: "ConcatV2"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/v/Tensordot/ListDiff"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/v/Tensordot/add_1"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/v/Tensordot/concat_1/axis"
      attr {
        key: "N"
        value {
          i: 2
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/v/Tensordot/stack"
      op: "Pack"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/v/Tensordot/Prod"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/v/Tensordot/Prod_1"
      attr {
        key: "N"
        value {
          i: 2
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/v/Tensordot/transpose"
      op: "Transpose"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/layer_prepostprocess/layer_norm/add_1"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/v/Tensordot/concat_1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: -1
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/v/Tensordot/Reshape"
      op: "Reshape"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/v/Tensordot/transpose"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/v/Tensordot/stack"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/v/Tensordot/transpose_1/perm"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_t"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 2
              }
            }
            tensor_content: "\000\000\000\000\001\000\000\000"
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/v/Tensordot/transpose_1"
      op: "Transpose"
      input: "Identity_33"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/v/Tensordot/transpose_1/perm"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/v/Tensordot/Reshape_1/shape"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_t"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 2
              }
            }
            tensor_content: "\200\000\000\000\200\000\000\000"
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/v/Tensordot/Reshape_1"
      op: "Reshape"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/v/Tensordot/transpose_1"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/v/Tensordot/Reshape_1/shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/v/Tensordot/MatMul"
      op: "MatMul"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/v/Tensordot/Reshape"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/v/Tensordot/Reshape_1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/v/Tensordot/Const_2"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_t"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 128
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/v/Tensordot/concat_2/axis"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_t"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/v/Tensordot/concat_2"
      op: "ConcatV2"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/v/Tensordot/GatherV2"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/v/Tensordot/Const_2"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/v/Tensordot/concat_2/axis"
      attr {
        key: "N"
        value {
          i: 2
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/v/Tensordot"
      op: "Reshape"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/v/Tensordot/MatMul"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/v/Tensordot/concat_2"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: -1
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/split_heads/split_last_dimension/Shape"
      op: "Shape"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/q/Tensordot"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/split_heads/split_last_dimension/strided_slice/stack"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_t"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/split_heads/split_last_dimension/strided_slice/stack_1"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_t"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/split_heads/split_last_dimension/strided_slice/stack_2"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_t"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/split_heads/split_last_dimension/strided_slice"
      op: "StridedSlice"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/split_heads/split_last_dimension/Shape"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/split_heads/split_last_dimension/strided_slice/stack"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/split_heads/split_last_dimension/strided_slice/stack_1"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/split_heads/split_last_dimension/strided_slice/stack_2"
      attr {
        key: "Index"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "shrink_axis_mask"
        value {
          i: 1
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/split_heads/split_last_dimension/strided_slice_1/stack"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_t"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/split_heads/split_last_dimension/strided_slice_1/stack_1"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_t"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 2
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/split_heads/split_last_dimension/strided_slice_1/stack_2"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_t"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/split_heads/split_last_dimension/strided_slice_1"
      op: "StridedSlice"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/split_heads/split_last_dimension/Shape"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/split_heads/split_last_dimension/strided_slice_1/stack"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/split_heads/split_last_dimension/strided_slice_1/stack_1"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/split_heads/split_last_dimension/strided_slice_1/stack_2"
      attr {
        key: "Index"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "shrink_axis_mask"
        value {
          i: 1
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/split_heads/split_last_dimension/Reshape/shape/2"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_t"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 4
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/split_heads/split_last_dimension/Reshape/shape/3"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_t"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 32
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/split_heads/split_last_dimension/Reshape/shape"
      op: "Pack"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/split_heads/split_last_dimension/strided_slice"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/split_heads/split_last_dimension/strided_slice_1"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/split_heads/split_last_dimension/Reshape/shape/2"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/split_heads/split_last_dimension/Reshape/shape/3"
      attr {
        key: "N"
        value {
          i: 4
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 4
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/split_heads/split_last_dimension/Reshape"
      op: "Reshape"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/q/Tensordot"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/split_heads/split_last_dimension/Reshape/shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: -1
              }
              dim {
                size: 4
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/split_heads/transpose/perm"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_t"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 4
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 4
              }
            }
            tensor_content: "\000\000\000\000\002\000\000\000\001\000\000\000\003\000\000\000"
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/split_heads/transpose"
      op: "Transpose"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/split_heads/split_last_dimension/Reshape"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/split_heads/transpose/perm"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 4
              }
              dim {
                size: -1
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/split_heads_1/split_last_dimension/Shape"
      op: "Shape"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/k/Tensordot"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/split_heads_1/split_last_dimension/strided_slice/stack"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_t"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/split_heads_1/split_last_dimension/strided_slice/stack_1"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_t"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/split_heads_1/split_last_dimension/strided_slice/stack_2"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_t"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/split_heads_1/split_last_dimension/strided_slice"
      op: "StridedSlice"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/split_heads_1/split_last_dimension/Shape"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/split_heads_1/split_last_dimension/strided_slice/stack"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/split_heads_1/split_last_dimension/strided_slice/stack_1"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/split_heads_1/split_last_dimension/strided_slice/stack_2"
      attr {
        key: "Index"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "shrink_axis_mask"
        value {
          i: 1
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/split_heads_1/split_last_dimension/strided_slice_1/stack"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_t"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/split_heads_1/split_last_dimension/strided_slice_1/stack_1"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_t"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 2
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/split_heads_1/split_last_dimension/strided_slice_1/stack_2"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_t"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/split_heads_1/split_last_dimension/strided_slice_1"
      op: "StridedSlice"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/split_heads_1/split_last_dimension/Shape"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/split_heads_1/split_last_dimension/strided_slice_1/stack"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/split_heads_1/split_last_dimension/strided_slice_1/stack_1"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/split_heads_1/split_last_dimension/strided_slice_1/stack_2"
      attr {
        key: "Index"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "shrink_axis_mask"
        value {
          i: 1
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/split_heads_1/split_last_dimension/Reshape/shape/2"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_t"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 4
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/split_heads_1/split_last_dimension/Reshape/shape/3"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_t"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 32
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/split_heads_1/split_last_dimension/Reshape/shape"
      op: "Pack"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/split_heads_1/split_last_dimension/strided_slice"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/split_heads_1/split_last_dimension/strided_slice_1"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/split_heads_1/split_last_dimension/Reshape/shape/2"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/split_heads_1/split_last_dimension/Reshape/shape/3"
      attr {
        key: "N"
        value {
          i: 4
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 4
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/split_heads_1/split_last_dimension/Reshape"
      op: "Reshape"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/k/Tensordot"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/split_heads_1/split_last_dimension/Reshape/shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: -1
              }
              dim {
                size: 4
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/split_heads_1/transpose/perm"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_t"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 4
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 4
              }
            }
            tensor_content: "\000\000\000\000\002\000\000\000\001\000\000\000\003\000\000\000"
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/split_heads_1/transpose"
      op: "Transpose"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/split_heads_1/split_last_dimension/Reshape"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/split_heads_1/transpose/perm"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 4
              }
              dim {
                size: -1
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/split_heads_2/split_last_dimension/Shape"
      op: "Shape"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/v/Tensordot"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/split_heads_2/split_last_dimension/strided_slice/stack"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_t"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/split_heads_2/split_last_dimension/strided_slice/stack_1"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_t"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/split_heads_2/split_last_dimension/strided_slice/stack_2"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_t"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/split_heads_2/split_last_dimension/strided_slice"
      op: "StridedSlice"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/split_heads_2/split_last_dimension/Shape"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/split_heads_2/split_last_dimension/strided_slice/stack"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/split_heads_2/split_last_dimension/strided_slice/stack_1"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/split_heads_2/split_last_dimension/strided_slice/stack_2"
      attr {
        key: "Index"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "shrink_axis_mask"
        value {
          i: 1
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/split_heads_2/split_last_dimension/strided_slice_1/stack"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_t"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/split_heads_2/split_last_dimension/strided_slice_1/stack_1"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_t"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 2
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/split_heads_2/split_last_dimension/strided_slice_1/stack_2"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_t"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/split_heads_2/split_last_dimension/strided_slice_1"
      op: "StridedSlice"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/split_heads_2/split_last_dimension/Shape"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/split_heads_2/split_last_dimension/strided_slice_1/stack"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/split_heads_2/split_last_dimension/strided_slice_1/stack_1"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/split_heads_2/split_last_dimension/strided_slice_1/stack_2"
      attr {
        key: "Index"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "shrink_axis_mask"
        value {
          i: 1
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/split_heads_2/split_last_dimension/Reshape/shape/2"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_t"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 4
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/split_heads_2/split_last_dimension/Reshape/shape/3"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_t"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 32
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/split_heads_2/split_last_dimension/Reshape/shape"
      op: "Pack"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/split_heads_2/split_last_dimension/strided_slice"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/split_heads_2/split_last_dimension/strided_slice_1"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/split_heads_2/split_last_dimension/Reshape/shape/2"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/split_heads_2/split_last_dimension/Reshape/shape/3"
      attr {
        key: "N"
        value {
          i: 4
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 4
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/split_heads_2/split_last_dimension/Reshape"
      op: "Reshape"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/v/Tensordot"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/split_heads_2/split_last_dimension/Reshape/shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: -1
              }
              dim {
                size: 4
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/split_heads_2/transpose/perm"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_t"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 4
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 4
              }
            }
            tensor_content: "\000\000\000\000\002\000\000\000\001\000\000\000\003\000\000\000"
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/split_heads_2/transpose"
      op: "Transpose"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/split_heads_2/split_last_dimension/Reshape"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/split_heads_2/transpose/perm"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 4
              }
              dim {
                size: -1
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/mul/y"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_t"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.1767766922712326
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/mul"
      op: "Mul"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/split_heads/transpose"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/mul/y"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 4
              }
              dim {
                size: -1
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/dot_product_attention/MatMul"
      op: "BatchMatMul"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/mul"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/split_heads_1/transpose"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 4
              }
              dim {
                size: -1
              }
              dim {
                size: -1
              }
            }
          }
        }
      }
      attr {
        key: "adj_y"
        value {
          b: true
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/dot_product_attention/add"
      op: "Add"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/dot_product_attention/MatMul"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/attention_bias_ignore_padding/ExpandDims_1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 4
              }
              dim {
                size: -1
              }
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/dot_product_attention/attention_weights"
      op: "Softmax"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/dot_product_attention/add"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 4
              }
              dim {
                size: -1
              }
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/dot_product_attention/Shape"
      op: "Shape"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/dot_product_attention/attention_weights"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 4
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/dot_product_attention/strided_slice/stack"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_t"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/dot_product_attention/strided_slice/stack_1"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_t"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/dot_product_attention/strided_slice/stack_2"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_t"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/dot_product_attention/strided_slice"
      op: "StridedSlice"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/dot_product_attention/Shape"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/dot_product_attention/strided_slice/stack"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/dot_product_attention/strided_slice/stack_1"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/dot_product_attention/strided_slice/stack_2"
      attr {
        key: "Index"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "shrink_axis_mask"
        value {
          i: 1
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/dot_product_attention/strided_slice_1/stack"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_t"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 2
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/dot_product_attention/strided_slice_1/stack_1"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_t"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 3
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/dot_product_attention/strided_slice_1/stack_2"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_t"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/dot_product_attention/strided_slice_1"
      op: "StridedSlice"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/dot_product_attention/Shape"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/dot_product_attention/strided_slice_1/stack"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/dot_product_attention/strided_slice_1/stack_1"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/dot_product_attention/strided_slice_1/stack_2"
      attr {
        key: "Index"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "shrink_axis_mask"
        value {
          i: 1
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/dot_product_attention/strided_slice_2/stack"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_t"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 3
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/dot_product_attention/strided_slice_2/stack_1"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_t"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 4
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/dot_product_attention/strided_slice_2/stack_2"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_t"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/dot_product_attention/strided_slice_2"
      op: "StridedSlice"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/dot_product_attention/Shape"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/dot_product_attention/strided_slice_2/stack"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/dot_product_attention/strided_slice_2/stack_1"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/dot_product_attention/strided_slice_2/stack_2"
      attr {
        key: "Index"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "shrink_axis_mask"
        value {
          i: 1
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/dot_product_attention/transpose/perm"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_t"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 4
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 4
              }
            }
            tensor_content: "\000\000\000\000\002\000\000\000\003\000\000\000\001\000\000\000"
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/dot_product_attention/transpose"
      op: "Transpose"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/dot_product_attention/attention_weights"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/dot_product_attention/transpose/perm"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: -1
              }
              dim {
                size: -1
              }
              dim {
                size: 4
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/dot_product_attention/Pow/y"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_t"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.20000000298023224
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/dot_product_attention/Pow"
      op: "Pow"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/dot_product_attention/transpose"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/dot_product_attention/Pow/y"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: -1
              }
              dim {
                size: -1
              }
              dim {
                size: 4
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/dot_product_attention/FloorMod/x"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_t"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: -4
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/dot_product_attention/FloorMod/y"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_t"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 3
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/dot_product_attention/FloorMod"
      op: "FloorMod"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/dot_product_attention/FloorMod/x"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/dot_product_attention/FloorMod/y"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/dot_product_attention/Pad/paddings/3/0"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_t"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/dot_product_attention/Pad/paddings/3"
      op: "Pack"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/dot_product_attention/Pad/paddings/3/0"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/dot_product_attention/FloorMod"
      attr {
        key: "N"
        value {
          i: 2
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/dot_product_attention/Pad/paddings/0_1"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_t"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 2
              }
            }
            tensor_content: "\000\000\000\000\000\000\000\000"
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/dot_product_attention/Pad/paddings/1_1"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_t"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 2
              }
            }
            tensor_content: "\000\000\000\000\000\000\000\000"
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/dot_product_attention/Pad/paddings/2_1"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_t"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 2
              }
            }
            tensor_content: "\000\000\000\000\000\000\000\000"
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/dot_product_attention/Pad/paddings"
      op: "Pack"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/dot_product_attention/Pad/paddings/0_1"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/dot_product_attention/Pad/paddings/1_1"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/dot_product_attention/Pad/paddings/2_1"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/dot_product_attention/Pad/paddings/3"
      attr {
        key: "N"
        value {
          i: 4
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 4
              }
              dim {
                size: 2
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/dot_product_attention/Pad"
      op: "Pad"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/dot_product_attention/Pow"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/dot_product_attention/Pad/paddings"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: -1
              }
              dim {
                size: -1
              }
              dim {
                size: 6
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/dot_product_attention/split_last_dimension/Shape"
      op: "Shape"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/dot_product_attention/Pad"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 4
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/dot_product_attention/split_last_dimension/strided_slice/stack"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_t"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/dot_product_attention/split_last_dimension/strided_slice/stack_1"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_t"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/dot_product_attention/split_last_dimension/strided_slice/stack_2"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_t"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/dot_product_attention/split_last_dimension/strided_slice"
      op: "StridedSlice"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/dot_product_attention/split_last_dimension/Shape"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/dot_product_attention/split_last_dimension/strided_slice/stack"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/dot_product_attention/split_last_dimension/strided_slice/stack_1"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/dot_product_attention/split_last_dimension/strided_slice/stack_2"
      attr {
        key: "Index"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "shrink_axis_mask"
        value {
          i: 1
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/dot_product_attention/split_last_dimension/strided_slice_1/stack"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_t"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/dot_product_attention/split_last_dimension/strided_slice_1/stack_1"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_t"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 2
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/dot_product_attention/split_last_dimension/strided_slice_1/stack_2"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_t"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/dot_product_attention/split_last_dimension/strided_slice_1"
      op: "StridedSlice"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/dot_product_attention/split_last_dimension/Shape"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/dot_product_attention/split_last_dimension/strided_slice_1/stack"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/dot_product_attention/split_last_dimension/strided_slice_1/stack_1"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/dot_product_attention/split_last_dimension/strided_slice_1/stack_2"
      attr {
        key: "Index"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "shrink_axis_mask"
        value {
          i: 1
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/dot_product_attention/split_last_dimension/strided_slice_2/stack"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_t"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 2
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/dot_product_attention/split_last_dimension/strided_slice_2/stack_1"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_t"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 3
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/dot_product_attention/split_last_dimension/strided_slice_2/stack_2"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_t"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/dot_product_attention/split_last_dimension/strided_slice_2"
      op: "StridedSlice"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/dot_product_attention/split_last_dimension/Shape"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/dot_product_attention/split_last_dimension/strided_slice_2/stack"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/dot_product_attention/split_last_dimension/strided_slice_2/stack_1"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/dot_product_attention/split_last_dimension/strided_slice_2/stack_2"
      attr {
        key: "Index"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "shrink_axis_mask"
        value {
          i: 1
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/dot_product_attention/split_last_dimension/Reshape/shape/3"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_t"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 3
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/dot_product_attention/split_last_dimension/Reshape/shape/4"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_t"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 2
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/dot_product_attention/split_last_dimension/Reshape/shape"
      op: "Pack"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/dot_product_attention/split_last_dimension/strided_slice"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/dot_product_attention/split_last_dimension/strided_slice_1"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/dot_product_attention/split_last_dimension/strided_slice_2"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/dot_product_attention/split_last_dimension/Reshape/shape/3"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/dot_product_attention/split_last_dimension/Reshape/shape/4"
      attr {
        key: "N"
        value {
          i: 5
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 5
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/dot_product_attention/split_last_dimension/Reshape"
      op: "Reshape"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/dot_product_attention/Pad"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/dot_product_attention/split_last_dimension/Reshape/shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: -1
              }
              dim {
                size: -1
              }
              dim {
                size: 3
              }
              dim {
                size: 2
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/dot_product_attention/Max/reduction_indices"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_t"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 4
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/dot_product_attention/Max"
      op: "Max"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/dot_product_attention/split_last_dimension/Reshape"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/dot_product_attention/Max/reduction_indices"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: -1
              }
              dim {
                size: -1
              }
              dim {
                size: 3
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/dot_product_attention/attention/tag"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_t"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
            }
            string_val: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/dot_product_attention/attention"
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/dot_product_attention/attention"
      op: "ImageSummary"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/dot_product_attention/attention/tag"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/dot_product_attention/Max"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "max_images"
        value {
          i: 1
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/dot_product_attention/MatMul_1"
      op: "BatchMatMul"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/dot_product_attention/attention_weights"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/split_heads_2/transpose"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 4
              }
              dim {
                size: -1
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/combine_heads/transpose/perm"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_t"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 4
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 4
              }
            }
            tensor_content: "\000\000\000\000\002\000\000\000\001\000\000\000\003\000\000\000"
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/combine_heads/transpose"
      op: "Transpose"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/dot_product_attention/MatMul_1"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/combine_heads/transpose/perm"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: -1
              }
              dim {
                size: 4
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/combine_heads/combine_last_two_dimensions/Shape"
      op: "Shape"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/combine_heads/transpose"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 4
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/combine_heads/combine_last_two_dimensions/strided_slice/stack"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_t"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/combine_heads/combine_last_two_dimensions/strided_slice/stack_1"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_t"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/combine_heads/combine_last_two_dimensions/strided_slice/stack_2"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_t"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/combine_heads/combine_last_two_dimensions/strided_slice"
      op: "StridedSlice"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/combine_heads/combine_last_two_dimensions/Shape"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/combine_heads/combine_last_two_dimensions/strided_slice/stack"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/combine_heads/combine_last_two_dimensions/strided_slice/stack_1"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/combine_heads/combine_last_two_dimensions/strided_slice/stack_2"
      attr {
        key: "Index"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "shrink_axis_mask"
        value {
          i: 1
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/combine_heads/combine_last_two_dimensions/strided_slice_1/stack"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_t"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/combine_heads/combine_last_two_dimensions/strided_slice_1/stack_1"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_t"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 2
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/combine_heads/combine_last_two_dimensions/strided_slice_1/stack_2"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_t"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/combine_heads/combine_last_two_dimensions/strided_slice_1"
      op: "StridedSlice"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/combine_heads/combine_last_two_dimensions/Shape"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/combine_heads/combine_last_two_dimensions/strided_slice_1/stack"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/combine_heads/combine_last_two_dimensions/strided_slice_1/stack_1"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/combine_heads/combine_last_two_dimensions/strided_slice_1/stack_2"
      attr {
        key: "Index"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "shrink_axis_mask"
        value {
          i: 1
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/combine_heads/combine_last_two_dimensions/Reshape/shape/2"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_t"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 128
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/combine_heads/combine_last_two_dimensions/Reshape/shape"
      op: "Pack"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/combine_heads/combine_last_two_dimensions/strided_slice"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/combine_heads/combine_last_two_dimensions/strided_slice_1"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/combine_heads/combine_last_two_dimensions/Reshape/shape/2"
      attr {
        key: "N"
        value {
          i: 3
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/combine_heads/combine_last_two_dimensions/Reshape"
      op: "Reshape"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/combine_heads/transpose"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/combine_heads/combine_last_two_dimensions/Reshape/shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: -1
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/body/code_embedding/encoder/layer_1/self_attention/multihead_attention/output_transform/kernel/Initializer/random_uniform/shape"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@cs_similarity_transformer/body/code_embedding/encoder/layer_1/self_attention/multihead_attention/output_transform/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 2
              }
            }
            tensor_content: "\200\000\000\000\200\000\000\000"
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/body/code_embedding/encoder/layer_1/self_attention/multihead_attention/output_transform/kernel/Initializer/random_uniform/min"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@cs_similarity_transformer/body/code_embedding/encoder/layer_1/self_attention/multihead_attention/output_transform/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: -0.1530931144952774
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/body/code_embedding/encoder/layer_1/self_attention/multihead_attention/output_transform/kernel/Initializer/random_uniform/max"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@cs_similarity_transformer/body/code_embedding/encoder/layer_1/self_attention/multihead_attention/output_transform/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.1530931144952774
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/body/code_embedding/encoder/layer_1/self_attention/multihead_attention/output_transform/kernel/Initializer/random_uniform/RandomUniform"
      op: "RandomUniform"
      input: "cs_similarity_transformer/body/code_embedding/encoder/layer_1/self_attention/multihead_attention/output_transform/kernel/Initializer/random_uniform/shape"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@cs_similarity_transformer/body/code_embedding/encoder/layer_1/self_attention/multihead_attention/output_transform/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "cs_similarity_transformer/body/code_embedding/encoder/layer_1/self_attention/multihead_attention/output_transform/kernel/Initializer/random_uniform/sub"
      op: "Sub"
      input: "cs_similarity_transformer/body/code_embedding/encoder/layer_1/self_attention/multihead_attention/output_transform/kernel/Initializer/random_uniform/max"
      input: "cs_similarity_transformer/body/code_embedding/encoder/layer_1/self_attention/multihead_attention/output_transform/kernel/Initializer/random_uniform/min"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@cs_similarity_transformer/body/code_embedding/encoder/layer_1/self_attention/multihead_attention/output_transform/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/body/code_embedding/encoder/layer_1/self_attention/multihead_attention/output_transform/kernel/Initializer/random_uniform/mul"
      op: "Mul"
      input: "cs_similarity_transformer/body/code_embedding/encoder/layer_1/self_attention/multihead_attention/output_transform/kernel/Initializer/random_uniform/RandomUniform"
      input: "cs_similarity_transformer/body/code_embedding/encoder/layer_1/self_attention/multihead_attention/output_transform/kernel/Initializer/random_uniform/sub"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@cs_similarity_transformer/body/code_embedding/encoder/layer_1/self_attention/multihead_attention/output_transform/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/body/code_embedding/encoder/layer_1/self_attention/multihead_attention/output_transform/kernel/Initializer/random_uniform"
      op: "Add"
      input: "cs_similarity_transformer/body/code_embedding/encoder/layer_1/self_attention/multihead_attention/output_transform/kernel/Initializer/random_uniform/mul"
      input: "cs_similarity_transformer/body/code_embedding/encoder/layer_1/self_attention/multihead_attention/output_transform/kernel/Initializer/random_uniform/min"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@cs_similarity_transformer/body/code_embedding/encoder/layer_1/self_attention/multihead_attention/output_transform/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/body/code_embedding/encoder/layer_1/self_attention/multihead_attention/output_transform/kernel"
      op: "VarHandleOp"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@cs_similarity_transformer/body/code_embedding/encoder/layer_1/self_attention/multihead_attention/output_transform/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 128
            }
            dim {
              size: 128
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: "cs_similarity_transformer/body/code_embedding/encoder/layer_1/self_attention/multihead_attention/output_transform/kernel"
        }
      }
    }
    node {
      name: "cs_similarity_transformer/body/code_embedding/encoder/layer_1/self_attention/multihead_attention/output_transform/kernel/IsInitialized/VarIsInitializedOp"
      op: "VarIsInitializedOp"
      input: "cs_similarity_transformer/body/code_embedding/encoder/layer_1/self_attention/multihead_attention/output_transform/kernel"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/body/code_embedding/encoder/layer_1/self_attention/multihead_attention/output_transform/kernel/Assign"
      op: "AssignVariableOp"
      input: "cs_similarity_transformer/body/code_embedding/encoder/layer_1/self_attention/multihead_attention/output_transform/kernel"
      input: "cs_similarity_transformer/body/code_embedding/encoder/layer_1/self_attention/multihead_attention/output_transform/kernel/Initializer/random_uniform"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@cs_similarity_transformer/body/code_embedding/encoder/layer_1/self_attention/multihead_attention/output_transform/kernel"
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "cs_similarity_transformer/body/code_embedding/encoder/layer_1/self_attention/multihead_attention/output_transform/kernel/Read/ReadVariableOp"
      op: "ReadVariableOp"
      input: "cs_similarity_transformer/body/code_embedding/encoder/layer_1/self_attention/multihead_attention/output_transform/kernel"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@cs_similarity_transformer/body/code_embedding/encoder/layer_1/self_attention/multihead_attention/output_transform/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "Read_34/ReadVariableOp"
      op: "ReadVariableOp"
      input: "Read_34/ReadVariableOp/Switch:1"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "Read_34/ReadVariableOp/Switch"
      op: "Switch"
      input: "cs_similarity_transformer/body/code_embedding/encoder/layer_1/self_attention/multihead_attention/output_transform/kernel"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/pred_id"
      attr {
        key: "T"
        value {
          type: DT_RESOURCE
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@cs_similarity_transformer/body/code_embedding/encoder/layer_1/self_attention/multihead_attention/output_transform/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
            shape {
            }
          }
        }
      }
    }
    node {
      name: "Identity_34"
      op: "Identity"
      input: "Read_34/ReadVariableOp"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/output_transform/Tensordot/Shape"
      op: "Shape"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/combine_heads/combine_last_two_dimensions/Reshape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/output_transform/Tensordot/Rank"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_t"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 3
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/output_transform/Tensordot/axes"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_t"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 2
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/output_transform/Tensordot/GreaterEqual/y"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_t"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/output_transform/Tensordot/GreaterEqual"
      op: "GreaterEqual"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/output_transform/Tensordot/axes"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/output_transform/Tensordot/GreaterEqual/y"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/output_transform/Tensordot/Cast"
      op: "Cast"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/output_transform/Tensordot/GreaterEqual"
      attr {
        key: "DstT"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "SrcT"
        value {
          type: DT_BOOL
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/output_transform/Tensordot/mul"
      op: "Mul"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/output_transform/Tensordot/Cast"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/output_transform/Tensordot/axes"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/output_transform/Tensordot/Less/y"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_t"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/output_transform/Tensordot/Less"
      op: "Less"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/output_transform/Tensordot/axes"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/output_transform/Tensordot/Less/y"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/output_transform/Tensordot/Cast_1"
      op: "Cast"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/output_transform/Tensordot/Less"
      attr {
        key: "DstT"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "SrcT"
        value {
          type: DT_BOOL
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/output_transform/Tensordot/add"
      op: "Add"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/output_transform/Tensordot/axes"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/output_transform/Tensordot/Rank"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/output_transform/Tensordot/mul_1"
      op: "Mul"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/output_transform/Tensordot/Cast_1"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/output_transform/Tensordot/add"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/output_transform/Tensordot/add_1"
      op: "Add"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/output_transform/Tensordot/mul"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/output_transform/Tensordot/mul_1"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/output_transform/Tensordot/range/start"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_t"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/output_transform/Tensordot/range/delta"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_t"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/output_transform/Tensordot/range"
      op: "Range"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/output_transform/Tensordot/range/start"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/output_transform/Tensordot/Rank"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/output_transform/Tensordot/range/delta"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/output_transform/Tensordot/ListDiff"
      op: "ListDiff"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/output_transform/Tensordot/range"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/output_transform/Tensordot/add_1"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/output_transform/Tensordot/GatherV2/axis"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_t"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/output_transform/Tensordot/GatherV2"
      op: "GatherV2"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/output_transform/Tensordot/Shape"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/output_transform/Tensordot/ListDiff"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/output_transform/Tensordot/GatherV2/axis"
      attr {
        key: "Taxis"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "Tindices"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "Tparams"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/output_transform/Tensordot/GatherV2_1/axis"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_t"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/output_transform/Tensordot/GatherV2_1"
      op: "GatherV2"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/output_transform/Tensordot/Shape"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/output_transform/Tensordot/add_1"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/output_transform/Tensordot/GatherV2_1/axis"
      attr {
        key: "Taxis"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "Tindices"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "Tparams"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/output_transform/Tensordot/Const"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_t"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/output_transform/Tensordot/Prod"
      op: "Prod"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/output_transform/Tensordot/GatherV2"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/output_transform/Tensordot/Const"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/output_transform/Tensordot/Const_1"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_t"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/output_transform/Tensordot/Prod_1"
      op: "Prod"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/output_transform/Tensordot/GatherV2_1"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/output_transform/Tensordot/Const_1"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/output_transform/Tensordot/concat/axis"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_t"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/output_transform/Tensordot/concat"
      op: "ConcatV2"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/output_transform/Tensordot/GatherV2_1"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/output_transform/Tensordot/GatherV2"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/output_transform/Tensordot/concat/axis"
      attr {
        key: "N"
        value {
          i: 2
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/output_transform/Tensordot/concat_1/axis"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_t"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/output_transform/Tensordot/concat_1"
      op: "ConcatV2"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/output_transform/Tensordot/ListDiff"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/output_transform/Tensordot/add_1"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/output_transform/Tensordot/concat_1/axis"
      attr {
        key: "N"
        value {
          i: 2
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/output_transform/Tensordot/stack"
      op: "Pack"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/output_transform/Tensordot/Prod"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/output_transform/Tensordot/Prod_1"
      attr {
        key: "N"
        value {
          i: 2
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/output_transform/Tensordot/transpose"
      op: "Transpose"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/combine_heads/combine_last_two_dimensions/Reshape"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/output_transform/Tensordot/concat_1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: -1
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/output_transform/Tensordot/Reshape"
      op: "Reshape"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/output_transform/Tensordot/transpose"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/output_transform/Tensordot/stack"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/output_transform/Tensordot/transpose_1/perm"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_t"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 2
              }
            }
            tensor_content: "\000\000\000\000\001\000\000\000"
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/output_transform/Tensordot/transpose_1"
      op: "Transpose"
      input: "Identity_34"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/output_transform/Tensordot/transpose_1/perm"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/output_transform/Tensordot/Reshape_1/shape"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_t"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 2
              }
            }
            tensor_content: "\200\000\000\000\200\000\000\000"
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/output_transform/Tensordot/Reshape_1"
      op: "Reshape"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/output_transform/Tensordot/transpose_1"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/output_transform/Tensordot/Reshape_1/shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/output_transform/Tensordot/MatMul"
      op: "MatMul"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/output_transform/Tensordot/Reshape"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/output_transform/Tensordot/Reshape_1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/output_transform/Tensordot/Const_2"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_t"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 128
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/output_transform/Tensordot/concat_2/axis"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_t"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/output_transform/Tensordot/concat_2"
      op: "ConcatV2"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/output_transform/Tensordot/GatherV2"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/output_transform/Tensordot/Const_2"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/output_transform/Tensordot/concat_2/axis"
      attr {
        key: "N"
        value {
          i: 2
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/output_transform/Tensordot"
      op: "Reshape"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/output_transform/Tensordot/MatMul"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/output_transform/Tensordot/concat_2"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: -1
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/layer_postprocess/add"
      op: "Add"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/output_transform/Tensordot"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/ffn/layer_postprocess/add"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: -1
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/ffn/layer_prepostprocess/Shape"
      op: "Shape"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/layer_postprocess/add"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/ffn/layer_prepostprocess/strided_slice/stack"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_t"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/ffn/layer_prepostprocess/strided_slice/stack_1"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_t"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/ffn/layer_prepostprocess/strided_slice/stack_2"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_t"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/ffn/layer_prepostprocess/strided_slice"
      op: "StridedSlice"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/ffn/layer_prepostprocess/Shape"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/ffn/layer_prepostprocess/strided_slice/stack"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/ffn/layer_prepostprocess/strided_slice/stack_1"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/ffn/layer_prepostprocess/strided_slice/stack_2"
      attr {
        key: "Index"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "shrink_axis_mask"
        value {
          i: 1
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/ffn/layer_prepostprocess/strided_slice_1/stack"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_t"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/ffn/layer_prepostprocess/strided_slice_1/stack_1"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_t"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 2
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/ffn/layer_prepostprocess/strided_slice_1/stack_2"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_t"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/ffn/layer_prepostprocess/strided_slice_1"
      op: "StridedSlice"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/ffn/layer_prepostprocess/Shape"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/ffn/layer_prepostprocess/strided_slice_1/stack"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/ffn/layer_prepostprocess/strided_slice_1/stack_1"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/ffn/layer_prepostprocess/strided_slice_1/stack_2"
      attr {
        key: "Index"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "shrink_axis_mask"
        value {
          i: 1
        }
      }
    }
    node {
      name: "cs_similarity_transformer/body/code_embedding/encoder/layer_1/ffn/layer_prepostprocess/layer_norm/layer_norm_scale/Initializer/ones"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@cs_similarity_transformer/body/code_embedding/encoder/layer_1/ffn/layer_prepostprocess/layer_norm/layer_norm_scale"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
              dim {
                size: 128
              }
            }
            float_val: 1.0
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/body/code_embedding/encoder/layer_1/ffn/layer_prepostprocess/layer_norm/layer_norm_scale"
      op: "VarHandleOp"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@cs_similarity_transformer/body/code_embedding/encoder/layer_1/ffn/layer_prepostprocess/layer_norm/layer_norm_scale"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 128
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: "cs_similarity_transformer/body/code_embedding/encoder/layer_1/ffn/layer_prepostprocess/layer_norm/layer_norm_scale"
        }
      }
    }
    node {
      name: "cs_similarity_transformer/body/code_embedding/encoder/layer_1/ffn/layer_prepostprocess/layer_norm/layer_norm_scale/IsInitialized/VarIsInitializedOp"
      op: "VarIsInitializedOp"
      input: "cs_similarity_transformer/body/code_embedding/encoder/layer_1/ffn/layer_prepostprocess/layer_norm/layer_norm_scale"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/body/code_embedding/encoder/layer_1/ffn/layer_prepostprocess/layer_norm/layer_norm_scale/Assign"
      op: "AssignVariableOp"
      input: "cs_similarity_transformer/body/code_embedding/encoder/layer_1/ffn/layer_prepostprocess/layer_norm/layer_norm_scale"
      input: "cs_similarity_transformer/body/code_embedding/encoder/layer_1/ffn/layer_prepostprocess/layer_norm/layer_norm_scale/Initializer/ones"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@cs_similarity_transformer/body/code_embedding/encoder/layer_1/ffn/layer_prepostprocess/layer_norm/layer_norm_scale"
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "cs_similarity_transformer/body/code_embedding/encoder/layer_1/ffn/layer_prepostprocess/layer_norm/layer_norm_scale/Read/ReadVariableOp"
      op: "ReadVariableOp"
      input: "cs_similarity_transformer/body/code_embedding/encoder/layer_1/ffn/layer_prepostprocess/layer_norm/layer_norm_scale"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@cs_similarity_transformer/body/code_embedding/encoder/layer_1/ffn/layer_prepostprocess/layer_norm/layer_norm_scale"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "Read_35/ReadVariableOp"
      op: "ReadVariableOp"
      input: "Read_35/ReadVariableOp/Switch:1"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "Read_35/ReadVariableOp/Switch"
      op: "Switch"
      input: "cs_similarity_transformer/body/code_embedding/encoder/layer_1/ffn/layer_prepostprocess/layer_norm/layer_norm_scale"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/pred_id"
      attr {
        key: "T"
        value {
          type: DT_RESOURCE
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@cs_similarity_transformer/body/code_embedding/encoder/layer_1/ffn/layer_prepostprocess/layer_norm/layer_norm_scale"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
            shape {
            }
          }
        }
      }
    }
    node {
      name: "Identity_35"
      op: "Identity"
      input: "Read_35/ReadVariableOp"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/body/code_embedding/encoder/layer_1/ffn/layer_prepostprocess/layer_norm/layer_norm_bias/Initializer/zeros"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@cs_similarity_transformer/body/code_embedding/encoder/layer_1/ffn/layer_prepostprocess/layer_norm/layer_norm_bias"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
              dim {
                size: 128
              }
            }
            float_val: 0.0
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/body/code_embedding/encoder/layer_1/ffn/layer_prepostprocess/layer_norm/layer_norm_bias"
      op: "VarHandleOp"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@cs_similarity_transformer/body/code_embedding/encoder/layer_1/ffn/layer_prepostprocess/layer_norm/layer_norm_bias"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 128
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: "cs_similarity_transformer/body/code_embedding/encoder/layer_1/ffn/layer_prepostprocess/layer_norm/layer_norm_bias"
        }
      }
    }
    node {
      name: "cs_similarity_transformer/body/code_embedding/encoder/layer_1/ffn/layer_prepostprocess/layer_norm/layer_norm_bias/IsInitialized/VarIsInitializedOp"
      op: "VarIsInitializedOp"
      input: "cs_similarity_transformer/body/code_embedding/encoder/layer_1/ffn/layer_prepostprocess/layer_norm/layer_norm_bias"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/body/code_embedding/encoder/layer_1/ffn/layer_prepostprocess/layer_norm/layer_norm_bias/Assign"
      op: "AssignVariableOp"
      input: "cs_similarity_transformer/body/code_embedding/encoder/layer_1/ffn/layer_prepostprocess/layer_norm/layer_norm_bias"
      input: "cs_similarity_transformer/body/code_embedding/encoder/layer_1/ffn/layer_prepostprocess/layer_norm/layer_norm_bias/Initializer/zeros"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@cs_similarity_transformer/body/code_embedding/encoder/layer_1/ffn/layer_prepostprocess/layer_norm/layer_norm_bias"
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "cs_similarity_transformer/body/code_embedding/encoder/layer_1/ffn/layer_prepostprocess/layer_norm/layer_norm_bias/Read/ReadVariableOp"
      op: "ReadVariableOp"
      input: "cs_similarity_transformer/body/code_embedding/encoder/layer_1/ffn/layer_prepostprocess/layer_norm/layer_norm_bias"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@cs_similarity_transformer/body/code_embedding/encoder/layer_1/ffn/layer_prepostprocess/layer_norm/layer_norm_bias"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "Read_36/ReadVariableOp"
      op: "ReadVariableOp"
      input: "Read_36/ReadVariableOp/Switch:1"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "Read_36/ReadVariableOp/Switch"
      op: "Switch"
      input: "cs_similarity_transformer/body/code_embedding/encoder/layer_1/ffn/layer_prepostprocess/layer_norm/layer_norm_bias"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/pred_id"
      attr {
        key: "T"
        value {
          type: DT_RESOURCE
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@cs_similarity_transformer/body/code_embedding/encoder/layer_1/ffn/layer_prepostprocess/layer_norm/layer_norm_bias"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
            shape {
            }
          }
        }
      }
    }
    node {
      name: "Identity_36"
      op: "Identity"
      input: "Read_36/ReadVariableOp"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/ffn/layer_prepostprocess/layer_norm/Const"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_t"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 9.999999974752427e-07
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/ffn/layer_prepostprocess/layer_norm/Mean/reduction_indices"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_t"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: -1
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/ffn/layer_prepostprocess/layer_norm/Mean"
      op: "Mean"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/layer_postprocess/add"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/ffn/layer_prepostprocess/layer_norm/Mean/reduction_indices"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: true
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/ffn/layer_prepostprocess/layer_norm/sub"
      op: "Sub"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/layer_postprocess/add"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/ffn/layer_prepostprocess/layer_norm/Mean"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: -1
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/ffn/layer_prepostprocess/layer_norm/Square"
      op: "Square"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/ffn/layer_prepostprocess/layer_norm/sub"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: -1
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/ffn/layer_prepostprocess/layer_norm/Mean_1/reduction_indices"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_t"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: -1
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/ffn/layer_prepostprocess/layer_norm/Mean_1"
      op: "Mean"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/ffn/layer_prepostprocess/layer_norm/Square"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/ffn/layer_prepostprocess/layer_norm/Mean_1/reduction_indices"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: true
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/ffn/layer_prepostprocess/layer_norm/sub_1"
      op: "Sub"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/layer_postprocess/add"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/ffn/layer_prepostprocess/layer_norm/Mean"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: -1
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/ffn/layer_prepostprocess/layer_norm/add"
      op: "Add"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/ffn/layer_prepostprocess/layer_norm/Mean_1"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/ffn/layer_prepostprocess/layer_norm/Const"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/ffn/layer_prepostprocess/layer_norm/Rsqrt"
      op: "Rsqrt"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/ffn/layer_prepostprocess/layer_norm/add"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/ffn/layer_prepostprocess/layer_norm/mul"
      op: "Mul"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/ffn/layer_prepostprocess/layer_norm/sub_1"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/ffn/layer_prepostprocess/layer_norm/Rsqrt"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: -1
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/ffn/layer_prepostprocess/layer_norm/mul_1"
      op: "Mul"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/ffn/layer_prepostprocess/layer_norm/mul"
      input: "Identity_35"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: -1
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/ffn/layer_prepostprocess/layer_norm/add_1"
      op: "Add"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/ffn/layer_prepostprocess/layer_norm/mul_1"
      input: "Identity_36"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: -1
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/ffn/Shape"
      op: "Shape"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/ffn/layer_prepostprocess/layer_norm/add_1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/ffn/strided_slice/stack"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_t"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/ffn/strided_slice/stack_1"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_t"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/ffn/strided_slice/stack_2"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_t"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/ffn/strided_slice"
      op: "StridedSlice"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/ffn/Shape"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/ffn/strided_slice/stack"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/ffn/strided_slice/stack_1"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/ffn/strided_slice/stack_2"
      attr {
        key: "Index"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "shrink_axis_mask"
        value {
          i: 1
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/ffn/strided_slice_1/stack"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_t"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/ffn/strided_slice_1/stack_1"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_t"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 2
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/ffn/strided_slice_1/stack_2"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_t"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/ffn/strided_slice_1"
      op: "StridedSlice"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/ffn/Shape"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/ffn/strided_slice_1/stack"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/ffn/strided_slice_1/stack_1"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/ffn/strided_slice_1/stack_2"
      attr {
        key: "Index"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "shrink_axis_mask"
        value {
          i: 1
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/ffn/concat/values_0"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_t"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: -1
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/ffn/concat/values_1"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_t"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 128
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/ffn/concat/axis"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_t"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/ffn/concat"
      op: "ConcatV2"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/ffn/concat/values_0"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/ffn/concat/values_1"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/ffn/concat/axis"
      attr {
        key: "N"
        value {
          i: 2
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/ffn/Reshape"
      op: "Reshape"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/ffn/layer_prepostprocess/layer_norm/add_1"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/ffn/concat"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/ffn/pad_reduce/remove/GatherNd"
      op: "GatherNd"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/ffn/Reshape"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/pad_reduce/get_ids/ToInt32"
      attr {
        key: "Tindices"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "Tparams"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/ffn/ExpandDims/dim"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_t"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/ffn/ExpandDims"
      op: "ExpandDims"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/ffn/pad_reduce/remove/GatherNd"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/ffn/ExpandDims/dim"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
              dim {
                size: -1
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/body/code_embedding/encoder/layer_1/ffn/conv1/kernel/Initializer/random_uniform/shape"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@cs_similarity_transformer/body/code_embedding/encoder/layer_1/ffn/conv1/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 2
              }
            }
            tensor_content: "\200\000\000\000\000\002\000\000"
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/body/code_embedding/encoder/layer_1/ffn/conv1/kernel/Initializer/random_uniform/min"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@cs_similarity_transformer/body/code_embedding/encoder/layer_1/ffn/conv1/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: -0.09682458639144897
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/body/code_embedding/encoder/layer_1/ffn/conv1/kernel/Initializer/random_uniform/max"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@cs_similarity_transformer/body/code_embedding/encoder/layer_1/ffn/conv1/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.09682458639144897
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/body/code_embedding/encoder/layer_1/ffn/conv1/kernel/Initializer/random_uniform/RandomUniform"
      op: "RandomUniform"
      input: "cs_similarity_transformer/body/code_embedding/encoder/layer_1/ffn/conv1/kernel/Initializer/random_uniform/shape"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@cs_similarity_transformer/body/code_embedding/encoder/layer_1/ffn/conv1/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
              dim {
                size: 512
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "cs_similarity_transformer/body/code_embedding/encoder/layer_1/ffn/conv1/kernel/Initializer/random_uniform/sub"
      op: "Sub"
      input: "cs_similarity_transformer/body/code_embedding/encoder/layer_1/ffn/conv1/kernel/Initializer/random_uniform/max"
      input: "cs_similarity_transformer/body/code_embedding/encoder/layer_1/ffn/conv1/kernel/Initializer/random_uniform/min"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@cs_similarity_transformer/body/code_embedding/encoder/layer_1/ffn/conv1/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/body/code_embedding/encoder/layer_1/ffn/conv1/kernel/Initializer/random_uniform/mul"
      op: "Mul"
      input: "cs_similarity_transformer/body/code_embedding/encoder/layer_1/ffn/conv1/kernel/Initializer/random_uniform/RandomUniform"
      input: "cs_similarity_transformer/body/code_embedding/encoder/layer_1/ffn/conv1/kernel/Initializer/random_uniform/sub"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@cs_similarity_transformer/body/code_embedding/encoder/layer_1/ffn/conv1/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
              dim {
                size: 512
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/body/code_embedding/encoder/layer_1/ffn/conv1/kernel/Initializer/random_uniform"
      op: "Add"
      input: "cs_similarity_transformer/body/code_embedding/encoder/layer_1/ffn/conv1/kernel/Initializer/random_uniform/mul"
      input: "cs_similarity_transformer/body/code_embedding/encoder/layer_1/ffn/conv1/kernel/Initializer/random_uniform/min"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@cs_similarity_transformer/body/code_embedding/encoder/layer_1/ffn/conv1/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
              dim {
                size: 512
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/body/code_embedding/encoder/layer_1/ffn/conv1/kernel"
      op: "VarHandleOp"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@cs_similarity_transformer/body/code_embedding/encoder/layer_1/ffn/conv1/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 128
            }
            dim {
              size: 512
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: "cs_similarity_transformer/body/code_embedding/encoder/layer_1/ffn/conv1/kernel"
        }
      }
    }
    node {
      name: "cs_similarity_transformer/body/code_embedding/encoder/layer_1/ffn/conv1/kernel/IsInitialized/VarIsInitializedOp"
      op: "VarIsInitializedOp"
      input: "cs_similarity_transformer/body/code_embedding/encoder/layer_1/ffn/conv1/kernel"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/body/code_embedding/encoder/layer_1/ffn/conv1/kernel/Assign"
      op: "AssignVariableOp"
      input: "cs_similarity_transformer/body/code_embedding/encoder/layer_1/ffn/conv1/kernel"
      input: "cs_similarity_transformer/body/code_embedding/encoder/layer_1/ffn/conv1/kernel/Initializer/random_uniform"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@cs_similarity_transformer/body/code_embedding/encoder/layer_1/ffn/conv1/kernel"
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "cs_similarity_transformer/body/code_embedding/encoder/layer_1/ffn/conv1/kernel/Read/ReadVariableOp"
      op: "ReadVariableOp"
      input: "cs_similarity_transformer/body/code_embedding/encoder/layer_1/ffn/conv1/kernel"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@cs_similarity_transformer/body/code_embedding/encoder/layer_1/ffn/conv1/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
              dim {
                size: 512
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "Read_37/ReadVariableOp"
      op: "ReadVariableOp"
      input: "Read_37/ReadVariableOp/Switch:1"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
              dim {
                size: 512
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "Read_37/ReadVariableOp/Switch"
      op: "Switch"
      input: "cs_similarity_transformer/body/code_embedding/encoder/layer_1/ffn/conv1/kernel"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/pred_id"
      attr {
        key: "T"
        value {
          type: DT_RESOURCE
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@cs_similarity_transformer/body/code_embedding/encoder/layer_1/ffn/conv1/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
            shape {
            }
          }
        }
      }
    }
    node {
      name: "Identity_37"
      op: "Identity"
      input: "Read_37/ReadVariableOp"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
              dim {
                size: 512
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/body/code_embedding/encoder/layer_1/ffn/conv1/bias/Initializer/zeros"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@cs_similarity_transformer/body/code_embedding/encoder/layer_1/ffn/conv1/bias"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 512
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
              dim {
                size: 512
              }
            }
            float_val: 0.0
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/body/code_embedding/encoder/layer_1/ffn/conv1/bias"
      op: "VarHandleOp"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@cs_similarity_transformer/body/code_embedding/encoder/layer_1/ffn/conv1/bias"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 512
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: "cs_similarity_transformer/body/code_embedding/encoder/layer_1/ffn/conv1/bias"
        }
      }
    }
    node {
      name: "cs_similarity_transformer/body/code_embedding/encoder/layer_1/ffn/conv1/bias/IsInitialized/VarIsInitializedOp"
      op: "VarIsInitializedOp"
      input: "cs_similarity_transformer/body/code_embedding/encoder/layer_1/ffn/conv1/bias"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/body/code_embedding/encoder/layer_1/ffn/conv1/bias/Assign"
      op: "AssignVariableOp"
      input: "cs_similarity_transformer/body/code_embedding/encoder/layer_1/ffn/conv1/bias"
      input: "cs_similarity_transformer/body/code_embedding/encoder/layer_1/ffn/conv1/bias/Initializer/zeros"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@cs_similarity_transformer/body/code_embedding/encoder/layer_1/ffn/conv1/bias"
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "cs_similarity_transformer/body/code_embedding/encoder/layer_1/ffn/conv1/bias/Read/ReadVariableOp"
      op: "ReadVariableOp"
      input: "cs_similarity_transformer/body/code_embedding/encoder/layer_1/ffn/conv1/bias"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@cs_similarity_transformer/body/code_embedding/encoder/layer_1/ffn/conv1/bias"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 512
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "Read_38/ReadVariableOp"
      op: "ReadVariableOp"
      input: "Read_38/ReadVariableOp/Switch:1"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 512
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "Read_38/ReadVariableOp/Switch"
      op: "Switch"
      input: "cs_similarity_transformer/body/code_embedding/encoder/layer_1/ffn/conv1/bias"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/pred_id"
      attr {
        key: "T"
        value {
          type: DT_RESOURCE
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@cs_similarity_transformer/body/code_embedding/encoder/layer_1/ffn/conv1/bias"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
            shape {
            }
          }
        }
      }
    }
    node {
      name: "Identity_38"
      op: "Identity"
      input: "Read_38/ReadVariableOp"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 512
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/ffn/conv1/Tensordot/Shape"
      op: "Shape"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/ffn/ExpandDims"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/ffn/conv1/Tensordot/Rank"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_t"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 3
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/ffn/conv1/Tensordot/axes"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_t"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 2
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/ffn/conv1/Tensordot/GreaterEqual/y"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_t"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/ffn/conv1/Tensordot/GreaterEqual"
      op: "GreaterEqual"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/ffn/conv1/Tensordot/axes"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/ffn/conv1/Tensordot/GreaterEqual/y"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/ffn/conv1/Tensordot/Cast"
      op: "Cast"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/ffn/conv1/Tensordot/GreaterEqual"
      attr {
        key: "DstT"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "SrcT"
        value {
          type: DT_BOOL
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/ffn/conv1/Tensordot/mul"
      op: "Mul"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/ffn/conv1/Tensordot/Cast"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/ffn/conv1/Tensordot/axes"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/ffn/conv1/Tensordot/Less/y"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_t"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/ffn/conv1/Tensordot/Less"
      op: "Less"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/ffn/conv1/Tensordot/axes"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/ffn/conv1/Tensordot/Less/y"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/ffn/conv1/Tensordot/Cast_1"
      op: "Cast"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/ffn/conv1/Tensordot/Less"
      attr {
        key: "DstT"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "SrcT"
        value {
          type: DT_BOOL
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/ffn/conv1/Tensordot/add"
      op: "Add"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/ffn/conv1/Tensordot/axes"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/ffn/conv1/Tensordot/Rank"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/ffn/conv1/Tensordot/mul_1"
      op: "Mul"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/ffn/conv1/Tensordot/Cast_1"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/ffn/conv1/Tensordot/add"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/ffn/conv1/Tensordot/add_1"
      op: "Add"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/ffn/conv1/Tensordot/mul"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/ffn/conv1/Tensordot/mul_1"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/ffn/conv1/Tensordot/range/start"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_t"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/ffn/conv1/Tensordot/range/delta"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_t"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/ffn/conv1/Tensordot/range"
      op: "Range"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/ffn/conv1/Tensordot/range/start"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/ffn/conv1/Tensordot/Rank"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/ffn/conv1/Tensordot/range/delta"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/ffn/conv1/Tensordot/ListDiff"
      op: "ListDiff"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/ffn/conv1/Tensordot/range"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/ffn/conv1/Tensordot/add_1"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/ffn/conv1/Tensordot/GatherV2/axis"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_t"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/ffn/conv1/Tensordot/GatherV2"
      op: "GatherV2"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/ffn/conv1/Tensordot/Shape"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/ffn/conv1/Tensordot/ListDiff"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/ffn/conv1/Tensordot/GatherV2/axis"
      attr {
        key: "Taxis"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "Tindices"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "Tparams"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/ffn/conv1/Tensordot/GatherV2_1/axis"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_t"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/ffn/conv1/Tensordot/GatherV2_1"
      op: "GatherV2"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/ffn/conv1/Tensordot/Shape"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/ffn/conv1/Tensordot/add_1"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/ffn/conv1/Tensordot/GatherV2_1/axis"
      attr {
        key: "Taxis"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "Tindices"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "Tparams"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/ffn/conv1/Tensordot/Const"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_t"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/ffn/conv1/Tensordot/Prod"
      op: "Prod"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/ffn/conv1/Tensordot/GatherV2"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/ffn/conv1/Tensordot/Const"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/ffn/conv1/Tensordot/Const_1"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_t"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/ffn/conv1/Tensordot/Prod_1"
      op: "Prod"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/ffn/conv1/Tensordot/GatherV2_1"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/ffn/conv1/Tensordot/Const_1"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/ffn/conv1/Tensordot/concat/axis"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_t"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/ffn/conv1/Tensordot/concat"
      op: "ConcatV2"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/ffn/conv1/Tensordot/GatherV2_1"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/ffn/conv1/Tensordot/GatherV2"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/ffn/conv1/Tensordot/concat/axis"
      attr {
        key: "N"
        value {
          i: 2
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/ffn/conv1/Tensordot/concat_1/axis"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_t"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/ffn/conv1/Tensordot/concat_1"
      op: "ConcatV2"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/ffn/conv1/Tensordot/ListDiff"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/ffn/conv1/Tensordot/add_1"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/ffn/conv1/Tensordot/concat_1/axis"
      attr {
        key: "N"
        value {
          i: 2
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/ffn/conv1/Tensordot/stack"
      op: "Pack"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/ffn/conv1/Tensordot/Prod"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/ffn/conv1/Tensordot/Prod_1"
      attr {
        key: "N"
        value {
          i: 2
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/ffn/conv1/Tensordot/transpose"
      op: "Transpose"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/ffn/ExpandDims"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/ffn/conv1/Tensordot/concat_1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
              dim {
                size: -1
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/ffn/conv1/Tensordot/Reshape"
      op: "Reshape"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/ffn/conv1/Tensordot/transpose"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/ffn/conv1/Tensordot/stack"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/ffn/conv1/Tensordot/transpose_1/perm"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_t"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 2
              }
            }
            tensor_content: "\000\000\000\000\001\000\000\000"
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/ffn/conv1/Tensordot/transpose_1"
      op: "Transpose"
      input: "Identity_37"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/ffn/conv1/Tensordot/transpose_1/perm"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
              dim {
                size: 512
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/ffn/conv1/Tensordot/Reshape_1/shape"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_t"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 2
              }
            }
            tensor_content: "\200\000\000\000\000\002\000\000"
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/ffn/conv1/Tensordot/Reshape_1"
      op: "Reshape"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/ffn/conv1/Tensordot/transpose_1"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/ffn/conv1/Tensordot/Reshape_1/shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
              dim {
                size: 512
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/ffn/conv1/Tensordot/MatMul"
      op: "MatMul"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/ffn/conv1/Tensordot/Reshape"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/ffn/conv1/Tensordot/Reshape_1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 512
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/ffn/conv1/Tensordot/Const_2"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_t"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 512
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/ffn/conv1/Tensordot/concat_2/axis"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_t"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/ffn/conv1/Tensordot/concat_2"
      op: "ConcatV2"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/ffn/conv1/Tensordot/GatherV2"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/ffn/conv1/Tensordot/Const_2"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/ffn/conv1/Tensordot/concat_2/axis"
      attr {
        key: "N"
        value {
          i: 2
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/ffn/conv1/Tensordot"
      op: "Reshape"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/ffn/conv1/Tensordot/MatMul"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/ffn/conv1/Tensordot/concat_2"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
              dim {
                size: -1
              }
              dim {
                size: 512
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/ffn/conv1/BiasAdd"
      op: "BiasAdd"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/ffn/conv1/Tensordot"
      input: "Identity_38"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
              dim {
                size: -1
              }
              dim {
                size: 512
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/ffn/conv1/Relu"
      op: "Relu"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/ffn/conv1/BiasAdd"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
              dim {
                size: -1
              }
              dim {
                size: 512
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/body/code_embedding/encoder/layer_1/ffn/conv2/kernel/Initializer/random_uniform/shape"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@cs_similarity_transformer/body/code_embedding/encoder/layer_1/ffn/conv2/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 2
              }
            }
            tensor_content: "\000\002\000\000\200\000\000\000"
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/body/code_embedding/encoder/layer_1/ffn/conv2/kernel/Initializer/random_uniform/min"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@cs_similarity_transformer/body/code_embedding/encoder/layer_1/ffn/conv2/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: -0.09682458639144897
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/body/code_embedding/encoder/layer_1/ffn/conv2/kernel/Initializer/random_uniform/max"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@cs_similarity_transformer/body/code_embedding/encoder/layer_1/ffn/conv2/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.09682458639144897
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/body/code_embedding/encoder/layer_1/ffn/conv2/kernel/Initializer/random_uniform/RandomUniform"
      op: "RandomUniform"
      input: "cs_similarity_transformer/body/code_embedding/encoder/layer_1/ffn/conv2/kernel/Initializer/random_uniform/shape"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@cs_similarity_transformer/body/code_embedding/encoder/layer_1/ffn/conv2/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 512
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "cs_similarity_transformer/body/code_embedding/encoder/layer_1/ffn/conv2/kernel/Initializer/random_uniform/sub"
      op: "Sub"
      input: "cs_similarity_transformer/body/code_embedding/encoder/layer_1/ffn/conv2/kernel/Initializer/random_uniform/max"
      input: "cs_similarity_transformer/body/code_embedding/encoder/layer_1/ffn/conv2/kernel/Initializer/random_uniform/min"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@cs_similarity_transformer/body/code_embedding/encoder/layer_1/ffn/conv2/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/body/code_embedding/encoder/layer_1/ffn/conv2/kernel/Initializer/random_uniform/mul"
      op: "Mul"
      input: "cs_similarity_transformer/body/code_embedding/encoder/layer_1/ffn/conv2/kernel/Initializer/random_uniform/RandomUniform"
      input: "cs_similarity_transformer/body/code_embedding/encoder/layer_1/ffn/conv2/kernel/Initializer/random_uniform/sub"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@cs_similarity_transformer/body/code_embedding/encoder/layer_1/ffn/conv2/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 512
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/body/code_embedding/encoder/layer_1/ffn/conv2/kernel/Initializer/random_uniform"
      op: "Add"
      input: "cs_similarity_transformer/body/code_embedding/encoder/layer_1/ffn/conv2/kernel/Initializer/random_uniform/mul"
      input: "cs_similarity_transformer/body/code_embedding/encoder/layer_1/ffn/conv2/kernel/Initializer/random_uniform/min"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@cs_similarity_transformer/body/code_embedding/encoder/layer_1/ffn/conv2/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 512
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/body/code_embedding/encoder/layer_1/ffn/conv2/kernel"
      op: "VarHandleOp"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@cs_similarity_transformer/body/code_embedding/encoder/layer_1/ffn/conv2/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 512
            }
            dim {
              size: 128
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: "cs_similarity_transformer/body/code_embedding/encoder/layer_1/ffn/conv2/kernel"
        }
      }
    }
    node {
      name: "cs_similarity_transformer/body/code_embedding/encoder/layer_1/ffn/conv2/kernel/IsInitialized/VarIsInitializedOp"
      op: "VarIsInitializedOp"
      input: "cs_similarity_transformer/body/code_embedding/encoder/layer_1/ffn/conv2/kernel"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/body/code_embedding/encoder/layer_1/ffn/conv2/kernel/Assign"
      op: "AssignVariableOp"
      input: "cs_similarity_transformer/body/code_embedding/encoder/layer_1/ffn/conv2/kernel"
      input: "cs_similarity_transformer/body/code_embedding/encoder/layer_1/ffn/conv2/kernel/Initializer/random_uniform"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@cs_similarity_transformer/body/code_embedding/encoder/layer_1/ffn/conv2/kernel"
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "cs_similarity_transformer/body/code_embedding/encoder/layer_1/ffn/conv2/kernel/Read/ReadVariableOp"
      op: "ReadVariableOp"
      input: "cs_similarity_transformer/body/code_embedding/encoder/layer_1/ffn/conv2/kernel"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@cs_similarity_transformer/body/code_embedding/encoder/layer_1/ffn/conv2/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 512
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "Read_39/ReadVariableOp"
      op: "ReadVariableOp"
      input: "Read_39/ReadVariableOp/Switch:1"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 512
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "Read_39/ReadVariableOp/Switch"
      op: "Switch"
      input: "cs_similarity_transformer/body/code_embedding/encoder/layer_1/ffn/conv2/kernel"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/pred_id"
      attr {
        key: "T"
        value {
          type: DT_RESOURCE
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@cs_similarity_transformer/body/code_embedding/encoder/layer_1/ffn/conv2/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
            shape {
            }
          }
        }
      }
    }
    node {
      name: "Identity_39"
      op: "Identity"
      input: "Read_39/ReadVariableOp"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 512
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/body/code_embedding/encoder/layer_1/ffn/conv2/bias/Initializer/zeros"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@cs_similarity_transformer/body/code_embedding/encoder/layer_1/ffn/conv2/bias"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
              dim {
                size: 128
              }
            }
            float_val: 0.0
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/body/code_embedding/encoder/layer_1/ffn/conv2/bias"
      op: "VarHandleOp"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@cs_similarity_transformer/body/code_embedding/encoder/layer_1/ffn/conv2/bias"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 128
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: "cs_similarity_transformer/body/code_embedding/encoder/layer_1/ffn/conv2/bias"
        }
      }
    }
    node {
      name: "cs_similarity_transformer/body/code_embedding/encoder/layer_1/ffn/conv2/bias/IsInitialized/VarIsInitializedOp"
      op: "VarIsInitializedOp"
      input: "cs_similarity_transformer/body/code_embedding/encoder/layer_1/ffn/conv2/bias"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/body/code_embedding/encoder/layer_1/ffn/conv2/bias/Assign"
      op: "AssignVariableOp"
      input: "cs_similarity_transformer/body/code_embedding/encoder/layer_1/ffn/conv2/bias"
      input: "cs_similarity_transformer/body/code_embedding/encoder/layer_1/ffn/conv2/bias/Initializer/zeros"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@cs_similarity_transformer/body/code_embedding/encoder/layer_1/ffn/conv2/bias"
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "cs_similarity_transformer/body/code_embedding/encoder/layer_1/ffn/conv2/bias/Read/ReadVariableOp"
      op: "ReadVariableOp"
      input: "cs_similarity_transformer/body/code_embedding/encoder/layer_1/ffn/conv2/bias"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@cs_similarity_transformer/body/code_embedding/encoder/layer_1/ffn/conv2/bias"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "Read_40/ReadVariableOp"
      op: "ReadVariableOp"
      input: "Read_40/ReadVariableOp/Switch:1"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "Read_40/ReadVariableOp/Switch"
      op: "Switch"
      input: "cs_similarity_transformer/body/code_embedding/encoder/layer_1/ffn/conv2/bias"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/pred_id"
      attr {
        key: "T"
        value {
          type: DT_RESOURCE
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@cs_similarity_transformer/body/code_embedding/encoder/layer_1/ffn/conv2/bias"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
            shape {
            }
          }
        }
      }
    }
    node {
      name: "Identity_40"
      op: "Identity"
      input: "Read_40/ReadVariableOp"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/ffn/conv2/Tensordot/Shape"
      op: "Shape"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/ffn/conv1/Relu"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/ffn/conv2/Tensordot/Rank"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_t"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 3
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/ffn/conv2/Tensordot/axes"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_t"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 2
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/ffn/conv2/Tensordot/GreaterEqual/y"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_t"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/ffn/conv2/Tensordot/GreaterEqual"
      op: "GreaterEqual"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/ffn/conv2/Tensordot/axes"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/ffn/conv2/Tensordot/GreaterEqual/y"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/ffn/conv2/Tensordot/Cast"
      op: "Cast"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/ffn/conv2/Tensordot/GreaterEqual"
      attr {
        key: "DstT"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "SrcT"
        value {
          type: DT_BOOL
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/ffn/conv2/Tensordot/mul"
      op: "Mul"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/ffn/conv2/Tensordot/Cast"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/ffn/conv2/Tensordot/axes"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/ffn/conv2/Tensordot/Less/y"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_t"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/ffn/conv2/Tensordot/Less"
      op: "Less"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/ffn/conv2/Tensordot/axes"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/ffn/conv2/Tensordot/Less/y"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/ffn/conv2/Tensordot/Cast_1"
      op: "Cast"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/ffn/conv2/Tensordot/Less"
      attr {
        key: "DstT"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "SrcT"
        value {
          type: DT_BOOL
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/ffn/conv2/Tensordot/add"
      op: "Add"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/ffn/conv2/Tensordot/axes"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/ffn/conv2/Tensordot/Rank"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/ffn/conv2/Tensordot/mul_1"
      op: "Mul"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/ffn/conv2/Tensordot/Cast_1"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/ffn/conv2/Tensordot/add"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/ffn/conv2/Tensordot/add_1"
      op: "Add"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/ffn/conv2/Tensordot/mul"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/ffn/conv2/Tensordot/mul_1"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/ffn/conv2/Tensordot/range/start"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_t"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/ffn/conv2/Tensordot/range/delta"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_t"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/ffn/conv2/Tensordot/range"
      op: "Range"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/ffn/conv2/Tensordot/range/start"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/ffn/conv2/Tensordot/Rank"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/ffn/conv2/Tensordot/range/delta"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/ffn/conv2/Tensordot/ListDiff"
      op: "ListDiff"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/ffn/conv2/Tensordot/range"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/ffn/conv2/Tensordot/add_1"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/ffn/conv2/Tensordot/GatherV2/axis"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_t"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/ffn/conv2/Tensordot/GatherV2"
      op: "GatherV2"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/ffn/conv2/Tensordot/Shape"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/ffn/conv2/Tensordot/ListDiff"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/ffn/conv2/Tensordot/GatherV2/axis"
      attr {
        key: "Taxis"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "Tindices"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "Tparams"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/ffn/conv2/Tensordot/GatherV2_1/axis"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_t"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/ffn/conv2/Tensordot/GatherV2_1"
      op: "GatherV2"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/ffn/conv2/Tensordot/Shape"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/ffn/conv2/Tensordot/add_1"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/ffn/conv2/Tensordot/GatherV2_1/axis"
      attr {
        key: "Taxis"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "Tindices"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "Tparams"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/ffn/conv2/Tensordot/Const"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_t"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/ffn/conv2/Tensordot/Prod"
      op: "Prod"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/ffn/conv2/Tensordot/GatherV2"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/ffn/conv2/Tensordot/Const"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/ffn/conv2/Tensordot/Const_1"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_t"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/ffn/conv2/Tensordot/Prod_1"
      op: "Prod"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/ffn/conv2/Tensordot/GatherV2_1"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/ffn/conv2/Tensordot/Const_1"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/ffn/conv2/Tensordot/concat/axis"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_t"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/ffn/conv2/Tensordot/concat"
      op: "ConcatV2"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/ffn/conv2/Tensordot/GatherV2_1"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/ffn/conv2/Tensordot/GatherV2"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/ffn/conv2/Tensordot/concat/axis"
      attr {
        key: "N"
        value {
          i: 2
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/ffn/conv2/Tensordot/concat_1/axis"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_t"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/ffn/conv2/Tensordot/concat_1"
      op: "ConcatV2"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/ffn/conv2/Tensordot/ListDiff"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/ffn/conv2/Tensordot/add_1"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/ffn/conv2/Tensordot/concat_1/axis"
      attr {
        key: "N"
        value {
          i: 2
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/ffn/conv2/Tensordot/stack"
      op: "Pack"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/ffn/conv2/Tensordot/Prod"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/ffn/conv2/Tensordot/Prod_1"
      attr {
        key: "N"
        value {
          i: 2
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/ffn/conv2/Tensordot/transpose"
      op: "Transpose"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/ffn/conv1/Relu"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/ffn/conv2/Tensordot/concat_1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
              dim {
                size: -1
              }
              dim {
                size: 512
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/ffn/conv2/Tensordot/Reshape"
      op: "Reshape"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/ffn/conv2/Tensordot/transpose"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/ffn/conv2/Tensordot/stack"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/ffn/conv2/Tensordot/transpose_1/perm"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_t"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 2
              }
            }
            tensor_content: "\000\000\000\000\001\000\000\000"
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/ffn/conv2/Tensordot/transpose_1"
      op: "Transpose"
      input: "Identity_39"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/ffn/conv2/Tensordot/transpose_1/perm"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 512
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/ffn/conv2/Tensordot/Reshape_1/shape"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_t"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 2
              }
            }
            tensor_content: "\000\002\000\000\200\000\000\000"
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/ffn/conv2/Tensordot/Reshape_1"
      op: "Reshape"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/ffn/conv2/Tensordot/transpose_1"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/ffn/conv2/Tensordot/Reshape_1/shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 512
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/ffn/conv2/Tensordot/MatMul"
      op: "MatMul"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/ffn/conv2/Tensordot/Reshape"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/ffn/conv2/Tensordot/Reshape_1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/ffn/conv2/Tensordot/Const_2"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_t"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 128
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/ffn/conv2/Tensordot/concat_2/axis"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_t"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/ffn/conv2/Tensordot/concat_2"
      op: "ConcatV2"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/ffn/conv2/Tensordot/GatherV2"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/ffn/conv2/Tensordot/Const_2"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/ffn/conv2/Tensordot/concat_2/axis"
      attr {
        key: "N"
        value {
          i: 2
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/ffn/conv2/Tensordot"
      op: "Reshape"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/ffn/conv2/Tensordot/MatMul"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/ffn/conv2/Tensordot/concat_2"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
              dim {
                size: -1
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/ffn/conv2/BiasAdd"
      op: "BiasAdd"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/ffn/conv2/Tensordot"
      input: "Identity_40"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
              dim {
                size: -1
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/ffn/Squeeze"
      op: "Squeeze"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/ffn/conv2/BiasAdd"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
      attr {
        key: "squeeze_dims"
        value {
          list {
            i: 0
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/ffn/pad_reduce/restore/Shape"
      op: "Shape"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/ffn/Squeeze"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/ffn/pad_reduce/restore/strided_slice/stack"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_t"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/ffn/pad_reduce/restore/strided_slice/stack_1"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_t"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/ffn/pad_reduce/restore/strided_slice/stack_2"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_t"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/ffn/pad_reduce/restore/strided_slice"
      op: "StridedSlice"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/ffn/pad_reduce/restore/Shape"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/ffn/pad_reduce/restore/strided_slice/stack"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/ffn/pad_reduce/restore/strided_slice/stack_1"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/ffn/pad_reduce/restore/strided_slice/stack_2"
      attr {
        key: "Index"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "end_mask"
        value {
          i: 1
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/ffn/pad_reduce/restore/concat/axis"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_t"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/ffn/pad_reduce/restore/concat"
      op: "ConcatV2"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/pad_reduce/get_ids/strided_slice"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/ffn/pad_reduce/restore/strided_slice"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/ffn/pad_reduce/restore/concat/axis"
      attr {
        key: "N"
        value {
          i: 2
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/ffn/pad_reduce/restore/ScatterNd"
      op: "ScatterNd"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/pad_reduce/get_ids/ToInt32"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/ffn/Squeeze"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/ffn/pad_reduce/restore/concat"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tindices"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/ffn/Reshape_1/shape/2"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_t"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 128
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/ffn/Reshape_1/shape"
      op: "Pack"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/ffn/strided_slice"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/ffn/strided_slice_1"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/ffn/Reshape_1/shape/2"
      attr {
        key: "N"
        value {
          i: 3
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/ffn/Reshape_1"
      op: "Reshape"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/ffn/pad_reduce/restore/ScatterNd"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/ffn/Reshape_1/shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: -1
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/ffn/layer_postprocess/add"
      op: "Add"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/ffn/Reshape_1"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/layer_postprocess/add"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: -1
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_prepostprocess/Shape"
      op: "Shape"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/ffn/layer_postprocess/add"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_prepostprocess/strided_slice/stack"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_t"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_prepostprocess/strided_slice/stack_1"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_t"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_prepostprocess/strided_slice/stack_2"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_t"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_prepostprocess/strided_slice"
      op: "StridedSlice"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_prepostprocess/Shape"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_prepostprocess/strided_slice/stack"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_prepostprocess/strided_slice/stack_1"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_prepostprocess/strided_slice/stack_2"
      attr {
        key: "Index"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "shrink_axis_mask"
        value {
          i: 1
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_prepostprocess/strided_slice_1/stack"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_t"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_prepostprocess/strided_slice_1/stack_1"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_t"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 2
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_prepostprocess/strided_slice_1/stack_2"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_t"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_prepostprocess/strided_slice_1"
      op: "StridedSlice"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_prepostprocess/Shape"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_prepostprocess/strided_slice_1/stack"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_prepostprocess/strided_slice_1/stack_1"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_prepostprocess/strided_slice_1/stack_2"
      attr {
        key: "Index"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "shrink_axis_mask"
        value {
          i: 1
        }
      }
    }
    node {
      name: "cs_similarity_transformer/body/code_embedding/encoder/layer_prepostprocess/layer_norm/layer_norm_scale/Initializer/ones"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@cs_similarity_transformer/body/code_embedding/encoder/layer_prepostprocess/layer_norm/layer_norm_scale"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
              dim {
                size: 128
              }
            }
            float_val: 1.0
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/body/code_embedding/encoder/layer_prepostprocess/layer_norm/layer_norm_scale"
      op: "VarHandleOp"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@cs_similarity_transformer/body/code_embedding/encoder/layer_prepostprocess/layer_norm/layer_norm_scale"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 128
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: "cs_similarity_transformer/body/code_embedding/encoder/layer_prepostprocess/layer_norm/layer_norm_scale"
        }
      }
    }
    node {
      name: "cs_similarity_transformer/body/code_embedding/encoder/layer_prepostprocess/layer_norm/layer_norm_scale/IsInitialized/VarIsInitializedOp"
      op: "VarIsInitializedOp"
      input: "cs_similarity_transformer/body/code_embedding/encoder/layer_prepostprocess/layer_norm/layer_norm_scale"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/body/code_embedding/encoder/layer_prepostprocess/layer_norm/layer_norm_scale/Assign"
      op: "AssignVariableOp"
      input: "cs_similarity_transformer/body/code_embedding/encoder/layer_prepostprocess/layer_norm/layer_norm_scale"
      input: "cs_similarity_transformer/body/code_embedding/encoder/layer_prepostprocess/layer_norm/layer_norm_scale/Initializer/ones"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@cs_similarity_transformer/body/code_embedding/encoder/layer_prepostprocess/layer_norm/layer_norm_scale"
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "cs_similarity_transformer/body/code_embedding/encoder/layer_prepostprocess/layer_norm/layer_norm_scale/Read/ReadVariableOp"
      op: "ReadVariableOp"
      input: "cs_similarity_transformer/body/code_embedding/encoder/layer_prepostprocess/layer_norm/layer_norm_scale"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@cs_similarity_transformer/body/code_embedding/encoder/layer_prepostprocess/layer_norm/layer_norm_scale"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "Read_41/ReadVariableOp"
      op: "ReadVariableOp"
      input: "Read_41/ReadVariableOp/Switch:1"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "Read_41/ReadVariableOp/Switch"
      op: "Switch"
      input: "cs_similarity_transformer/body/code_embedding/encoder/layer_prepostprocess/layer_norm/layer_norm_scale"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/pred_id"
      attr {
        key: "T"
        value {
          type: DT_RESOURCE
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@cs_similarity_transformer/body/code_embedding/encoder/layer_prepostprocess/layer_norm/layer_norm_scale"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
            shape {
            }
          }
        }
      }
    }
    node {
      name: "Identity_41"
      op: "Identity"
      input: "Read_41/ReadVariableOp"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/body/code_embedding/encoder/layer_prepostprocess/layer_norm/layer_norm_bias/Initializer/zeros"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@cs_similarity_transformer/body/code_embedding/encoder/layer_prepostprocess/layer_norm/layer_norm_bias"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
              dim {
                size: 128
              }
            }
            float_val: 0.0
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/body/code_embedding/encoder/layer_prepostprocess/layer_norm/layer_norm_bias"
      op: "VarHandleOp"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@cs_similarity_transformer/body/code_embedding/encoder/layer_prepostprocess/layer_norm/layer_norm_bias"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 128
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: "cs_similarity_transformer/body/code_embedding/encoder/layer_prepostprocess/layer_norm/layer_norm_bias"
        }
      }
    }
    node {
      name: "cs_similarity_transformer/body/code_embedding/encoder/layer_prepostprocess/layer_norm/layer_norm_bias/IsInitialized/VarIsInitializedOp"
      op: "VarIsInitializedOp"
      input: "cs_similarity_transformer/body/code_embedding/encoder/layer_prepostprocess/layer_norm/layer_norm_bias"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/body/code_embedding/encoder/layer_prepostprocess/layer_norm/layer_norm_bias/Assign"
      op: "AssignVariableOp"
      input: "cs_similarity_transformer/body/code_embedding/encoder/layer_prepostprocess/layer_norm/layer_norm_bias"
      input: "cs_similarity_transformer/body/code_embedding/encoder/layer_prepostprocess/layer_norm/layer_norm_bias/Initializer/zeros"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@cs_similarity_transformer/body/code_embedding/encoder/layer_prepostprocess/layer_norm/layer_norm_bias"
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "cs_similarity_transformer/body/code_embedding/encoder/layer_prepostprocess/layer_norm/layer_norm_bias/Read/ReadVariableOp"
      op: "ReadVariableOp"
      input: "cs_similarity_transformer/body/code_embedding/encoder/layer_prepostprocess/layer_norm/layer_norm_bias"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@cs_similarity_transformer/body/code_embedding/encoder/layer_prepostprocess/layer_norm/layer_norm_bias"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "Read_42/ReadVariableOp"
      op: "ReadVariableOp"
      input: "Read_42/ReadVariableOp/Switch:1"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "Read_42/ReadVariableOp/Switch"
      op: "Switch"
      input: "cs_similarity_transformer/body/code_embedding/encoder/layer_prepostprocess/layer_norm/layer_norm_bias"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/pred_id"
      attr {
        key: "T"
        value {
          type: DT_RESOURCE
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@cs_similarity_transformer/body/code_embedding/encoder/layer_prepostprocess/layer_norm/layer_norm_bias"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
            shape {
            }
          }
        }
      }
    }
    node {
      name: "Identity_42"
      op: "Identity"
      input: "Read_42/ReadVariableOp"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_prepostprocess/layer_norm/Const"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_t"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 9.999999974752427e-07
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_prepostprocess/layer_norm/Mean/reduction_indices"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_t"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: -1
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_prepostprocess/layer_norm/Mean"
      op: "Mean"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/ffn/layer_postprocess/add"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_prepostprocess/layer_norm/Mean/reduction_indices"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: true
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_prepostprocess/layer_norm/sub"
      op: "Sub"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/ffn/layer_postprocess/add"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_prepostprocess/layer_norm/Mean"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: -1
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_prepostprocess/layer_norm/Square"
      op: "Square"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_prepostprocess/layer_norm/sub"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: -1
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_prepostprocess/layer_norm/Mean_1/reduction_indices"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_t"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: -1
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_prepostprocess/layer_norm/Mean_1"
      op: "Mean"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_prepostprocess/layer_norm/Square"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_prepostprocess/layer_norm/Mean_1/reduction_indices"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: true
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_prepostprocess/layer_norm/sub_1"
      op: "Sub"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/ffn/layer_postprocess/add"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_prepostprocess/layer_norm/Mean"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: -1
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_prepostprocess/layer_norm/add"
      op: "Add"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_prepostprocess/layer_norm/Mean_1"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_prepostprocess/layer_norm/Const"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_prepostprocess/layer_norm/Rsqrt"
      op: "Rsqrt"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_prepostprocess/layer_norm/add"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_prepostprocess/layer_norm/mul"
      op: "Mul"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_prepostprocess/layer_norm/sub_1"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_prepostprocess/layer_norm/Rsqrt"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: -1
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_prepostprocess/layer_norm/mul_1"
      op: "Mul"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_prepostprocess/layer_norm/mul"
      input: "Identity_41"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: -1
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_prepostprocess/layer_norm/add_1"
      op: "Add"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_prepostprocess/layer_norm/mul_1"
      input: "Identity_42"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: -1
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/Mean/reduction_indices"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_t"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/Mean"
      op: "Mean"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_prepostprocess/layer_norm/add_1"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/Mean/reduction_indices"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/Shape"
      op: "Shape"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/Shape/Switch"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 4
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/Shape/Switch"
      op: "Switch"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/symbol_modality_8164_128/shared/mul_1"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/pred_id"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/symbol_modality_8164_128/shared/mul_1"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: -1
              }
              dim {
                size: 1
              }
              dim {
                size: 128
              }
            }
            shape {
              dim {
                size: -1
              }
              dim {
                size: -1
              }
              dim {
                size: 1
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/strided_slice/stack"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_f"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/strided_slice/stack_1"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_f"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/strided_slice/stack_2"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_f"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/strided_slice"
      op: "StridedSlice"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/Shape"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/strided_slice/stack"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/strided_slice/stack_1"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/strided_slice/stack_2"
      attr {
        key: "Index"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "shrink_axis_mask"
        value {
          i: 1
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/strided_slice_1/stack"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_f"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/strided_slice_1/stack_1"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_f"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 2
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/strided_slice_1/stack_2"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_f"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/strided_slice_1"
      op: "StridedSlice"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/Shape"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/strided_slice_1/stack"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/strided_slice_1/stack_1"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/strided_slice_1/stack_2"
      attr {
        key: "Index"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "shrink_axis_mask"
        value {
          i: 1
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/mul/y"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_f"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/mul"
      op: "Mul"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/strided_slice_1"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/mul/y"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/Reshape/shape/2"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_f"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 128
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/Reshape/shape"
      op: "Pack"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/strided_slice"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/mul"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/Reshape/shape/2"
      attr {
        key: "N"
        value {
          i: 3
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/Reshape"
      op: "Reshape"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/Shape/Switch"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/Reshape/shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: -1
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/embedding_to_padding/Abs"
      op: "Abs"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/Reshape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: -1
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/embedding_to_padding/Sum/reduction_indices"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_f"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: -1
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/embedding_to_padding/Sum"
      op: "Sum"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/embedding_to_padding/Abs"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/embedding_to_padding/Sum/reduction_indices"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/embedding_to_padding/Equal/y"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_f"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.0
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/embedding_to_padding/Equal"
      op: "Equal"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/embedding_to_padding/Sum"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/embedding_to_padding/Equal/y"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/embedding_to_padding/ToFloat"
      op: "Cast"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/embedding_to_padding/Equal"
      attr {
        key: "DstT"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "SrcT"
        value {
          type: DT_BOOL
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/attention_bias_ignore_padding/mul/y"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_f"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: -1000000000.0
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/attention_bias_ignore_padding/mul"
      op: "Mul"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/embedding_to_padding/ToFloat"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/attention_bias_ignore_padding/mul/y"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/attention_bias_ignore_padding/ExpandDims/dim"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_f"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/attention_bias_ignore_padding/ExpandDims"
      op: "ExpandDims"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/attention_bias_ignore_padding/mul"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/attention_bias_ignore_padding/ExpandDims/dim"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/attention_bias_ignore_padding/ExpandDims_1/dim"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_f"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/attention_bias_ignore_padding/ExpandDims_1"
      op: "ExpandDims"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/attention_bias_ignore_padding/ExpandDims"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/attention_bias_ignore_padding/ExpandDims_1/dim"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
              dim {
                size: 1
              }
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/body/string_embedding/target_space_embedding/kernel/Initializer/random_uniform/shape"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@cs_similarity_transformer/body/string_embedding/target_space_embedding/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 2
              }
            }
            tensor_content: " \000\000\000\200\000\000\000"
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/body/string_embedding/target_space_embedding/kernel/Initializer/random_uniform/min"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@cs_similarity_transformer/body/string_embedding/target_space_embedding/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: -0.19364917278289795
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/body/string_embedding/target_space_embedding/kernel/Initializer/random_uniform/max"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@cs_similarity_transformer/body/string_embedding/target_space_embedding/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.19364917278289795
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/body/string_embedding/target_space_embedding/kernel/Initializer/random_uniform/RandomUniform"
      op: "RandomUniform"
      input: "cs_similarity_transformer/body/string_embedding/target_space_embedding/kernel/Initializer/random_uniform/shape"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@cs_similarity_transformer/body/string_embedding/target_space_embedding/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "cs_similarity_transformer/body/string_embedding/target_space_embedding/kernel/Initializer/random_uniform/sub"
      op: "Sub"
      input: "cs_similarity_transformer/body/string_embedding/target_space_embedding/kernel/Initializer/random_uniform/max"
      input: "cs_similarity_transformer/body/string_embedding/target_space_embedding/kernel/Initializer/random_uniform/min"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@cs_similarity_transformer/body/string_embedding/target_space_embedding/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/body/string_embedding/target_space_embedding/kernel/Initializer/random_uniform/mul"
      op: "Mul"
      input: "cs_similarity_transformer/body/string_embedding/target_space_embedding/kernel/Initializer/random_uniform/RandomUniform"
      input: "cs_similarity_transformer/body/string_embedding/target_space_embedding/kernel/Initializer/random_uniform/sub"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@cs_similarity_transformer/body/string_embedding/target_space_embedding/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/body/string_embedding/target_space_embedding/kernel/Initializer/random_uniform"
      op: "Add"
      input: "cs_similarity_transformer/body/string_embedding/target_space_embedding/kernel/Initializer/random_uniform/mul"
      input: "cs_similarity_transformer/body/string_embedding/target_space_embedding/kernel/Initializer/random_uniform/min"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@cs_similarity_transformer/body/string_embedding/target_space_embedding/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/body/string_embedding/target_space_embedding/kernel"
      op: "VarHandleOp"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@cs_similarity_transformer/body/string_embedding/target_space_embedding/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 32
            }
            dim {
              size: 128
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: "cs_similarity_transformer/body/string_embedding/target_space_embedding/kernel"
        }
      }
    }
    node {
      name: "cs_similarity_transformer/body/string_embedding/target_space_embedding/kernel/IsInitialized/VarIsInitializedOp"
      op: "VarIsInitializedOp"
      input: "cs_similarity_transformer/body/string_embedding/target_space_embedding/kernel"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/body/string_embedding/target_space_embedding/kernel/Assign"
      op: "AssignVariableOp"
      input: "cs_similarity_transformer/body/string_embedding/target_space_embedding/kernel"
      input: "cs_similarity_transformer/body/string_embedding/target_space_embedding/kernel/Initializer/random_uniform"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@cs_similarity_transformer/body/string_embedding/target_space_embedding/kernel"
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "cs_similarity_transformer/body/string_embedding/target_space_embedding/kernel/Read/ReadVariableOp"
      op: "ReadVariableOp"
      input: "cs_similarity_transformer/body/string_embedding/target_space_embedding/kernel"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@cs_similarity_transformer/body/string_embedding/target_space_embedding/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "Read_43/ReadVariableOp"
      op: "ReadVariableOp"
      input: "Read_43/ReadVariableOp/Switch"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "Read_43/ReadVariableOp/Switch"
      op: "Switch"
      input: "cs_similarity_transformer/body/string_embedding/target_space_embedding/kernel"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/pred_id"
      attr {
        key: "T"
        value {
          type: DT_RESOURCE
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@cs_similarity_transformer/body/string_embedding/target_space_embedding/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
            shape {
            }
          }
        }
      }
    }
    node {
      name: "Identity_43"
      op: "Identity"
      input: "Read_43/ReadVariableOp"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/target_space_embedding/convert_gradient_to_tensor_HBc3xYw22Mw"
      op: "convert_gradient_to_tensor_HBc3xYw22Mw"
      input: "Identity_43"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_f"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/target_space_embedding/GatherV2/indices"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_f"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 3
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/target_space_embedding/GatherV2/axis"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_f"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/target_space_embedding/GatherV2"
      op: "GatherV2"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/target_space_embedding/convert_gradient_to_tensor_HBc3xYw22Mw"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/target_space_embedding/GatherV2/indices"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/target_space_embedding/GatherV2/axis"
      attr {
        key: "Taxis"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "Tindices"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "Tparams"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/Reshape_1/shape"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_f"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 3
              }
            }
            tensor_content: "\001\000\000\000\001\000\000\000\377\377\377\377"
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/Reshape_1"
      op: "Reshape"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/target_space_embedding/GatherV2"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/Reshape_1/shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
              dim {
                size: 1
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/add"
      op: "Add"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/Reshape"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/Reshape_1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: -1
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/add_timing_signal_1d/Shape"
      op: "Shape"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/add"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/add_timing_signal_1d/strided_slice/stack"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_f"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/add_timing_signal_1d/strided_slice/stack_1"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_f"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/add_timing_signal_1d/strided_slice/stack_2"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_f"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/add_timing_signal_1d/strided_slice"
      op: "StridedSlice"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/add_timing_signal_1d/Shape"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/add_timing_signal_1d/strided_slice/stack"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/add_timing_signal_1d/strided_slice/stack_1"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/add_timing_signal_1d/strided_slice/stack_2"
      attr {
        key: "Index"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "shrink_axis_mask"
        value {
          i: 1
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/add_timing_signal_1d/strided_slice_1/stack"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_f"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/add_timing_signal_1d/strided_slice_1/stack_1"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_f"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 2
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/add_timing_signal_1d/strided_slice_1/stack_2"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_f"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/add_timing_signal_1d/strided_slice_1"
      op: "StridedSlice"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/add_timing_signal_1d/Shape"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/add_timing_signal_1d/strided_slice_1/stack"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/add_timing_signal_1d/strided_slice_1/stack_1"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/add_timing_signal_1d/strided_slice_1/stack_2"
      attr {
        key: "Index"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "shrink_axis_mask"
        value {
          i: 1
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/add_timing_signal_1d/Shape_1"
      op: "Shape"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/add"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/add_timing_signal_1d/strided_slice_2/stack"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_f"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/add_timing_signal_1d/strided_slice_2/stack_1"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_f"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/add_timing_signal_1d/strided_slice_2/stack_2"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_f"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/add_timing_signal_1d/strided_slice_2"
      op: "StridedSlice"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/add_timing_signal_1d/Shape_1"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/add_timing_signal_1d/strided_slice_2/stack"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/add_timing_signal_1d/strided_slice_2/stack_1"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/add_timing_signal_1d/strided_slice_2/stack_2"
      attr {
        key: "Index"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "shrink_axis_mask"
        value {
          i: 1
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/add_timing_signal_1d/strided_slice_3/stack"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_f"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/add_timing_signal_1d/strided_slice_3/stack_1"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_f"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 2
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/add_timing_signal_1d/strided_slice_3/stack_2"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_f"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/add_timing_signal_1d/strided_slice_3"
      op: "StridedSlice"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/add_timing_signal_1d/Shape_1"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/add_timing_signal_1d/strided_slice_3/stack"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/add_timing_signal_1d/strided_slice_3/stack_1"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/add_timing_signal_1d/strided_slice_3/stack_2"
      attr {
        key: "Index"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "shrink_axis_mask"
        value {
          i: 1
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/add_timing_signal_1d/get_timing_signal_1d/range/start"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_f"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/add_timing_signal_1d/get_timing_signal_1d/range/delta"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_f"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/add_timing_signal_1d/get_timing_signal_1d/range"
      op: "Range"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/add_timing_signal_1d/get_timing_signal_1d/range/start"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/add_timing_signal_1d/strided_slice_1"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/add_timing_signal_1d/get_timing_signal_1d/range/delta"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/add_timing_signal_1d/get_timing_signal_1d/add/y"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_f"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/add_timing_signal_1d/get_timing_signal_1d/add"
      op: "Add"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/add_timing_signal_1d/get_timing_signal_1d/range"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/add_timing_signal_1d/get_timing_signal_1d/add/y"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/add_timing_signal_1d/get_timing_signal_1d/ToFloat"
      op: "Cast"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/add_timing_signal_1d/get_timing_signal_1d/add"
      attr {
        key: "DstT"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "SrcT"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/add_timing_signal_1d/get_timing_signal_1d/ToFloat_1/x"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_f"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 64
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/add_timing_signal_1d/get_timing_signal_1d/ToFloat_1"
      op: "Cast"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/add_timing_signal_1d/get_timing_signal_1d/ToFloat_1/x"
      attr {
        key: "DstT"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "SrcT"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/add_timing_signal_1d/get_timing_signal_1d/sub/y"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_f"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 1.0
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/add_timing_signal_1d/get_timing_signal_1d/sub"
      op: "Sub"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/add_timing_signal_1d/get_timing_signal_1d/ToFloat_1"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/add_timing_signal_1d/get_timing_signal_1d/sub/y"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/add_timing_signal_1d/get_timing_signal_1d/Maximum/y"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_f"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 1.0
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/add_timing_signal_1d/get_timing_signal_1d/Maximum"
      op: "Maximum"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/add_timing_signal_1d/get_timing_signal_1d/sub"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/add_timing_signal_1d/get_timing_signal_1d/Maximum/y"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/add_timing_signal_1d/get_timing_signal_1d/truediv/x"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_f"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 9.21034049987793
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/add_timing_signal_1d/get_timing_signal_1d/truediv"
      op: "RealDiv"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/add_timing_signal_1d/get_timing_signal_1d/truediv/x"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/add_timing_signal_1d/get_timing_signal_1d/Maximum"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/add_timing_signal_1d/get_timing_signal_1d/range_1/start"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_f"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/add_timing_signal_1d/get_timing_signal_1d/range_1/limit"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_f"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 64
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/add_timing_signal_1d/get_timing_signal_1d/range_1/delta"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_f"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/add_timing_signal_1d/get_timing_signal_1d/range_1"
      op: "Range"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/add_timing_signal_1d/get_timing_signal_1d/range_1/start"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/add_timing_signal_1d/get_timing_signal_1d/range_1/limit"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/add_timing_signal_1d/get_timing_signal_1d/range_1/delta"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/add_timing_signal_1d/get_timing_signal_1d/ToFloat_2"
      op: "Cast"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/add_timing_signal_1d/get_timing_signal_1d/range_1"
      attr {
        key: "DstT"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "SrcT"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/add_timing_signal_1d/get_timing_signal_1d/Neg"
      op: "Neg"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/add_timing_signal_1d/get_timing_signal_1d/truediv"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/add_timing_signal_1d/get_timing_signal_1d/mul"
      op: "Mul"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/add_timing_signal_1d/get_timing_signal_1d/ToFloat_2"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/add_timing_signal_1d/get_timing_signal_1d/Neg"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/add_timing_signal_1d/get_timing_signal_1d/Exp"
      op: "Exp"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/add_timing_signal_1d/get_timing_signal_1d/mul"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/add_timing_signal_1d/get_timing_signal_1d/mul_1/x"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_f"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 1.0
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/add_timing_signal_1d/get_timing_signal_1d/mul_1"
      op: "Mul"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/add_timing_signal_1d/get_timing_signal_1d/mul_1/x"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/add_timing_signal_1d/get_timing_signal_1d/Exp"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/add_timing_signal_1d/get_timing_signal_1d/ExpandDims/dim"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_f"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/add_timing_signal_1d/get_timing_signal_1d/ExpandDims"
      op: "ExpandDims"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/add_timing_signal_1d/get_timing_signal_1d/ToFloat"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/add_timing_signal_1d/get_timing_signal_1d/ExpandDims/dim"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/add_timing_signal_1d/get_timing_signal_1d/ExpandDims_1/dim"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_f"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/add_timing_signal_1d/get_timing_signal_1d/ExpandDims_1"
      op: "ExpandDims"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/add_timing_signal_1d/get_timing_signal_1d/mul_1"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/add_timing_signal_1d/get_timing_signal_1d/ExpandDims_1/dim"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/add_timing_signal_1d/get_timing_signal_1d/mul_2"
      op: "Mul"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/add_timing_signal_1d/get_timing_signal_1d/ExpandDims"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/add_timing_signal_1d/get_timing_signal_1d/ExpandDims_1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/add_timing_signal_1d/get_timing_signal_1d/Sin"
      op: "Sin"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/add_timing_signal_1d/get_timing_signal_1d/mul_2"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/add_timing_signal_1d/get_timing_signal_1d/Cos"
      op: "Cos"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/add_timing_signal_1d/get_timing_signal_1d/mul_2"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/add_timing_signal_1d/get_timing_signal_1d/concat/axis"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_f"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/add_timing_signal_1d/get_timing_signal_1d/concat"
      op: "ConcatV2"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/add_timing_signal_1d/get_timing_signal_1d/Sin"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/add_timing_signal_1d/get_timing_signal_1d/Cos"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/add_timing_signal_1d/get_timing_signal_1d/concat/axis"
      attr {
        key: "N"
        value {
          i: 2
        }
      }
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/add_timing_signal_1d/get_timing_signal_1d/FloorMod/x"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_f"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 128
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/add_timing_signal_1d/get_timing_signal_1d/FloorMod/y"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_f"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 2
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/add_timing_signal_1d/get_timing_signal_1d/FloorMod"
      op: "FloorMod"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/add_timing_signal_1d/get_timing_signal_1d/FloorMod/x"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/add_timing_signal_1d/get_timing_signal_1d/FloorMod/y"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/add_timing_signal_1d/get_timing_signal_1d/Pad/paddings/1/0"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_f"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/add_timing_signal_1d/get_timing_signal_1d/Pad/paddings/1"
      op: "Pack"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/add_timing_signal_1d/get_timing_signal_1d/Pad/paddings/1/0"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/add_timing_signal_1d/get_timing_signal_1d/FloorMod"
      attr {
        key: "N"
        value {
          i: 2
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/add_timing_signal_1d/get_timing_signal_1d/Pad/paddings/0_1"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_f"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 2
              }
            }
            tensor_content: "\000\000\000\000\000\000\000\000"
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/add_timing_signal_1d/get_timing_signal_1d/Pad/paddings"
      op: "Pack"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/add_timing_signal_1d/get_timing_signal_1d/Pad/paddings/0_1"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/add_timing_signal_1d/get_timing_signal_1d/Pad/paddings/1"
      attr {
        key: "N"
        value {
          i: 2
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
              dim {
                size: 2
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/add_timing_signal_1d/get_timing_signal_1d/Pad"
      op: "Pad"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/add_timing_signal_1d/get_timing_signal_1d/concat"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/add_timing_signal_1d/get_timing_signal_1d/Pad/paddings"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/add_timing_signal_1d/get_timing_signal_1d/Reshape/shape/0"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_f"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/add_timing_signal_1d/get_timing_signal_1d/Reshape/shape/2"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_f"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 128
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/add_timing_signal_1d/get_timing_signal_1d/Reshape/shape"
      op: "Pack"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/add_timing_signal_1d/get_timing_signal_1d/Reshape/shape/0"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/add_timing_signal_1d/strided_slice_1"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/add_timing_signal_1d/get_timing_signal_1d/Reshape/shape/2"
      attr {
        key: "N"
        value {
          i: 3
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/add_timing_signal_1d/get_timing_signal_1d/Reshape"
      op: "Reshape"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/add_timing_signal_1d/get_timing_signal_1d/Pad"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/add_timing_signal_1d/get_timing_signal_1d/Reshape/shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
              dim {
                size: -1
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/add_timing_signal_1d/add"
      op: "Add"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/add"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/add_timing_signal_1d/get_timing_signal_1d/Reshape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: -1
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/attention_bias_to_padding/Less/y"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_f"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: -1.0
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/attention_bias_to_padding/Less"
      op: "Less"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/attention_bias_ignore_padding/ExpandDims_1"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/attention_bias_to_padding/Less/y"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
              dim {
                size: 1
              }
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/attention_bias_to_padding/ToFloat"
      op: "Cast"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/attention_bias_to_padding/Less"
      attr {
        key: "DstT"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "SrcT"
        value {
          type: DT_BOOL
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
              dim {
                size: 1
              }
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/attention_bias_to_padding/Squeeze"
      op: "Squeeze"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/attention_bias_to_padding/ToFloat"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: -1
              }
            }
          }
        }
      }
      attr {
        key: "squeeze_dims"
        value {
          list {
            i: 1
            i: 2
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/sub/x"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_f"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 1.0
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/sub"
      op: "Sub"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/sub/x"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/attention_bias_to_padding/Squeeze"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/pad_reduce/get_ids/Reshape/shape"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_f"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: -1
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/pad_reduce/get_ids/Reshape"
      op: "Reshape"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/attention_bias_to_padding/Squeeze"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/pad_reduce/get_ids/Reshape/shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/pad_reduce/get_ids/Less/y"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_f"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 9.999999717180685e-10
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/pad_reduce/get_ids/Less"
      op: "Less"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/pad_reduce/get_ids/Reshape"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/pad_reduce/get_ids/Less/y"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/pad_reduce/get_ids/Where"
      op: "Where"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/pad_reduce/get_ids/Less"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/pad_reduce/get_ids/ToInt32"
      op: "Cast"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/pad_reduce/get_ids/Where"
      attr {
        key: "DstT"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "SrcT"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/pad_reduce/get_ids/Shape"
      op: "Shape"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/pad_reduce/get_ids/Reshape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/pad_reduce/get_ids/strided_slice/stack"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_f"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/pad_reduce/get_ids/strided_slice/stack_1"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_f"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/pad_reduce/get_ids/strided_slice/stack_2"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_f"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/pad_reduce/get_ids/strided_slice"
      op: "StridedSlice"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/pad_reduce/get_ids/Shape"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/pad_reduce/get_ids/strided_slice/stack"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/pad_reduce/get_ids/strided_slice/stack_1"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/pad_reduce/get_ids/strided_slice/stack_2"
      attr {
        key: "Index"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "begin_mask"
        value {
          i: 1
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/layer_prepostprocess/Shape"
      op: "Shape"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/add_timing_signal_1d/add"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/layer_prepostprocess/strided_slice/stack"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_f"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/layer_prepostprocess/strided_slice/stack_1"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_f"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/layer_prepostprocess/strided_slice/stack_2"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_f"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/layer_prepostprocess/strided_slice"
      op: "StridedSlice"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/layer_prepostprocess/Shape"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/layer_prepostprocess/strided_slice/stack"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/layer_prepostprocess/strided_slice/stack_1"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/layer_prepostprocess/strided_slice/stack_2"
      attr {
        key: "Index"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "shrink_axis_mask"
        value {
          i: 1
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/layer_prepostprocess/strided_slice_1/stack"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_f"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/layer_prepostprocess/strided_slice_1/stack_1"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_f"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 2
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/layer_prepostprocess/strided_slice_1/stack_2"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_f"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/layer_prepostprocess/strided_slice_1"
      op: "StridedSlice"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/layer_prepostprocess/Shape"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/layer_prepostprocess/strided_slice_1/stack"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/layer_prepostprocess/strided_slice_1/stack_1"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/layer_prepostprocess/strided_slice_1/stack_2"
      attr {
        key: "Index"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "shrink_axis_mask"
        value {
          i: 1
        }
      }
    }
    node {
      name: "cs_similarity_transformer/body/string_embedding/encoder/layer_0/self_attention/layer_prepostprocess/layer_norm/layer_norm_scale/Initializer/ones"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@cs_similarity_transformer/body/string_embedding/encoder/layer_0/self_attention/layer_prepostprocess/layer_norm/layer_norm_scale"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
              dim {
                size: 128
              }
            }
            float_val: 1.0
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/body/string_embedding/encoder/layer_0/self_attention/layer_prepostprocess/layer_norm/layer_norm_scale"
      op: "VarHandleOp"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@cs_similarity_transformer/body/string_embedding/encoder/layer_0/self_attention/layer_prepostprocess/layer_norm/layer_norm_scale"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 128
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: "cs_similarity_transformer/body/string_embedding/encoder/layer_0/self_attention/layer_prepostprocess/layer_norm/layer_norm_scale"
        }
      }
    }
    node {
      name: "cs_similarity_transformer/body/string_embedding/encoder/layer_0/self_attention/layer_prepostprocess/layer_norm/layer_norm_scale/IsInitialized/VarIsInitializedOp"
      op: "VarIsInitializedOp"
      input: "cs_similarity_transformer/body/string_embedding/encoder/layer_0/self_attention/layer_prepostprocess/layer_norm/layer_norm_scale"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/body/string_embedding/encoder/layer_0/self_attention/layer_prepostprocess/layer_norm/layer_norm_scale/Assign"
      op: "AssignVariableOp"
      input: "cs_similarity_transformer/body/string_embedding/encoder/layer_0/self_attention/layer_prepostprocess/layer_norm/layer_norm_scale"
      input: "cs_similarity_transformer/body/string_embedding/encoder/layer_0/self_attention/layer_prepostprocess/layer_norm/layer_norm_scale/Initializer/ones"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@cs_similarity_transformer/body/string_embedding/encoder/layer_0/self_attention/layer_prepostprocess/layer_norm/layer_norm_scale"
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "cs_similarity_transformer/body/string_embedding/encoder/layer_0/self_attention/layer_prepostprocess/layer_norm/layer_norm_scale/Read/ReadVariableOp"
      op: "ReadVariableOp"
      input: "cs_similarity_transformer/body/string_embedding/encoder/layer_0/self_attention/layer_prepostprocess/layer_norm/layer_norm_scale"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@cs_similarity_transformer/body/string_embedding/encoder/layer_0/self_attention/layer_prepostprocess/layer_norm/layer_norm_scale"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "Read_44/ReadVariableOp"
      op: "ReadVariableOp"
      input: "Read_44/ReadVariableOp/Switch"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "Read_44/ReadVariableOp/Switch"
      op: "Switch"
      input: "cs_similarity_transformer/body/string_embedding/encoder/layer_0/self_attention/layer_prepostprocess/layer_norm/layer_norm_scale"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/pred_id"
      attr {
        key: "T"
        value {
          type: DT_RESOURCE
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@cs_similarity_transformer/body/string_embedding/encoder/layer_0/self_attention/layer_prepostprocess/layer_norm/layer_norm_scale"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
            shape {
            }
          }
        }
      }
    }
    node {
      name: "Identity_44"
      op: "Identity"
      input: "Read_44/ReadVariableOp"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/body/string_embedding/encoder/layer_0/self_attention/layer_prepostprocess/layer_norm/layer_norm_bias/Initializer/zeros"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@cs_similarity_transformer/body/string_embedding/encoder/layer_0/self_attention/layer_prepostprocess/layer_norm/layer_norm_bias"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
              dim {
                size: 128
              }
            }
            float_val: 0.0
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/body/string_embedding/encoder/layer_0/self_attention/layer_prepostprocess/layer_norm/layer_norm_bias"
      op: "VarHandleOp"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@cs_similarity_transformer/body/string_embedding/encoder/layer_0/self_attention/layer_prepostprocess/layer_norm/layer_norm_bias"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 128
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: "cs_similarity_transformer/body/string_embedding/encoder/layer_0/self_attention/layer_prepostprocess/layer_norm/layer_norm_bias"
        }
      }
    }
    node {
      name: "cs_similarity_transformer/body/string_embedding/encoder/layer_0/self_attention/layer_prepostprocess/layer_norm/layer_norm_bias/IsInitialized/VarIsInitializedOp"
      op: "VarIsInitializedOp"
      input: "cs_similarity_transformer/body/string_embedding/encoder/layer_0/self_attention/layer_prepostprocess/layer_norm/layer_norm_bias"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/body/string_embedding/encoder/layer_0/self_attention/layer_prepostprocess/layer_norm/layer_norm_bias/Assign"
      op: "AssignVariableOp"
      input: "cs_similarity_transformer/body/string_embedding/encoder/layer_0/self_attention/layer_prepostprocess/layer_norm/layer_norm_bias"
      input: "cs_similarity_transformer/body/string_embedding/encoder/layer_0/self_attention/layer_prepostprocess/layer_norm/layer_norm_bias/Initializer/zeros"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@cs_similarity_transformer/body/string_embedding/encoder/layer_0/self_attention/layer_prepostprocess/layer_norm/layer_norm_bias"
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "cs_similarity_transformer/body/string_embedding/encoder/layer_0/self_attention/layer_prepostprocess/layer_norm/layer_norm_bias/Read/ReadVariableOp"
      op: "ReadVariableOp"
      input: "cs_similarity_transformer/body/string_embedding/encoder/layer_0/self_attention/layer_prepostprocess/layer_norm/layer_norm_bias"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@cs_similarity_transformer/body/string_embedding/encoder/layer_0/self_attention/layer_prepostprocess/layer_norm/layer_norm_bias"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "Read_45/ReadVariableOp"
      op: "ReadVariableOp"
      input: "Read_45/ReadVariableOp/Switch"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "Read_45/ReadVariableOp/Switch"
      op: "Switch"
      input: "cs_similarity_transformer/body/string_embedding/encoder/layer_0/self_attention/layer_prepostprocess/layer_norm/layer_norm_bias"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/pred_id"
      attr {
        key: "T"
        value {
          type: DT_RESOURCE
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@cs_similarity_transformer/body/string_embedding/encoder/layer_0/self_attention/layer_prepostprocess/layer_norm/layer_norm_bias"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
            shape {
            }
          }
        }
      }
    }
    node {
      name: "Identity_45"
      op: "Identity"
      input: "Read_45/ReadVariableOp"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/layer_prepostprocess/layer_norm/Const"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_f"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 9.999999974752427e-07
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/layer_prepostprocess/layer_norm/Mean/reduction_indices"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_f"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: -1
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/layer_prepostprocess/layer_norm/Mean"
      op: "Mean"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/add_timing_signal_1d/add"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/layer_prepostprocess/layer_norm/Mean/reduction_indices"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: true
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/layer_prepostprocess/layer_norm/sub"
      op: "Sub"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/add_timing_signal_1d/add"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/layer_prepostprocess/layer_norm/Mean"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: -1
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/layer_prepostprocess/layer_norm/Square"
      op: "Square"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/layer_prepostprocess/layer_norm/sub"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: -1
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/layer_prepostprocess/layer_norm/Mean_1/reduction_indices"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_f"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: -1
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/layer_prepostprocess/layer_norm/Mean_1"
      op: "Mean"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/layer_prepostprocess/layer_norm/Square"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/layer_prepostprocess/layer_norm/Mean_1/reduction_indices"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: true
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/layer_prepostprocess/layer_norm/sub_1"
      op: "Sub"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/add_timing_signal_1d/add"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/layer_prepostprocess/layer_norm/Mean"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: -1
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/layer_prepostprocess/layer_norm/add"
      op: "Add"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/layer_prepostprocess/layer_norm/Mean_1"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/layer_prepostprocess/layer_norm/Const"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/layer_prepostprocess/layer_norm/Rsqrt"
      op: "Rsqrt"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/layer_prepostprocess/layer_norm/add"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/layer_prepostprocess/layer_norm/mul"
      op: "Mul"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/layer_prepostprocess/layer_norm/sub_1"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/layer_prepostprocess/layer_norm/Rsqrt"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: -1
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/layer_prepostprocess/layer_norm/mul_1"
      op: "Mul"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/layer_prepostprocess/layer_norm/mul"
      input: "Identity_44"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: -1
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/layer_prepostprocess/layer_norm/add_1"
      op: "Add"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/layer_prepostprocess/layer_norm/mul_1"
      input: "Identity_45"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: -1
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/body/string_embedding/encoder/layer_0/self_attention/multihead_attention/q/kernel/Initializer/random_uniform/shape"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@cs_similarity_transformer/body/string_embedding/encoder/layer_0/self_attention/multihead_attention/q/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 2
              }
            }
            tensor_content: "\200\000\000\000\200\000\000\000"
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/body/string_embedding/encoder/layer_0/self_attention/multihead_attention/q/kernel/Initializer/random_uniform/min"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@cs_similarity_transformer/body/string_embedding/encoder/layer_0/self_attention/multihead_attention/q/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: -0.1530931144952774
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/body/string_embedding/encoder/layer_0/self_attention/multihead_attention/q/kernel/Initializer/random_uniform/max"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@cs_similarity_transformer/body/string_embedding/encoder/layer_0/self_attention/multihead_attention/q/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.1530931144952774
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/body/string_embedding/encoder/layer_0/self_attention/multihead_attention/q/kernel/Initializer/random_uniform/RandomUniform"
      op: "RandomUniform"
      input: "cs_similarity_transformer/body/string_embedding/encoder/layer_0/self_attention/multihead_attention/q/kernel/Initializer/random_uniform/shape"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@cs_similarity_transformer/body/string_embedding/encoder/layer_0/self_attention/multihead_attention/q/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "cs_similarity_transformer/body/string_embedding/encoder/layer_0/self_attention/multihead_attention/q/kernel/Initializer/random_uniform/sub"
      op: "Sub"
      input: "cs_similarity_transformer/body/string_embedding/encoder/layer_0/self_attention/multihead_attention/q/kernel/Initializer/random_uniform/max"
      input: "cs_similarity_transformer/body/string_embedding/encoder/layer_0/self_attention/multihead_attention/q/kernel/Initializer/random_uniform/min"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@cs_similarity_transformer/body/string_embedding/encoder/layer_0/self_attention/multihead_attention/q/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/body/string_embedding/encoder/layer_0/self_attention/multihead_attention/q/kernel/Initializer/random_uniform/mul"
      op: "Mul"
      input: "cs_similarity_transformer/body/string_embedding/encoder/layer_0/self_attention/multihead_attention/q/kernel/Initializer/random_uniform/RandomUniform"
      input: "cs_similarity_transformer/body/string_embedding/encoder/layer_0/self_attention/multihead_attention/q/kernel/Initializer/random_uniform/sub"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@cs_similarity_transformer/body/string_embedding/encoder/layer_0/self_attention/multihead_attention/q/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/body/string_embedding/encoder/layer_0/self_attention/multihead_attention/q/kernel/Initializer/random_uniform"
      op: "Add"
      input: "cs_similarity_transformer/body/string_embedding/encoder/layer_0/self_attention/multihead_attention/q/kernel/Initializer/random_uniform/mul"
      input: "cs_similarity_transformer/body/string_embedding/encoder/layer_0/self_attention/multihead_attention/q/kernel/Initializer/random_uniform/min"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@cs_similarity_transformer/body/string_embedding/encoder/layer_0/self_attention/multihead_attention/q/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/body/string_embedding/encoder/layer_0/self_attention/multihead_attention/q/kernel"
      op: "VarHandleOp"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@cs_similarity_transformer/body/string_embedding/encoder/layer_0/self_attention/multihead_attention/q/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 128
            }
            dim {
              size: 128
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: "cs_similarity_transformer/body/string_embedding/encoder/layer_0/self_attention/multihead_attention/q/kernel"
        }
      }
    }
    node {
      name: "cs_similarity_transformer/body/string_embedding/encoder/layer_0/self_attention/multihead_attention/q/kernel/IsInitialized/VarIsInitializedOp"
      op: "VarIsInitializedOp"
      input: "cs_similarity_transformer/body/string_embedding/encoder/layer_0/self_attention/multihead_attention/q/kernel"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/body/string_embedding/encoder/layer_0/self_attention/multihead_attention/q/kernel/Assign"
      op: "AssignVariableOp"
      input: "cs_similarity_transformer/body/string_embedding/encoder/layer_0/self_attention/multihead_attention/q/kernel"
      input: "cs_similarity_transformer/body/string_embedding/encoder/layer_0/self_attention/multihead_attention/q/kernel/Initializer/random_uniform"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@cs_similarity_transformer/body/string_embedding/encoder/layer_0/self_attention/multihead_attention/q/kernel"
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "cs_similarity_transformer/body/string_embedding/encoder/layer_0/self_attention/multihead_attention/q/kernel/Read/ReadVariableOp"
      op: "ReadVariableOp"
      input: "cs_similarity_transformer/body/string_embedding/encoder/layer_0/self_attention/multihead_attention/q/kernel"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@cs_similarity_transformer/body/string_embedding/encoder/layer_0/self_attention/multihead_attention/q/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "Read_46/ReadVariableOp"
      op: "ReadVariableOp"
      input: "Read_46/ReadVariableOp/Switch"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "Read_46/ReadVariableOp/Switch"
      op: "Switch"
      input: "cs_similarity_transformer/body/string_embedding/encoder/layer_0/self_attention/multihead_attention/q/kernel"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/pred_id"
      attr {
        key: "T"
        value {
          type: DT_RESOURCE
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@cs_similarity_transformer/body/string_embedding/encoder/layer_0/self_attention/multihead_attention/q/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
            shape {
            }
          }
        }
      }
    }
    node {
      name: "Identity_46"
      op: "Identity"
      input: "Read_46/ReadVariableOp"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/q/Tensordot/Shape"
      op: "Shape"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/layer_prepostprocess/layer_norm/add_1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/q/Tensordot/Rank"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_f"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 3
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/q/Tensordot/axes"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_f"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 2
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/q/Tensordot/GreaterEqual/y"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_f"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/q/Tensordot/GreaterEqual"
      op: "GreaterEqual"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/q/Tensordot/axes"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/q/Tensordot/GreaterEqual/y"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/q/Tensordot/Cast"
      op: "Cast"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/q/Tensordot/GreaterEqual"
      attr {
        key: "DstT"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "SrcT"
        value {
          type: DT_BOOL
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/q/Tensordot/mul"
      op: "Mul"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/q/Tensordot/Cast"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/q/Tensordot/axes"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/q/Tensordot/Less/y"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_f"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/q/Tensordot/Less"
      op: "Less"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/q/Tensordot/axes"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/q/Tensordot/Less/y"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/q/Tensordot/Cast_1"
      op: "Cast"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/q/Tensordot/Less"
      attr {
        key: "DstT"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "SrcT"
        value {
          type: DT_BOOL
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/q/Tensordot/add"
      op: "Add"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/q/Tensordot/axes"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/q/Tensordot/Rank"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/q/Tensordot/mul_1"
      op: "Mul"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/q/Tensordot/Cast_1"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/q/Tensordot/add"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/q/Tensordot/add_1"
      op: "Add"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/q/Tensordot/mul"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/q/Tensordot/mul_1"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/q/Tensordot/range/start"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_f"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/q/Tensordot/range/delta"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_f"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/q/Tensordot/range"
      op: "Range"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/q/Tensordot/range/start"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/q/Tensordot/Rank"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/q/Tensordot/range/delta"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/q/Tensordot/ListDiff"
      op: "ListDiff"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/q/Tensordot/range"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/q/Tensordot/add_1"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/q/Tensordot/GatherV2/axis"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_f"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/q/Tensordot/GatherV2"
      op: "GatherV2"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/q/Tensordot/Shape"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/q/Tensordot/ListDiff"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/q/Tensordot/GatherV2/axis"
      attr {
        key: "Taxis"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "Tindices"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "Tparams"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/q/Tensordot/GatherV2_1/axis"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_f"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/q/Tensordot/GatherV2_1"
      op: "GatherV2"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/q/Tensordot/Shape"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/q/Tensordot/add_1"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/q/Tensordot/GatherV2_1/axis"
      attr {
        key: "Taxis"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "Tindices"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "Tparams"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/q/Tensordot/Const"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_f"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/q/Tensordot/Prod"
      op: "Prod"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/q/Tensordot/GatherV2"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/q/Tensordot/Const"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/q/Tensordot/Const_1"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_f"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/q/Tensordot/Prod_1"
      op: "Prod"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/q/Tensordot/GatherV2_1"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/q/Tensordot/Const_1"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/q/Tensordot/concat/axis"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_f"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/q/Tensordot/concat"
      op: "ConcatV2"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/q/Tensordot/GatherV2_1"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/q/Tensordot/GatherV2"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/q/Tensordot/concat/axis"
      attr {
        key: "N"
        value {
          i: 2
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/q/Tensordot/concat_1/axis"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_f"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/q/Tensordot/concat_1"
      op: "ConcatV2"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/q/Tensordot/ListDiff"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/q/Tensordot/add_1"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/q/Tensordot/concat_1/axis"
      attr {
        key: "N"
        value {
          i: 2
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/q/Tensordot/stack"
      op: "Pack"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/q/Tensordot/Prod"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/q/Tensordot/Prod_1"
      attr {
        key: "N"
        value {
          i: 2
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/q/Tensordot/transpose"
      op: "Transpose"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/layer_prepostprocess/layer_norm/add_1"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/q/Tensordot/concat_1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: -1
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/q/Tensordot/Reshape"
      op: "Reshape"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/q/Tensordot/transpose"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/q/Tensordot/stack"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/q/Tensordot/transpose_1/perm"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_f"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 2
              }
            }
            tensor_content: "\000\000\000\000\001\000\000\000"
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/q/Tensordot/transpose_1"
      op: "Transpose"
      input: "Identity_46"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/q/Tensordot/transpose_1/perm"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/q/Tensordot/Reshape_1/shape"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_f"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 2
              }
            }
            tensor_content: "\200\000\000\000\200\000\000\000"
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/q/Tensordot/Reshape_1"
      op: "Reshape"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/q/Tensordot/transpose_1"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/q/Tensordot/Reshape_1/shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/q/Tensordot/MatMul"
      op: "MatMul"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/q/Tensordot/Reshape"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/q/Tensordot/Reshape_1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/q/Tensordot/Const_2"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_f"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 128
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/q/Tensordot/concat_2/axis"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_f"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/q/Tensordot/concat_2"
      op: "ConcatV2"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/q/Tensordot/GatherV2"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/q/Tensordot/Const_2"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/q/Tensordot/concat_2/axis"
      attr {
        key: "N"
        value {
          i: 2
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/q/Tensordot"
      op: "Reshape"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/q/Tensordot/MatMul"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/q/Tensordot/concat_2"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: -1
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/body/string_embedding/encoder/layer_0/self_attention/multihead_attention/k/kernel/Initializer/random_uniform/shape"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@cs_similarity_transformer/body/string_embedding/encoder/layer_0/self_attention/multihead_attention/k/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 2
              }
            }
            tensor_content: "\200\000\000\000\200\000\000\000"
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/body/string_embedding/encoder/layer_0/self_attention/multihead_attention/k/kernel/Initializer/random_uniform/min"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@cs_similarity_transformer/body/string_embedding/encoder/layer_0/self_attention/multihead_attention/k/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: -0.1530931144952774
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/body/string_embedding/encoder/layer_0/self_attention/multihead_attention/k/kernel/Initializer/random_uniform/max"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@cs_similarity_transformer/body/string_embedding/encoder/layer_0/self_attention/multihead_attention/k/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.1530931144952774
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/body/string_embedding/encoder/layer_0/self_attention/multihead_attention/k/kernel/Initializer/random_uniform/RandomUniform"
      op: "RandomUniform"
      input: "cs_similarity_transformer/body/string_embedding/encoder/layer_0/self_attention/multihead_attention/k/kernel/Initializer/random_uniform/shape"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@cs_similarity_transformer/body/string_embedding/encoder/layer_0/self_attention/multihead_attention/k/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "cs_similarity_transformer/body/string_embedding/encoder/layer_0/self_attention/multihead_attention/k/kernel/Initializer/random_uniform/sub"
      op: "Sub"
      input: "cs_similarity_transformer/body/string_embedding/encoder/layer_0/self_attention/multihead_attention/k/kernel/Initializer/random_uniform/max"
      input: "cs_similarity_transformer/body/string_embedding/encoder/layer_0/self_attention/multihead_attention/k/kernel/Initializer/random_uniform/min"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@cs_similarity_transformer/body/string_embedding/encoder/layer_0/self_attention/multihead_attention/k/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/body/string_embedding/encoder/layer_0/self_attention/multihead_attention/k/kernel/Initializer/random_uniform/mul"
      op: "Mul"
      input: "cs_similarity_transformer/body/string_embedding/encoder/layer_0/self_attention/multihead_attention/k/kernel/Initializer/random_uniform/RandomUniform"
      input: "cs_similarity_transformer/body/string_embedding/encoder/layer_0/self_attention/multihead_attention/k/kernel/Initializer/random_uniform/sub"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@cs_similarity_transformer/body/string_embedding/encoder/layer_0/self_attention/multihead_attention/k/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/body/string_embedding/encoder/layer_0/self_attention/multihead_attention/k/kernel/Initializer/random_uniform"
      op: "Add"
      input: "cs_similarity_transformer/body/string_embedding/encoder/layer_0/self_attention/multihead_attention/k/kernel/Initializer/random_uniform/mul"
      input: "cs_similarity_transformer/body/string_embedding/encoder/layer_0/self_attention/multihead_attention/k/kernel/Initializer/random_uniform/min"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@cs_similarity_transformer/body/string_embedding/encoder/layer_0/self_attention/multihead_attention/k/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/body/string_embedding/encoder/layer_0/self_attention/multihead_attention/k/kernel"
      op: "VarHandleOp"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@cs_similarity_transformer/body/string_embedding/encoder/layer_0/self_attention/multihead_attention/k/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 128
            }
            dim {
              size: 128
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: "cs_similarity_transformer/body/string_embedding/encoder/layer_0/self_attention/multihead_attention/k/kernel"
        }
      }
    }
    node {
      name: "cs_similarity_transformer/body/string_embedding/encoder/layer_0/self_attention/multihead_attention/k/kernel/IsInitialized/VarIsInitializedOp"
      op: "VarIsInitializedOp"
      input: "cs_similarity_transformer/body/string_embedding/encoder/layer_0/self_attention/multihead_attention/k/kernel"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/body/string_embedding/encoder/layer_0/self_attention/multihead_attention/k/kernel/Assign"
      op: "AssignVariableOp"
      input: "cs_similarity_transformer/body/string_embedding/encoder/layer_0/self_attention/multihead_attention/k/kernel"
      input: "cs_similarity_transformer/body/string_embedding/encoder/layer_0/self_attention/multihead_attention/k/kernel/Initializer/random_uniform"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@cs_similarity_transformer/body/string_embedding/encoder/layer_0/self_attention/multihead_attention/k/kernel"
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "cs_similarity_transformer/body/string_embedding/encoder/layer_0/self_attention/multihead_attention/k/kernel/Read/ReadVariableOp"
      op: "ReadVariableOp"
      input: "cs_similarity_transformer/body/string_embedding/encoder/layer_0/self_attention/multihead_attention/k/kernel"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@cs_similarity_transformer/body/string_embedding/encoder/layer_0/self_attention/multihead_attention/k/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "Read_47/ReadVariableOp"
      op: "ReadVariableOp"
      input: "Read_47/ReadVariableOp/Switch"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "Read_47/ReadVariableOp/Switch"
      op: "Switch"
      input: "cs_similarity_transformer/body/string_embedding/encoder/layer_0/self_attention/multihead_attention/k/kernel"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/pred_id"
      attr {
        key: "T"
        value {
          type: DT_RESOURCE
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@cs_similarity_transformer/body/string_embedding/encoder/layer_0/self_attention/multihead_attention/k/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
            shape {
            }
          }
        }
      }
    }
    node {
      name: "Identity_47"
      op: "Identity"
      input: "Read_47/ReadVariableOp"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/k/Tensordot/Shape"
      op: "Shape"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/layer_prepostprocess/layer_norm/add_1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/k/Tensordot/Rank"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_f"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 3
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/k/Tensordot/axes"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_f"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 2
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/k/Tensordot/GreaterEqual/y"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_f"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/k/Tensordot/GreaterEqual"
      op: "GreaterEqual"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/k/Tensordot/axes"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/k/Tensordot/GreaterEqual/y"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/k/Tensordot/Cast"
      op: "Cast"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/k/Tensordot/GreaterEqual"
      attr {
        key: "DstT"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "SrcT"
        value {
          type: DT_BOOL
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/k/Tensordot/mul"
      op: "Mul"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/k/Tensordot/Cast"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/k/Tensordot/axes"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/k/Tensordot/Less/y"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_f"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/k/Tensordot/Less"
      op: "Less"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/k/Tensordot/axes"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/k/Tensordot/Less/y"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/k/Tensordot/Cast_1"
      op: "Cast"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/k/Tensordot/Less"
      attr {
        key: "DstT"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "SrcT"
        value {
          type: DT_BOOL
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/k/Tensordot/add"
      op: "Add"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/k/Tensordot/axes"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/k/Tensordot/Rank"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/k/Tensordot/mul_1"
      op: "Mul"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/k/Tensordot/Cast_1"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/k/Tensordot/add"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/k/Tensordot/add_1"
      op: "Add"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/k/Tensordot/mul"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/k/Tensordot/mul_1"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/k/Tensordot/range/start"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_f"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/k/Tensordot/range/delta"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_f"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/k/Tensordot/range"
      op: "Range"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/k/Tensordot/range/start"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/k/Tensordot/Rank"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/k/Tensordot/range/delta"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/k/Tensordot/ListDiff"
      op: "ListDiff"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/k/Tensordot/range"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/k/Tensordot/add_1"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/k/Tensordot/GatherV2/axis"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_f"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/k/Tensordot/GatherV2"
      op: "GatherV2"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/k/Tensordot/Shape"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/k/Tensordot/ListDiff"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/k/Tensordot/GatherV2/axis"
      attr {
        key: "Taxis"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "Tindices"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "Tparams"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/k/Tensordot/GatherV2_1/axis"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_f"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/k/Tensordot/GatherV2_1"
      op: "GatherV2"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/k/Tensordot/Shape"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/k/Tensordot/add_1"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/k/Tensordot/GatherV2_1/axis"
      attr {
        key: "Taxis"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "Tindices"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "Tparams"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/k/Tensordot/Const"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_f"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/k/Tensordot/Prod"
      op: "Prod"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/k/Tensordot/GatherV2"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/k/Tensordot/Const"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/k/Tensordot/Const_1"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_f"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/k/Tensordot/Prod_1"
      op: "Prod"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/k/Tensordot/GatherV2_1"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/k/Tensordot/Const_1"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/k/Tensordot/concat/axis"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_f"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/k/Tensordot/concat"
      op: "ConcatV2"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/k/Tensordot/GatherV2_1"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/k/Tensordot/GatherV2"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/k/Tensordot/concat/axis"
      attr {
        key: "N"
        value {
          i: 2
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/k/Tensordot/concat_1/axis"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_f"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/k/Tensordot/concat_1"
      op: "ConcatV2"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/k/Tensordot/ListDiff"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/k/Tensordot/add_1"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/k/Tensordot/concat_1/axis"
      attr {
        key: "N"
        value {
          i: 2
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/k/Tensordot/stack"
      op: "Pack"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/k/Tensordot/Prod"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/k/Tensordot/Prod_1"
      attr {
        key: "N"
        value {
          i: 2
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/k/Tensordot/transpose"
      op: "Transpose"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/layer_prepostprocess/layer_norm/add_1"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/k/Tensordot/concat_1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: -1
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/k/Tensordot/Reshape"
      op: "Reshape"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/k/Tensordot/transpose"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/k/Tensordot/stack"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/k/Tensordot/transpose_1/perm"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_f"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 2
              }
            }
            tensor_content: "\000\000\000\000\001\000\000\000"
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/k/Tensordot/transpose_1"
      op: "Transpose"
      input: "Identity_47"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/k/Tensordot/transpose_1/perm"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/k/Tensordot/Reshape_1/shape"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_f"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 2
              }
            }
            tensor_content: "\200\000\000\000\200\000\000\000"
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/k/Tensordot/Reshape_1"
      op: "Reshape"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/k/Tensordot/transpose_1"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/k/Tensordot/Reshape_1/shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/k/Tensordot/MatMul"
      op: "MatMul"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/k/Tensordot/Reshape"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/k/Tensordot/Reshape_1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/k/Tensordot/Const_2"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_f"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 128
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/k/Tensordot/concat_2/axis"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_f"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/k/Tensordot/concat_2"
      op: "ConcatV2"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/k/Tensordot/GatherV2"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/k/Tensordot/Const_2"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/k/Tensordot/concat_2/axis"
      attr {
        key: "N"
        value {
          i: 2
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/k/Tensordot"
      op: "Reshape"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/k/Tensordot/MatMul"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/k/Tensordot/concat_2"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: -1
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/body/string_embedding/encoder/layer_0/self_attention/multihead_attention/v/kernel/Initializer/random_uniform/shape"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@cs_similarity_transformer/body/string_embedding/encoder/layer_0/self_attention/multihead_attention/v/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 2
              }
            }
            tensor_content: "\200\000\000\000\200\000\000\000"
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/body/string_embedding/encoder/layer_0/self_attention/multihead_attention/v/kernel/Initializer/random_uniform/min"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@cs_similarity_transformer/body/string_embedding/encoder/layer_0/self_attention/multihead_attention/v/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: -0.1530931144952774
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/body/string_embedding/encoder/layer_0/self_attention/multihead_attention/v/kernel/Initializer/random_uniform/max"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@cs_similarity_transformer/body/string_embedding/encoder/layer_0/self_attention/multihead_attention/v/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.1530931144952774
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/body/string_embedding/encoder/layer_0/self_attention/multihead_attention/v/kernel/Initializer/random_uniform/RandomUniform"
      op: "RandomUniform"
      input: "cs_similarity_transformer/body/string_embedding/encoder/layer_0/self_attention/multihead_attention/v/kernel/Initializer/random_uniform/shape"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@cs_similarity_transformer/body/string_embedding/encoder/layer_0/self_attention/multihead_attention/v/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "cs_similarity_transformer/body/string_embedding/encoder/layer_0/self_attention/multihead_attention/v/kernel/Initializer/random_uniform/sub"
      op: "Sub"
      input: "cs_similarity_transformer/body/string_embedding/encoder/layer_0/self_attention/multihead_attention/v/kernel/Initializer/random_uniform/max"
      input: "cs_similarity_transformer/body/string_embedding/encoder/layer_0/self_attention/multihead_attention/v/kernel/Initializer/random_uniform/min"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@cs_similarity_transformer/body/string_embedding/encoder/layer_0/self_attention/multihead_attention/v/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/body/string_embedding/encoder/layer_0/self_attention/multihead_attention/v/kernel/Initializer/random_uniform/mul"
      op: "Mul"
      input: "cs_similarity_transformer/body/string_embedding/encoder/layer_0/self_attention/multihead_attention/v/kernel/Initializer/random_uniform/RandomUniform"
      input: "cs_similarity_transformer/body/string_embedding/encoder/layer_0/self_attention/multihead_attention/v/kernel/Initializer/random_uniform/sub"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@cs_similarity_transformer/body/string_embedding/encoder/layer_0/self_attention/multihead_attention/v/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/body/string_embedding/encoder/layer_0/self_attention/multihead_attention/v/kernel/Initializer/random_uniform"
      op: "Add"
      input: "cs_similarity_transformer/body/string_embedding/encoder/layer_0/self_attention/multihead_attention/v/kernel/Initializer/random_uniform/mul"
      input: "cs_similarity_transformer/body/string_embedding/encoder/layer_0/self_attention/multihead_attention/v/kernel/Initializer/random_uniform/min"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@cs_similarity_transformer/body/string_embedding/encoder/layer_0/self_attention/multihead_attention/v/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/body/string_embedding/encoder/layer_0/self_attention/multihead_attention/v/kernel"
      op: "VarHandleOp"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@cs_similarity_transformer/body/string_embedding/encoder/layer_0/self_attention/multihead_attention/v/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 128
            }
            dim {
              size: 128
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: "cs_similarity_transformer/body/string_embedding/encoder/layer_0/self_attention/multihead_attention/v/kernel"
        }
      }
    }
    node {
      name: "cs_similarity_transformer/body/string_embedding/encoder/layer_0/self_attention/multihead_attention/v/kernel/IsInitialized/VarIsInitializedOp"
      op: "VarIsInitializedOp"
      input: "cs_similarity_transformer/body/string_embedding/encoder/layer_0/self_attention/multihead_attention/v/kernel"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/body/string_embedding/encoder/layer_0/self_attention/multihead_attention/v/kernel/Assign"
      op: "AssignVariableOp"
      input: "cs_similarity_transformer/body/string_embedding/encoder/layer_0/self_attention/multihead_attention/v/kernel"
      input: "cs_similarity_transformer/body/string_embedding/encoder/layer_0/self_attention/multihead_attention/v/kernel/Initializer/random_uniform"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@cs_similarity_transformer/body/string_embedding/encoder/layer_0/self_attention/multihead_attention/v/kernel"
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "cs_similarity_transformer/body/string_embedding/encoder/layer_0/self_attention/multihead_attention/v/kernel/Read/ReadVariableOp"
      op: "ReadVariableOp"
      input: "cs_similarity_transformer/body/string_embedding/encoder/layer_0/self_attention/multihead_attention/v/kernel"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@cs_similarity_transformer/body/string_embedding/encoder/layer_0/self_attention/multihead_attention/v/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "Read_48/ReadVariableOp"
      op: "ReadVariableOp"
      input: "Read_48/ReadVariableOp/Switch"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "Read_48/ReadVariableOp/Switch"
      op: "Switch"
      input: "cs_similarity_transformer/body/string_embedding/encoder/layer_0/self_attention/multihead_attention/v/kernel"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/pred_id"
      attr {
        key: "T"
        value {
          type: DT_RESOURCE
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@cs_similarity_transformer/body/string_embedding/encoder/layer_0/self_attention/multihead_attention/v/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
            shape {
            }
          }
        }
      }
    }
    node {
      name: "Identity_48"
      op: "Identity"
      input: "Read_48/ReadVariableOp"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/v/Tensordot/Shape"
      op: "Shape"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/layer_prepostprocess/layer_norm/add_1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/v/Tensordot/Rank"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_f"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 3
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/v/Tensordot/axes"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_f"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 2
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/v/Tensordot/GreaterEqual/y"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_f"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/v/Tensordot/GreaterEqual"
      op: "GreaterEqual"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/v/Tensordot/axes"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/v/Tensordot/GreaterEqual/y"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/v/Tensordot/Cast"
      op: "Cast"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/v/Tensordot/GreaterEqual"
      attr {
        key: "DstT"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "SrcT"
        value {
          type: DT_BOOL
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/v/Tensordot/mul"
      op: "Mul"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/v/Tensordot/Cast"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/v/Tensordot/axes"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/v/Tensordot/Less/y"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_f"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/v/Tensordot/Less"
      op: "Less"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/v/Tensordot/axes"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/v/Tensordot/Less/y"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/v/Tensordot/Cast_1"
      op: "Cast"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/v/Tensordot/Less"
      attr {
        key: "DstT"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "SrcT"
        value {
          type: DT_BOOL
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/v/Tensordot/add"
      op: "Add"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/v/Tensordot/axes"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/v/Tensordot/Rank"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/v/Tensordot/mul_1"
      op: "Mul"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/v/Tensordot/Cast_1"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/v/Tensordot/add"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/v/Tensordot/add_1"
      op: "Add"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/v/Tensordot/mul"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/v/Tensordot/mul_1"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/v/Tensordot/range/start"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_f"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/v/Tensordot/range/delta"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_f"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/v/Tensordot/range"
      op: "Range"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/v/Tensordot/range/start"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/v/Tensordot/Rank"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/v/Tensordot/range/delta"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/v/Tensordot/ListDiff"
      op: "ListDiff"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/v/Tensordot/range"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/v/Tensordot/add_1"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/v/Tensordot/GatherV2/axis"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_f"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/v/Tensordot/GatherV2"
      op: "GatherV2"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/v/Tensordot/Shape"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/v/Tensordot/ListDiff"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/v/Tensordot/GatherV2/axis"
      attr {
        key: "Taxis"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "Tindices"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "Tparams"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/v/Tensordot/GatherV2_1/axis"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_f"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/v/Tensordot/GatherV2_1"
      op: "GatherV2"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/v/Tensordot/Shape"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/v/Tensordot/add_1"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/v/Tensordot/GatherV2_1/axis"
      attr {
        key: "Taxis"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "Tindices"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "Tparams"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/v/Tensordot/Const"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_f"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/v/Tensordot/Prod"
      op: "Prod"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/v/Tensordot/GatherV2"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/v/Tensordot/Const"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/v/Tensordot/Const_1"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_f"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/v/Tensordot/Prod_1"
      op: "Prod"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/v/Tensordot/GatherV2_1"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/v/Tensordot/Const_1"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/v/Tensordot/concat/axis"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_f"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/v/Tensordot/concat"
      op: "ConcatV2"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/v/Tensordot/GatherV2_1"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/v/Tensordot/GatherV2"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/v/Tensordot/concat/axis"
      attr {
        key: "N"
        value {
          i: 2
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/v/Tensordot/concat_1/axis"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_f"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/v/Tensordot/concat_1"
      op: "ConcatV2"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/v/Tensordot/ListDiff"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/v/Tensordot/add_1"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/v/Tensordot/concat_1/axis"
      attr {
        key: "N"
        value {
          i: 2
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/v/Tensordot/stack"
      op: "Pack"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/v/Tensordot/Prod"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/v/Tensordot/Prod_1"
      attr {
        key: "N"
        value {
          i: 2
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/v/Tensordot/transpose"
      op: "Transpose"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/layer_prepostprocess/layer_norm/add_1"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/v/Tensordot/concat_1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: -1
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/v/Tensordot/Reshape"
      op: "Reshape"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/v/Tensordot/transpose"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/v/Tensordot/stack"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/v/Tensordot/transpose_1/perm"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_f"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 2
              }
            }
            tensor_content: "\000\000\000\000\001\000\000\000"
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/v/Tensordot/transpose_1"
      op: "Transpose"
      input: "Identity_48"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/v/Tensordot/transpose_1/perm"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/v/Tensordot/Reshape_1/shape"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_f"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 2
              }
            }
            tensor_content: "\200\000\000\000\200\000\000\000"
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/v/Tensordot/Reshape_1"
      op: "Reshape"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/v/Tensordot/transpose_1"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/v/Tensordot/Reshape_1/shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/v/Tensordot/MatMul"
      op: "MatMul"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/v/Tensordot/Reshape"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/v/Tensordot/Reshape_1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/v/Tensordot/Const_2"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_f"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 128
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/v/Tensordot/concat_2/axis"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_f"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/v/Tensordot/concat_2"
      op: "ConcatV2"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/v/Tensordot/GatherV2"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/v/Tensordot/Const_2"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/v/Tensordot/concat_2/axis"
      attr {
        key: "N"
        value {
          i: 2
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/v/Tensordot"
      op: "Reshape"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/v/Tensordot/MatMul"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/v/Tensordot/concat_2"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: -1
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/split_heads/split_last_dimension/Shape"
      op: "Shape"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/q/Tensordot"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/split_heads/split_last_dimension/strided_slice/stack"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_f"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/split_heads/split_last_dimension/strided_slice/stack_1"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_f"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/split_heads/split_last_dimension/strided_slice/stack_2"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_f"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/split_heads/split_last_dimension/strided_slice"
      op: "StridedSlice"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/split_heads/split_last_dimension/Shape"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/split_heads/split_last_dimension/strided_slice/stack"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/split_heads/split_last_dimension/strided_slice/stack_1"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/split_heads/split_last_dimension/strided_slice/stack_2"
      attr {
        key: "Index"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "shrink_axis_mask"
        value {
          i: 1
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/split_heads/split_last_dimension/strided_slice_1/stack"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_f"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/split_heads/split_last_dimension/strided_slice_1/stack_1"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_f"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 2
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/split_heads/split_last_dimension/strided_slice_1/stack_2"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_f"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/split_heads/split_last_dimension/strided_slice_1"
      op: "StridedSlice"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/split_heads/split_last_dimension/Shape"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/split_heads/split_last_dimension/strided_slice_1/stack"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/split_heads/split_last_dimension/strided_slice_1/stack_1"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/split_heads/split_last_dimension/strided_slice_1/stack_2"
      attr {
        key: "Index"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "shrink_axis_mask"
        value {
          i: 1
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/split_heads/split_last_dimension/Reshape/shape/2"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_f"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 4
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/split_heads/split_last_dimension/Reshape/shape/3"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_f"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 32
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/split_heads/split_last_dimension/Reshape/shape"
      op: "Pack"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/split_heads/split_last_dimension/strided_slice"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/split_heads/split_last_dimension/strided_slice_1"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/split_heads/split_last_dimension/Reshape/shape/2"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/split_heads/split_last_dimension/Reshape/shape/3"
      attr {
        key: "N"
        value {
          i: 4
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 4
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/split_heads/split_last_dimension/Reshape"
      op: "Reshape"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/q/Tensordot"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/split_heads/split_last_dimension/Reshape/shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: -1
              }
              dim {
                size: 4
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/split_heads/transpose/perm"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_f"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 4
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 4
              }
            }
            tensor_content: "\000\000\000\000\002\000\000\000\001\000\000\000\003\000\000\000"
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/split_heads/transpose"
      op: "Transpose"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/split_heads/split_last_dimension/Reshape"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/split_heads/transpose/perm"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 4
              }
              dim {
                size: -1
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/split_heads_1/split_last_dimension/Shape"
      op: "Shape"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/k/Tensordot"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/split_heads_1/split_last_dimension/strided_slice/stack"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_f"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/split_heads_1/split_last_dimension/strided_slice/stack_1"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_f"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/split_heads_1/split_last_dimension/strided_slice/stack_2"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_f"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/split_heads_1/split_last_dimension/strided_slice"
      op: "StridedSlice"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/split_heads_1/split_last_dimension/Shape"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/split_heads_1/split_last_dimension/strided_slice/stack"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/split_heads_1/split_last_dimension/strided_slice/stack_1"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/split_heads_1/split_last_dimension/strided_slice/stack_2"
      attr {
        key: "Index"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "shrink_axis_mask"
        value {
          i: 1
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/split_heads_1/split_last_dimension/strided_slice_1/stack"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_f"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/split_heads_1/split_last_dimension/strided_slice_1/stack_1"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_f"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 2
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/split_heads_1/split_last_dimension/strided_slice_1/stack_2"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_f"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/split_heads_1/split_last_dimension/strided_slice_1"
      op: "StridedSlice"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/split_heads_1/split_last_dimension/Shape"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/split_heads_1/split_last_dimension/strided_slice_1/stack"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/split_heads_1/split_last_dimension/strided_slice_1/stack_1"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/split_heads_1/split_last_dimension/strided_slice_1/stack_2"
      attr {
        key: "Index"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "shrink_axis_mask"
        value {
          i: 1
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/split_heads_1/split_last_dimension/Reshape/shape/2"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_f"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 4
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/split_heads_1/split_last_dimension/Reshape/shape/3"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_f"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 32
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/split_heads_1/split_last_dimension/Reshape/shape"
      op: "Pack"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/split_heads_1/split_last_dimension/strided_slice"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/split_heads_1/split_last_dimension/strided_slice_1"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/split_heads_1/split_last_dimension/Reshape/shape/2"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/split_heads_1/split_last_dimension/Reshape/shape/3"
      attr {
        key: "N"
        value {
          i: 4
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 4
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/split_heads_1/split_last_dimension/Reshape"
      op: "Reshape"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/k/Tensordot"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/split_heads_1/split_last_dimension/Reshape/shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: -1
              }
              dim {
                size: 4
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/split_heads_1/transpose/perm"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_f"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 4
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 4
              }
            }
            tensor_content: "\000\000\000\000\002\000\000\000\001\000\000\000\003\000\000\000"
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/split_heads_1/transpose"
      op: "Transpose"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/split_heads_1/split_last_dimension/Reshape"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/split_heads_1/transpose/perm"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 4
              }
              dim {
                size: -1
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/split_heads_2/split_last_dimension/Shape"
      op: "Shape"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/v/Tensordot"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/split_heads_2/split_last_dimension/strided_slice/stack"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_f"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/split_heads_2/split_last_dimension/strided_slice/stack_1"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_f"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/split_heads_2/split_last_dimension/strided_slice/stack_2"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_f"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/split_heads_2/split_last_dimension/strided_slice"
      op: "StridedSlice"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/split_heads_2/split_last_dimension/Shape"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/split_heads_2/split_last_dimension/strided_slice/stack"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/split_heads_2/split_last_dimension/strided_slice/stack_1"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/split_heads_2/split_last_dimension/strided_slice/stack_2"
      attr {
        key: "Index"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "shrink_axis_mask"
        value {
          i: 1
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/split_heads_2/split_last_dimension/strided_slice_1/stack"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_f"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/split_heads_2/split_last_dimension/strided_slice_1/stack_1"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_f"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 2
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/split_heads_2/split_last_dimension/strided_slice_1/stack_2"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_f"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/split_heads_2/split_last_dimension/strided_slice_1"
      op: "StridedSlice"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/split_heads_2/split_last_dimension/Shape"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/split_heads_2/split_last_dimension/strided_slice_1/stack"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/split_heads_2/split_last_dimension/strided_slice_1/stack_1"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/split_heads_2/split_last_dimension/strided_slice_1/stack_2"
      attr {
        key: "Index"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "shrink_axis_mask"
        value {
          i: 1
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/split_heads_2/split_last_dimension/Reshape/shape/2"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_f"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 4
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/split_heads_2/split_last_dimension/Reshape/shape/3"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_f"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 32
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/split_heads_2/split_last_dimension/Reshape/shape"
      op: "Pack"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/split_heads_2/split_last_dimension/strided_slice"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/split_heads_2/split_last_dimension/strided_slice_1"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/split_heads_2/split_last_dimension/Reshape/shape/2"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/split_heads_2/split_last_dimension/Reshape/shape/3"
      attr {
        key: "N"
        value {
          i: 4
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 4
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/split_heads_2/split_last_dimension/Reshape"
      op: "Reshape"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/v/Tensordot"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/split_heads_2/split_last_dimension/Reshape/shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: -1
              }
              dim {
                size: 4
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/split_heads_2/transpose/perm"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_f"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 4
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 4
              }
            }
            tensor_content: "\000\000\000\000\002\000\000\000\001\000\000\000\003\000\000\000"
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/split_heads_2/transpose"
      op: "Transpose"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/split_heads_2/split_last_dimension/Reshape"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/split_heads_2/transpose/perm"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 4
              }
              dim {
                size: -1
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/mul/y"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_f"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.1767766922712326
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/mul"
      op: "Mul"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/split_heads/transpose"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/mul/y"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 4
              }
              dim {
                size: -1
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/dot_product_attention/MatMul"
      op: "BatchMatMul"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/mul"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/split_heads_1/transpose"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 4
              }
              dim {
                size: -1
              }
              dim {
                size: -1
              }
            }
          }
        }
      }
      attr {
        key: "adj_y"
        value {
          b: true
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/dot_product_attention/add"
      op: "Add"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/dot_product_attention/MatMul"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/attention_bias_ignore_padding/ExpandDims_1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 4
              }
              dim {
                size: -1
              }
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/dot_product_attention/attention_weights"
      op: "Softmax"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/dot_product_attention/add"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 4
              }
              dim {
                size: -1
              }
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/dot_product_attention/Shape"
      op: "Shape"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/dot_product_attention/attention_weights"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 4
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/dot_product_attention/strided_slice/stack"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_f"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/dot_product_attention/strided_slice/stack_1"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_f"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/dot_product_attention/strided_slice/stack_2"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_f"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/dot_product_attention/strided_slice"
      op: "StridedSlice"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/dot_product_attention/Shape"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/dot_product_attention/strided_slice/stack"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/dot_product_attention/strided_slice/stack_1"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/dot_product_attention/strided_slice/stack_2"
      attr {
        key: "Index"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "shrink_axis_mask"
        value {
          i: 1
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/dot_product_attention/strided_slice_1/stack"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_f"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 2
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/dot_product_attention/strided_slice_1/stack_1"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_f"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 3
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/dot_product_attention/strided_slice_1/stack_2"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_f"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/dot_product_attention/strided_slice_1"
      op: "StridedSlice"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/dot_product_attention/Shape"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/dot_product_attention/strided_slice_1/stack"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/dot_product_attention/strided_slice_1/stack_1"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/dot_product_attention/strided_slice_1/stack_2"
      attr {
        key: "Index"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "shrink_axis_mask"
        value {
          i: 1
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/dot_product_attention/strided_slice_2/stack"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_f"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 3
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/dot_product_attention/strided_slice_2/stack_1"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_f"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 4
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/dot_product_attention/strided_slice_2/stack_2"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_f"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/dot_product_attention/strided_slice_2"
      op: "StridedSlice"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/dot_product_attention/Shape"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/dot_product_attention/strided_slice_2/stack"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/dot_product_attention/strided_slice_2/stack_1"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/dot_product_attention/strided_slice_2/stack_2"
      attr {
        key: "Index"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "shrink_axis_mask"
        value {
          i: 1
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/dot_product_attention/transpose/perm"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_f"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 4
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 4
              }
            }
            tensor_content: "\000\000\000\000\002\000\000\000\003\000\000\000\001\000\000\000"
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/dot_product_attention/transpose"
      op: "Transpose"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/dot_product_attention/attention_weights"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/dot_product_attention/transpose/perm"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: -1
              }
              dim {
                size: -1
              }
              dim {
                size: 4
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/dot_product_attention/Pow/y"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_f"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.20000000298023224
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/dot_product_attention/Pow"
      op: "Pow"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/dot_product_attention/transpose"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/dot_product_attention/Pow/y"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: -1
              }
              dim {
                size: -1
              }
              dim {
                size: 4
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/dot_product_attention/FloorMod/x"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_f"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: -4
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/dot_product_attention/FloorMod/y"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_f"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 3
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/dot_product_attention/FloorMod"
      op: "FloorMod"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/dot_product_attention/FloorMod/x"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/dot_product_attention/FloorMod/y"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/dot_product_attention/Pad/paddings/3/0"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_f"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/dot_product_attention/Pad/paddings/3"
      op: "Pack"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/dot_product_attention/Pad/paddings/3/0"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/dot_product_attention/FloorMod"
      attr {
        key: "N"
        value {
          i: 2
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/dot_product_attention/Pad/paddings/0_1"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_f"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 2
              }
            }
            tensor_content: "\000\000\000\000\000\000\000\000"
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/dot_product_attention/Pad/paddings/1_1"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_f"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 2
              }
            }
            tensor_content: "\000\000\000\000\000\000\000\000"
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/dot_product_attention/Pad/paddings/2_1"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_f"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 2
              }
            }
            tensor_content: "\000\000\000\000\000\000\000\000"
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/dot_product_attention/Pad/paddings"
      op: "Pack"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/dot_product_attention/Pad/paddings/0_1"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/dot_product_attention/Pad/paddings/1_1"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/dot_product_attention/Pad/paddings/2_1"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/dot_product_attention/Pad/paddings/3"
      attr {
        key: "N"
        value {
          i: 4
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 4
              }
              dim {
                size: 2
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/dot_product_attention/Pad"
      op: "Pad"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/dot_product_attention/Pow"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/dot_product_attention/Pad/paddings"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: -1
              }
              dim {
                size: -1
              }
              dim {
                size: 6
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/dot_product_attention/split_last_dimension/Shape"
      op: "Shape"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/dot_product_attention/Pad"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 4
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/dot_product_attention/split_last_dimension/strided_slice/stack"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_f"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/dot_product_attention/split_last_dimension/strided_slice/stack_1"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_f"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/dot_product_attention/split_last_dimension/strided_slice/stack_2"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_f"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/dot_product_attention/split_last_dimension/strided_slice"
      op: "StridedSlice"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/dot_product_attention/split_last_dimension/Shape"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/dot_product_attention/split_last_dimension/strided_slice/stack"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/dot_product_attention/split_last_dimension/strided_slice/stack_1"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/dot_product_attention/split_last_dimension/strided_slice/stack_2"
      attr {
        key: "Index"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "shrink_axis_mask"
        value {
          i: 1
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/dot_product_attention/split_last_dimension/strided_slice_1/stack"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_f"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/dot_product_attention/split_last_dimension/strided_slice_1/stack_1"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_f"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 2
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/dot_product_attention/split_last_dimension/strided_slice_1/stack_2"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_f"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/dot_product_attention/split_last_dimension/strided_slice_1"
      op: "StridedSlice"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/dot_product_attention/split_last_dimension/Shape"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/dot_product_attention/split_last_dimension/strided_slice_1/stack"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/dot_product_attention/split_last_dimension/strided_slice_1/stack_1"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/dot_product_attention/split_last_dimension/strided_slice_1/stack_2"
      attr {
        key: "Index"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "shrink_axis_mask"
        value {
          i: 1
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/dot_product_attention/split_last_dimension/strided_slice_2/stack"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_f"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 2
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/dot_product_attention/split_last_dimension/strided_slice_2/stack_1"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_f"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 3
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/dot_product_attention/split_last_dimension/strided_slice_2/stack_2"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_f"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/dot_product_attention/split_last_dimension/strided_slice_2"
      op: "StridedSlice"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/dot_product_attention/split_last_dimension/Shape"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/dot_product_attention/split_last_dimension/strided_slice_2/stack"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/dot_product_attention/split_last_dimension/strided_slice_2/stack_1"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/dot_product_attention/split_last_dimension/strided_slice_2/stack_2"
      attr {
        key: "Index"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "shrink_axis_mask"
        value {
          i: 1
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/dot_product_attention/split_last_dimension/Reshape/shape/3"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_f"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 3
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/dot_product_attention/split_last_dimension/Reshape/shape/4"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_f"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 2
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/dot_product_attention/split_last_dimension/Reshape/shape"
      op: "Pack"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/dot_product_attention/split_last_dimension/strided_slice"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/dot_product_attention/split_last_dimension/strided_slice_1"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/dot_product_attention/split_last_dimension/strided_slice_2"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/dot_product_attention/split_last_dimension/Reshape/shape/3"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/dot_product_attention/split_last_dimension/Reshape/shape/4"
      attr {
        key: "N"
        value {
          i: 5
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 5
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/dot_product_attention/split_last_dimension/Reshape"
      op: "Reshape"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/dot_product_attention/Pad"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/dot_product_attention/split_last_dimension/Reshape/shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: -1
              }
              dim {
                size: -1
              }
              dim {
                size: 3
              }
              dim {
                size: 2
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/dot_product_attention/Max/reduction_indices"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_f"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 4
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/dot_product_attention/Max"
      op: "Max"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/dot_product_attention/split_last_dimension/Reshape"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/dot_product_attention/Max/reduction_indices"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: -1
              }
              dim {
                size: -1
              }
              dim {
                size: 3
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/dot_product_attention/attention/tag"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_f"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
            }
            string_val: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/dot_product_attention/attention"
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/dot_product_attention/attention"
      op: "ImageSummary"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/dot_product_attention/attention/tag"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/dot_product_attention/Max"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "max_images"
        value {
          i: 1
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/dot_product_attention/MatMul_1"
      op: "BatchMatMul"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/dot_product_attention/attention_weights"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/split_heads_2/transpose"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 4
              }
              dim {
                size: -1
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/combine_heads/transpose/perm"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_f"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 4
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 4
              }
            }
            tensor_content: "\000\000\000\000\002\000\000\000\001\000\000\000\003\000\000\000"
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/combine_heads/transpose"
      op: "Transpose"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/dot_product_attention/MatMul_1"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/combine_heads/transpose/perm"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: -1
              }
              dim {
                size: 4
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/combine_heads/combine_last_two_dimensions/Shape"
      op: "Shape"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/combine_heads/transpose"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 4
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/combine_heads/combine_last_two_dimensions/strided_slice/stack"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_f"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/combine_heads/combine_last_two_dimensions/strided_slice/stack_1"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_f"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/combine_heads/combine_last_two_dimensions/strided_slice/stack_2"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_f"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/combine_heads/combine_last_two_dimensions/strided_slice"
      op: "StridedSlice"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/combine_heads/combine_last_two_dimensions/Shape"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/combine_heads/combine_last_two_dimensions/strided_slice/stack"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/combine_heads/combine_last_two_dimensions/strided_slice/stack_1"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/combine_heads/combine_last_two_dimensions/strided_slice/stack_2"
      attr {
        key: "Index"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "shrink_axis_mask"
        value {
          i: 1
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/combine_heads/combine_last_two_dimensions/strided_slice_1/stack"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_f"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/combine_heads/combine_last_two_dimensions/strided_slice_1/stack_1"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_f"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 2
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/combine_heads/combine_last_two_dimensions/strided_slice_1/stack_2"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_f"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/combine_heads/combine_last_two_dimensions/strided_slice_1"
      op: "StridedSlice"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/combine_heads/combine_last_two_dimensions/Shape"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/combine_heads/combine_last_two_dimensions/strided_slice_1/stack"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/combine_heads/combine_last_two_dimensions/strided_slice_1/stack_1"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/combine_heads/combine_last_two_dimensions/strided_slice_1/stack_2"
      attr {
        key: "Index"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "shrink_axis_mask"
        value {
          i: 1
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/combine_heads/combine_last_two_dimensions/Reshape/shape/2"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_f"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 128
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/combine_heads/combine_last_two_dimensions/Reshape/shape"
      op: "Pack"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/combine_heads/combine_last_two_dimensions/strided_slice"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/combine_heads/combine_last_two_dimensions/strided_slice_1"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/combine_heads/combine_last_two_dimensions/Reshape/shape/2"
      attr {
        key: "N"
        value {
          i: 3
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/combine_heads/combine_last_two_dimensions/Reshape"
      op: "Reshape"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/combine_heads/transpose"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/combine_heads/combine_last_two_dimensions/Reshape/shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: -1
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/body/string_embedding/encoder/layer_0/self_attention/multihead_attention/output_transform/kernel/Initializer/random_uniform/shape"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@cs_similarity_transformer/body/string_embedding/encoder/layer_0/self_attention/multihead_attention/output_transform/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 2
              }
            }
            tensor_content: "\200\000\000\000\200\000\000\000"
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/body/string_embedding/encoder/layer_0/self_attention/multihead_attention/output_transform/kernel/Initializer/random_uniform/min"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@cs_similarity_transformer/body/string_embedding/encoder/layer_0/self_attention/multihead_attention/output_transform/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: -0.1530931144952774
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/body/string_embedding/encoder/layer_0/self_attention/multihead_attention/output_transform/kernel/Initializer/random_uniform/max"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@cs_similarity_transformer/body/string_embedding/encoder/layer_0/self_attention/multihead_attention/output_transform/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.1530931144952774
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/body/string_embedding/encoder/layer_0/self_attention/multihead_attention/output_transform/kernel/Initializer/random_uniform/RandomUniform"
      op: "RandomUniform"
      input: "cs_similarity_transformer/body/string_embedding/encoder/layer_0/self_attention/multihead_attention/output_transform/kernel/Initializer/random_uniform/shape"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@cs_similarity_transformer/body/string_embedding/encoder/layer_0/self_attention/multihead_attention/output_transform/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "cs_similarity_transformer/body/string_embedding/encoder/layer_0/self_attention/multihead_attention/output_transform/kernel/Initializer/random_uniform/sub"
      op: "Sub"
      input: "cs_similarity_transformer/body/string_embedding/encoder/layer_0/self_attention/multihead_attention/output_transform/kernel/Initializer/random_uniform/max"
      input: "cs_similarity_transformer/body/string_embedding/encoder/layer_0/self_attention/multihead_attention/output_transform/kernel/Initializer/random_uniform/min"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@cs_similarity_transformer/body/string_embedding/encoder/layer_0/self_attention/multihead_attention/output_transform/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/body/string_embedding/encoder/layer_0/self_attention/multihead_attention/output_transform/kernel/Initializer/random_uniform/mul"
      op: "Mul"
      input: "cs_similarity_transformer/body/string_embedding/encoder/layer_0/self_attention/multihead_attention/output_transform/kernel/Initializer/random_uniform/RandomUniform"
      input: "cs_similarity_transformer/body/string_embedding/encoder/layer_0/self_attention/multihead_attention/output_transform/kernel/Initializer/random_uniform/sub"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@cs_similarity_transformer/body/string_embedding/encoder/layer_0/self_attention/multihead_attention/output_transform/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/body/string_embedding/encoder/layer_0/self_attention/multihead_attention/output_transform/kernel/Initializer/random_uniform"
      op: "Add"
      input: "cs_similarity_transformer/body/string_embedding/encoder/layer_0/self_attention/multihead_attention/output_transform/kernel/Initializer/random_uniform/mul"
      input: "cs_similarity_transformer/body/string_embedding/encoder/layer_0/self_attention/multihead_attention/output_transform/kernel/Initializer/random_uniform/min"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@cs_similarity_transformer/body/string_embedding/encoder/layer_0/self_attention/multihead_attention/output_transform/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/body/string_embedding/encoder/layer_0/self_attention/multihead_attention/output_transform/kernel"
      op: "VarHandleOp"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@cs_similarity_transformer/body/string_embedding/encoder/layer_0/self_attention/multihead_attention/output_transform/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 128
            }
            dim {
              size: 128
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: "cs_similarity_transformer/body/string_embedding/encoder/layer_0/self_attention/multihead_attention/output_transform/kernel"
        }
      }
    }
    node {
      name: "cs_similarity_transformer/body/string_embedding/encoder/layer_0/self_attention/multihead_attention/output_transform/kernel/IsInitialized/VarIsInitializedOp"
      op: "VarIsInitializedOp"
      input: "cs_similarity_transformer/body/string_embedding/encoder/layer_0/self_attention/multihead_attention/output_transform/kernel"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/body/string_embedding/encoder/layer_0/self_attention/multihead_attention/output_transform/kernel/Assign"
      op: "AssignVariableOp"
      input: "cs_similarity_transformer/body/string_embedding/encoder/layer_0/self_attention/multihead_attention/output_transform/kernel"
      input: "cs_similarity_transformer/body/string_embedding/encoder/layer_0/self_attention/multihead_attention/output_transform/kernel/Initializer/random_uniform"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@cs_similarity_transformer/body/string_embedding/encoder/layer_0/self_attention/multihead_attention/output_transform/kernel"
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "cs_similarity_transformer/body/string_embedding/encoder/layer_0/self_attention/multihead_attention/output_transform/kernel/Read/ReadVariableOp"
      op: "ReadVariableOp"
      input: "cs_similarity_transformer/body/string_embedding/encoder/layer_0/self_attention/multihead_attention/output_transform/kernel"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@cs_similarity_transformer/body/string_embedding/encoder/layer_0/self_attention/multihead_attention/output_transform/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "Read_49/ReadVariableOp"
      op: "ReadVariableOp"
      input: "Read_49/ReadVariableOp/Switch"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "Read_49/ReadVariableOp/Switch"
      op: "Switch"
      input: "cs_similarity_transformer/body/string_embedding/encoder/layer_0/self_attention/multihead_attention/output_transform/kernel"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/pred_id"
      attr {
        key: "T"
        value {
          type: DT_RESOURCE
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@cs_similarity_transformer/body/string_embedding/encoder/layer_0/self_attention/multihead_attention/output_transform/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
            shape {
            }
          }
        }
      }
    }
    node {
      name: "Identity_49"
      op: "Identity"
      input: "Read_49/ReadVariableOp"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/output_transform/Tensordot/Shape"
      op: "Shape"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/combine_heads/combine_last_two_dimensions/Reshape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/output_transform/Tensordot/Rank"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_f"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 3
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/output_transform/Tensordot/axes"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_f"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 2
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/output_transform/Tensordot/GreaterEqual/y"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_f"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/output_transform/Tensordot/GreaterEqual"
      op: "GreaterEqual"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/output_transform/Tensordot/axes"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/output_transform/Tensordot/GreaterEqual/y"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/output_transform/Tensordot/Cast"
      op: "Cast"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/output_transform/Tensordot/GreaterEqual"
      attr {
        key: "DstT"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "SrcT"
        value {
          type: DT_BOOL
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/output_transform/Tensordot/mul"
      op: "Mul"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/output_transform/Tensordot/Cast"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/output_transform/Tensordot/axes"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/output_transform/Tensordot/Less/y"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_f"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/output_transform/Tensordot/Less"
      op: "Less"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/output_transform/Tensordot/axes"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/output_transform/Tensordot/Less/y"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/output_transform/Tensordot/Cast_1"
      op: "Cast"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/output_transform/Tensordot/Less"
      attr {
        key: "DstT"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "SrcT"
        value {
          type: DT_BOOL
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/output_transform/Tensordot/add"
      op: "Add"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/output_transform/Tensordot/axes"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/output_transform/Tensordot/Rank"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/output_transform/Tensordot/mul_1"
      op: "Mul"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/output_transform/Tensordot/Cast_1"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/output_transform/Tensordot/add"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/output_transform/Tensordot/add_1"
      op: "Add"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/output_transform/Tensordot/mul"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/output_transform/Tensordot/mul_1"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/output_transform/Tensordot/range/start"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_f"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/output_transform/Tensordot/range/delta"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_f"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/output_transform/Tensordot/range"
      op: "Range"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/output_transform/Tensordot/range/start"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/output_transform/Tensordot/Rank"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/output_transform/Tensordot/range/delta"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/output_transform/Tensordot/ListDiff"
      op: "ListDiff"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/output_transform/Tensordot/range"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/output_transform/Tensordot/add_1"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/output_transform/Tensordot/GatherV2/axis"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_f"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/output_transform/Tensordot/GatherV2"
      op: "GatherV2"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/output_transform/Tensordot/Shape"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/output_transform/Tensordot/ListDiff"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/output_transform/Tensordot/GatherV2/axis"
      attr {
        key: "Taxis"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "Tindices"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "Tparams"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/output_transform/Tensordot/GatherV2_1/axis"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_f"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/output_transform/Tensordot/GatherV2_1"
      op: "GatherV2"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/output_transform/Tensordot/Shape"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/output_transform/Tensordot/add_1"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/output_transform/Tensordot/GatherV2_1/axis"
      attr {
        key: "Taxis"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "Tindices"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "Tparams"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/output_transform/Tensordot/Const"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_f"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/output_transform/Tensordot/Prod"
      op: "Prod"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/output_transform/Tensordot/GatherV2"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/output_transform/Tensordot/Const"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/output_transform/Tensordot/Const_1"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_f"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/output_transform/Tensordot/Prod_1"
      op: "Prod"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/output_transform/Tensordot/GatherV2_1"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/output_transform/Tensordot/Const_1"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/output_transform/Tensordot/concat/axis"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_f"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/output_transform/Tensordot/concat"
      op: "ConcatV2"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/output_transform/Tensordot/GatherV2_1"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/output_transform/Tensordot/GatherV2"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/output_transform/Tensordot/concat/axis"
      attr {
        key: "N"
        value {
          i: 2
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/output_transform/Tensordot/concat_1/axis"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_f"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/output_transform/Tensordot/concat_1"
      op: "ConcatV2"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/output_transform/Tensordot/ListDiff"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/output_transform/Tensordot/add_1"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/output_transform/Tensordot/concat_1/axis"
      attr {
        key: "N"
        value {
          i: 2
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/output_transform/Tensordot/stack"
      op: "Pack"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/output_transform/Tensordot/Prod"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/output_transform/Tensordot/Prod_1"
      attr {
        key: "N"
        value {
          i: 2
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/output_transform/Tensordot/transpose"
      op: "Transpose"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/combine_heads/combine_last_two_dimensions/Reshape"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/output_transform/Tensordot/concat_1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: -1
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/output_transform/Tensordot/Reshape"
      op: "Reshape"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/output_transform/Tensordot/transpose"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/output_transform/Tensordot/stack"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/output_transform/Tensordot/transpose_1/perm"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_f"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 2
              }
            }
            tensor_content: "\000\000\000\000\001\000\000\000"
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/output_transform/Tensordot/transpose_1"
      op: "Transpose"
      input: "Identity_49"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/output_transform/Tensordot/transpose_1/perm"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/output_transform/Tensordot/Reshape_1/shape"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_f"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 2
              }
            }
            tensor_content: "\200\000\000\000\200\000\000\000"
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/output_transform/Tensordot/Reshape_1"
      op: "Reshape"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/output_transform/Tensordot/transpose_1"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/output_transform/Tensordot/Reshape_1/shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/output_transform/Tensordot/MatMul"
      op: "MatMul"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/output_transform/Tensordot/Reshape"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/output_transform/Tensordot/Reshape_1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/output_transform/Tensordot/Const_2"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_f"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 128
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/output_transform/Tensordot/concat_2/axis"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_f"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/output_transform/Tensordot/concat_2"
      op: "ConcatV2"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/output_transform/Tensordot/GatherV2"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/output_transform/Tensordot/Const_2"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/output_transform/Tensordot/concat_2/axis"
      attr {
        key: "N"
        value {
          i: 2
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/output_transform/Tensordot"
      op: "Reshape"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/output_transform/Tensordot/MatMul"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/output_transform/Tensordot/concat_2"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: -1
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/layer_postprocess/add"
      op: "Add"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/output_transform/Tensordot"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/add_timing_signal_1d/add"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: -1
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/ffn/layer_prepostprocess/Shape"
      op: "Shape"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/layer_postprocess/add"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/ffn/layer_prepostprocess/strided_slice/stack"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_f"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/ffn/layer_prepostprocess/strided_slice/stack_1"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_f"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/ffn/layer_prepostprocess/strided_slice/stack_2"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_f"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/ffn/layer_prepostprocess/strided_slice"
      op: "StridedSlice"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/ffn/layer_prepostprocess/Shape"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/ffn/layer_prepostprocess/strided_slice/stack"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/ffn/layer_prepostprocess/strided_slice/stack_1"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/ffn/layer_prepostprocess/strided_slice/stack_2"
      attr {
        key: "Index"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "shrink_axis_mask"
        value {
          i: 1
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/ffn/layer_prepostprocess/strided_slice_1/stack"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_f"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/ffn/layer_prepostprocess/strided_slice_1/stack_1"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_f"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 2
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/ffn/layer_prepostprocess/strided_slice_1/stack_2"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_f"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/ffn/layer_prepostprocess/strided_slice_1"
      op: "StridedSlice"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/ffn/layer_prepostprocess/Shape"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/ffn/layer_prepostprocess/strided_slice_1/stack"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/ffn/layer_prepostprocess/strided_slice_1/stack_1"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/ffn/layer_prepostprocess/strided_slice_1/stack_2"
      attr {
        key: "Index"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "shrink_axis_mask"
        value {
          i: 1
        }
      }
    }
    node {
      name: "cs_similarity_transformer/body/string_embedding/encoder/layer_0/ffn/layer_prepostprocess/layer_norm/layer_norm_scale/Initializer/ones"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@cs_similarity_transformer/body/string_embedding/encoder/layer_0/ffn/layer_prepostprocess/layer_norm/layer_norm_scale"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
              dim {
                size: 128
              }
            }
            float_val: 1.0
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/body/string_embedding/encoder/layer_0/ffn/layer_prepostprocess/layer_norm/layer_norm_scale"
      op: "VarHandleOp"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@cs_similarity_transformer/body/string_embedding/encoder/layer_0/ffn/layer_prepostprocess/layer_norm/layer_norm_scale"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 128
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: "cs_similarity_transformer/body/string_embedding/encoder/layer_0/ffn/layer_prepostprocess/layer_norm/layer_norm_scale"
        }
      }
    }
    node {
      name: "cs_similarity_transformer/body/string_embedding/encoder/layer_0/ffn/layer_prepostprocess/layer_norm/layer_norm_scale/IsInitialized/VarIsInitializedOp"
      op: "VarIsInitializedOp"
      input: "cs_similarity_transformer/body/string_embedding/encoder/layer_0/ffn/layer_prepostprocess/layer_norm/layer_norm_scale"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/body/string_embedding/encoder/layer_0/ffn/layer_prepostprocess/layer_norm/layer_norm_scale/Assign"
      op: "AssignVariableOp"
      input: "cs_similarity_transformer/body/string_embedding/encoder/layer_0/ffn/layer_prepostprocess/layer_norm/layer_norm_scale"
      input: "cs_similarity_transformer/body/string_embedding/encoder/layer_0/ffn/layer_prepostprocess/layer_norm/layer_norm_scale/Initializer/ones"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@cs_similarity_transformer/body/string_embedding/encoder/layer_0/ffn/layer_prepostprocess/layer_norm/layer_norm_scale"
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "cs_similarity_transformer/body/string_embedding/encoder/layer_0/ffn/layer_prepostprocess/layer_norm/layer_norm_scale/Read/ReadVariableOp"
      op: "ReadVariableOp"
      input: "cs_similarity_transformer/body/string_embedding/encoder/layer_0/ffn/layer_prepostprocess/layer_norm/layer_norm_scale"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@cs_similarity_transformer/body/string_embedding/encoder/layer_0/ffn/layer_prepostprocess/layer_norm/layer_norm_scale"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "Read_50/ReadVariableOp"
      op: "ReadVariableOp"
      input: "Read_50/ReadVariableOp/Switch"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "Read_50/ReadVariableOp/Switch"
      op: "Switch"
      input: "cs_similarity_transformer/body/string_embedding/encoder/layer_0/ffn/layer_prepostprocess/layer_norm/layer_norm_scale"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/pred_id"
      attr {
        key: "T"
        value {
          type: DT_RESOURCE
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@cs_similarity_transformer/body/string_embedding/encoder/layer_0/ffn/layer_prepostprocess/layer_norm/layer_norm_scale"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
            shape {
            }
          }
        }
      }
    }
    node {
      name: "Identity_50"
      op: "Identity"
      input: "Read_50/ReadVariableOp"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/body/string_embedding/encoder/layer_0/ffn/layer_prepostprocess/layer_norm/layer_norm_bias/Initializer/zeros"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@cs_similarity_transformer/body/string_embedding/encoder/layer_0/ffn/layer_prepostprocess/layer_norm/layer_norm_bias"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
              dim {
                size: 128
              }
            }
            float_val: 0.0
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/body/string_embedding/encoder/layer_0/ffn/layer_prepostprocess/layer_norm/layer_norm_bias"
      op: "VarHandleOp"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@cs_similarity_transformer/body/string_embedding/encoder/layer_0/ffn/layer_prepostprocess/layer_norm/layer_norm_bias"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 128
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: "cs_similarity_transformer/body/string_embedding/encoder/layer_0/ffn/layer_prepostprocess/layer_norm/layer_norm_bias"
        }
      }
    }
    node {
      name: "cs_similarity_transformer/body/string_embedding/encoder/layer_0/ffn/layer_prepostprocess/layer_norm/layer_norm_bias/IsInitialized/VarIsInitializedOp"
      op: "VarIsInitializedOp"
      input: "cs_similarity_transformer/body/string_embedding/encoder/layer_0/ffn/layer_prepostprocess/layer_norm/layer_norm_bias"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/body/string_embedding/encoder/layer_0/ffn/layer_prepostprocess/layer_norm/layer_norm_bias/Assign"
      op: "AssignVariableOp"
      input: "cs_similarity_transformer/body/string_embedding/encoder/layer_0/ffn/layer_prepostprocess/layer_norm/layer_norm_bias"
      input: "cs_similarity_transformer/body/string_embedding/encoder/layer_0/ffn/layer_prepostprocess/layer_norm/layer_norm_bias/Initializer/zeros"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@cs_similarity_transformer/body/string_embedding/encoder/layer_0/ffn/layer_prepostprocess/layer_norm/layer_norm_bias"
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "cs_similarity_transformer/body/string_embedding/encoder/layer_0/ffn/layer_prepostprocess/layer_norm/layer_norm_bias/Read/ReadVariableOp"
      op: "ReadVariableOp"
      input: "cs_similarity_transformer/body/string_embedding/encoder/layer_0/ffn/layer_prepostprocess/layer_norm/layer_norm_bias"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@cs_similarity_transformer/body/string_embedding/encoder/layer_0/ffn/layer_prepostprocess/layer_norm/layer_norm_bias"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "Read_51/ReadVariableOp"
      op: "ReadVariableOp"
      input: "Read_51/ReadVariableOp/Switch"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "Read_51/ReadVariableOp/Switch"
      op: "Switch"
      input: "cs_similarity_transformer/body/string_embedding/encoder/layer_0/ffn/layer_prepostprocess/layer_norm/layer_norm_bias"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/pred_id"
      attr {
        key: "T"
        value {
          type: DT_RESOURCE
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@cs_similarity_transformer/body/string_embedding/encoder/layer_0/ffn/layer_prepostprocess/layer_norm/layer_norm_bias"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
            shape {
            }
          }
        }
      }
    }
    node {
      name: "Identity_51"
      op: "Identity"
      input: "Read_51/ReadVariableOp"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/ffn/layer_prepostprocess/layer_norm/Const"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_f"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 9.999999974752427e-07
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/ffn/layer_prepostprocess/layer_norm/Mean/reduction_indices"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_f"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: -1
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/ffn/layer_prepostprocess/layer_norm/Mean"
      op: "Mean"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/layer_postprocess/add"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/ffn/layer_prepostprocess/layer_norm/Mean/reduction_indices"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: true
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/ffn/layer_prepostprocess/layer_norm/sub"
      op: "Sub"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/layer_postprocess/add"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/ffn/layer_prepostprocess/layer_norm/Mean"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: -1
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/ffn/layer_prepostprocess/layer_norm/Square"
      op: "Square"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/ffn/layer_prepostprocess/layer_norm/sub"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: -1
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/ffn/layer_prepostprocess/layer_norm/Mean_1/reduction_indices"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_f"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: -1
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/ffn/layer_prepostprocess/layer_norm/Mean_1"
      op: "Mean"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/ffn/layer_prepostprocess/layer_norm/Square"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/ffn/layer_prepostprocess/layer_norm/Mean_1/reduction_indices"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: true
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/ffn/layer_prepostprocess/layer_norm/sub_1"
      op: "Sub"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/layer_postprocess/add"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/ffn/layer_prepostprocess/layer_norm/Mean"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: -1
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/ffn/layer_prepostprocess/layer_norm/add"
      op: "Add"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/ffn/layer_prepostprocess/layer_norm/Mean_1"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/ffn/layer_prepostprocess/layer_norm/Const"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/ffn/layer_prepostprocess/layer_norm/Rsqrt"
      op: "Rsqrt"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/ffn/layer_prepostprocess/layer_norm/add"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/ffn/layer_prepostprocess/layer_norm/mul"
      op: "Mul"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/ffn/layer_prepostprocess/layer_norm/sub_1"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/ffn/layer_prepostprocess/layer_norm/Rsqrt"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: -1
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/ffn/layer_prepostprocess/layer_norm/mul_1"
      op: "Mul"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/ffn/layer_prepostprocess/layer_norm/mul"
      input: "Identity_50"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: -1
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/ffn/layer_prepostprocess/layer_norm/add_1"
      op: "Add"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/ffn/layer_prepostprocess/layer_norm/mul_1"
      input: "Identity_51"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: -1
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/ffn/Shape"
      op: "Shape"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/ffn/layer_prepostprocess/layer_norm/add_1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/ffn/strided_slice/stack"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_f"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/ffn/strided_slice/stack_1"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_f"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/ffn/strided_slice/stack_2"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_f"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/ffn/strided_slice"
      op: "StridedSlice"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/ffn/Shape"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/ffn/strided_slice/stack"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/ffn/strided_slice/stack_1"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/ffn/strided_slice/stack_2"
      attr {
        key: "Index"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "shrink_axis_mask"
        value {
          i: 1
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/ffn/strided_slice_1/stack"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_f"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/ffn/strided_slice_1/stack_1"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_f"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 2
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/ffn/strided_slice_1/stack_2"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_f"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/ffn/strided_slice_1"
      op: "StridedSlice"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/ffn/Shape"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/ffn/strided_slice_1/stack"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/ffn/strided_slice_1/stack_1"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/ffn/strided_slice_1/stack_2"
      attr {
        key: "Index"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "shrink_axis_mask"
        value {
          i: 1
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/ffn/concat/values_0"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_f"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: -1
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/ffn/concat/values_1"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_f"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 128
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/ffn/concat/axis"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_f"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/ffn/concat"
      op: "ConcatV2"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/ffn/concat/values_0"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/ffn/concat/values_1"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/ffn/concat/axis"
      attr {
        key: "N"
        value {
          i: 2
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/ffn/Reshape"
      op: "Reshape"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/ffn/layer_prepostprocess/layer_norm/add_1"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/ffn/concat"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/ffn/pad_reduce/remove/GatherNd"
      op: "GatherNd"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/ffn/Reshape"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/pad_reduce/get_ids/ToInt32"
      attr {
        key: "Tindices"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "Tparams"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/ffn/ExpandDims/dim"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_f"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/ffn/ExpandDims"
      op: "ExpandDims"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/ffn/pad_reduce/remove/GatherNd"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/ffn/ExpandDims/dim"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
              dim {
                size: -1
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/body/string_embedding/encoder/layer_0/ffn/conv1/kernel/Initializer/random_uniform/shape"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@cs_similarity_transformer/body/string_embedding/encoder/layer_0/ffn/conv1/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 2
              }
            }
            tensor_content: "\200\000\000\000\000\002\000\000"
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/body/string_embedding/encoder/layer_0/ffn/conv1/kernel/Initializer/random_uniform/min"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@cs_similarity_transformer/body/string_embedding/encoder/layer_0/ffn/conv1/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: -0.09682458639144897
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/body/string_embedding/encoder/layer_0/ffn/conv1/kernel/Initializer/random_uniform/max"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@cs_similarity_transformer/body/string_embedding/encoder/layer_0/ffn/conv1/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.09682458639144897
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/body/string_embedding/encoder/layer_0/ffn/conv1/kernel/Initializer/random_uniform/RandomUniform"
      op: "RandomUniform"
      input: "cs_similarity_transformer/body/string_embedding/encoder/layer_0/ffn/conv1/kernel/Initializer/random_uniform/shape"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@cs_similarity_transformer/body/string_embedding/encoder/layer_0/ffn/conv1/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
              dim {
                size: 512
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "cs_similarity_transformer/body/string_embedding/encoder/layer_0/ffn/conv1/kernel/Initializer/random_uniform/sub"
      op: "Sub"
      input: "cs_similarity_transformer/body/string_embedding/encoder/layer_0/ffn/conv1/kernel/Initializer/random_uniform/max"
      input: "cs_similarity_transformer/body/string_embedding/encoder/layer_0/ffn/conv1/kernel/Initializer/random_uniform/min"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@cs_similarity_transformer/body/string_embedding/encoder/layer_0/ffn/conv1/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/body/string_embedding/encoder/layer_0/ffn/conv1/kernel/Initializer/random_uniform/mul"
      op: "Mul"
      input: "cs_similarity_transformer/body/string_embedding/encoder/layer_0/ffn/conv1/kernel/Initializer/random_uniform/RandomUniform"
      input: "cs_similarity_transformer/body/string_embedding/encoder/layer_0/ffn/conv1/kernel/Initializer/random_uniform/sub"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@cs_similarity_transformer/body/string_embedding/encoder/layer_0/ffn/conv1/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
              dim {
                size: 512
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/body/string_embedding/encoder/layer_0/ffn/conv1/kernel/Initializer/random_uniform"
      op: "Add"
      input: "cs_similarity_transformer/body/string_embedding/encoder/layer_0/ffn/conv1/kernel/Initializer/random_uniform/mul"
      input: "cs_similarity_transformer/body/string_embedding/encoder/layer_0/ffn/conv1/kernel/Initializer/random_uniform/min"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@cs_similarity_transformer/body/string_embedding/encoder/layer_0/ffn/conv1/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
              dim {
                size: 512
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/body/string_embedding/encoder/layer_0/ffn/conv1/kernel"
      op: "VarHandleOp"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@cs_similarity_transformer/body/string_embedding/encoder/layer_0/ffn/conv1/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 128
            }
            dim {
              size: 512
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: "cs_similarity_transformer/body/string_embedding/encoder/layer_0/ffn/conv1/kernel"
        }
      }
    }
    node {
      name: "cs_similarity_transformer/body/string_embedding/encoder/layer_0/ffn/conv1/kernel/IsInitialized/VarIsInitializedOp"
      op: "VarIsInitializedOp"
      input: "cs_similarity_transformer/body/string_embedding/encoder/layer_0/ffn/conv1/kernel"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/body/string_embedding/encoder/layer_0/ffn/conv1/kernel/Assign"
      op: "AssignVariableOp"
      input: "cs_similarity_transformer/body/string_embedding/encoder/layer_0/ffn/conv1/kernel"
      input: "cs_similarity_transformer/body/string_embedding/encoder/layer_0/ffn/conv1/kernel/Initializer/random_uniform"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@cs_similarity_transformer/body/string_embedding/encoder/layer_0/ffn/conv1/kernel"
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "cs_similarity_transformer/body/string_embedding/encoder/layer_0/ffn/conv1/kernel/Read/ReadVariableOp"
      op: "ReadVariableOp"
      input: "cs_similarity_transformer/body/string_embedding/encoder/layer_0/ffn/conv1/kernel"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@cs_similarity_transformer/body/string_embedding/encoder/layer_0/ffn/conv1/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
              dim {
                size: 512
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "Read_52/ReadVariableOp"
      op: "ReadVariableOp"
      input: "Read_52/ReadVariableOp/Switch"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
              dim {
                size: 512
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "Read_52/ReadVariableOp/Switch"
      op: "Switch"
      input: "cs_similarity_transformer/body/string_embedding/encoder/layer_0/ffn/conv1/kernel"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/pred_id"
      attr {
        key: "T"
        value {
          type: DT_RESOURCE
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@cs_similarity_transformer/body/string_embedding/encoder/layer_0/ffn/conv1/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
            shape {
            }
          }
        }
      }
    }
    node {
      name: "Identity_52"
      op: "Identity"
      input: "Read_52/ReadVariableOp"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
              dim {
                size: 512
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/body/string_embedding/encoder/layer_0/ffn/conv1/bias/Initializer/zeros"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@cs_similarity_transformer/body/string_embedding/encoder/layer_0/ffn/conv1/bias"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 512
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
              dim {
                size: 512
              }
            }
            float_val: 0.0
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/body/string_embedding/encoder/layer_0/ffn/conv1/bias"
      op: "VarHandleOp"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@cs_similarity_transformer/body/string_embedding/encoder/layer_0/ffn/conv1/bias"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 512
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: "cs_similarity_transformer/body/string_embedding/encoder/layer_0/ffn/conv1/bias"
        }
      }
    }
    node {
      name: "cs_similarity_transformer/body/string_embedding/encoder/layer_0/ffn/conv1/bias/IsInitialized/VarIsInitializedOp"
      op: "VarIsInitializedOp"
      input: "cs_similarity_transformer/body/string_embedding/encoder/layer_0/ffn/conv1/bias"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/body/string_embedding/encoder/layer_0/ffn/conv1/bias/Assign"
      op: "AssignVariableOp"
      input: "cs_similarity_transformer/body/string_embedding/encoder/layer_0/ffn/conv1/bias"
      input: "cs_similarity_transformer/body/string_embedding/encoder/layer_0/ffn/conv1/bias/Initializer/zeros"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@cs_similarity_transformer/body/string_embedding/encoder/layer_0/ffn/conv1/bias"
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "cs_similarity_transformer/body/string_embedding/encoder/layer_0/ffn/conv1/bias/Read/ReadVariableOp"
      op: "ReadVariableOp"
      input: "cs_similarity_transformer/body/string_embedding/encoder/layer_0/ffn/conv1/bias"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@cs_similarity_transformer/body/string_embedding/encoder/layer_0/ffn/conv1/bias"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 512
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "Read_53/ReadVariableOp"
      op: "ReadVariableOp"
      input: "Read_53/ReadVariableOp/Switch"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 512
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "Read_53/ReadVariableOp/Switch"
      op: "Switch"
      input: "cs_similarity_transformer/body/string_embedding/encoder/layer_0/ffn/conv1/bias"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/pred_id"
      attr {
        key: "T"
        value {
          type: DT_RESOURCE
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@cs_similarity_transformer/body/string_embedding/encoder/layer_0/ffn/conv1/bias"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
            shape {
            }
          }
        }
      }
    }
    node {
      name: "Identity_53"
      op: "Identity"
      input: "Read_53/ReadVariableOp"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 512
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/ffn/conv1/Tensordot/Shape"
      op: "Shape"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/ffn/ExpandDims"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/ffn/conv1/Tensordot/Rank"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_f"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 3
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/ffn/conv1/Tensordot/axes"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_f"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 2
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/ffn/conv1/Tensordot/GreaterEqual/y"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_f"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/ffn/conv1/Tensordot/GreaterEqual"
      op: "GreaterEqual"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/ffn/conv1/Tensordot/axes"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/ffn/conv1/Tensordot/GreaterEqual/y"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/ffn/conv1/Tensordot/Cast"
      op: "Cast"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/ffn/conv1/Tensordot/GreaterEqual"
      attr {
        key: "DstT"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "SrcT"
        value {
          type: DT_BOOL
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/ffn/conv1/Tensordot/mul"
      op: "Mul"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/ffn/conv1/Tensordot/Cast"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/ffn/conv1/Tensordot/axes"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/ffn/conv1/Tensordot/Less/y"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_f"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/ffn/conv1/Tensordot/Less"
      op: "Less"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/ffn/conv1/Tensordot/axes"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/ffn/conv1/Tensordot/Less/y"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/ffn/conv1/Tensordot/Cast_1"
      op: "Cast"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/ffn/conv1/Tensordot/Less"
      attr {
        key: "DstT"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "SrcT"
        value {
          type: DT_BOOL
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/ffn/conv1/Tensordot/add"
      op: "Add"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/ffn/conv1/Tensordot/axes"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/ffn/conv1/Tensordot/Rank"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/ffn/conv1/Tensordot/mul_1"
      op: "Mul"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/ffn/conv1/Tensordot/Cast_1"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/ffn/conv1/Tensordot/add"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/ffn/conv1/Tensordot/add_1"
      op: "Add"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/ffn/conv1/Tensordot/mul"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/ffn/conv1/Tensordot/mul_1"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/ffn/conv1/Tensordot/range/start"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_f"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/ffn/conv1/Tensordot/range/delta"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_f"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/ffn/conv1/Tensordot/range"
      op: "Range"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/ffn/conv1/Tensordot/range/start"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/ffn/conv1/Tensordot/Rank"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/ffn/conv1/Tensordot/range/delta"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/ffn/conv1/Tensordot/ListDiff"
      op: "ListDiff"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/ffn/conv1/Tensordot/range"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/ffn/conv1/Tensordot/add_1"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/ffn/conv1/Tensordot/GatherV2/axis"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_f"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/ffn/conv1/Tensordot/GatherV2"
      op: "GatherV2"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/ffn/conv1/Tensordot/Shape"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/ffn/conv1/Tensordot/ListDiff"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/ffn/conv1/Tensordot/GatherV2/axis"
      attr {
        key: "Taxis"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "Tindices"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "Tparams"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/ffn/conv1/Tensordot/GatherV2_1/axis"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_f"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/ffn/conv1/Tensordot/GatherV2_1"
      op: "GatherV2"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/ffn/conv1/Tensordot/Shape"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/ffn/conv1/Tensordot/add_1"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/ffn/conv1/Tensordot/GatherV2_1/axis"
      attr {
        key: "Taxis"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "Tindices"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "Tparams"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/ffn/conv1/Tensordot/Const"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_f"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/ffn/conv1/Tensordot/Prod"
      op: "Prod"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/ffn/conv1/Tensordot/GatherV2"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/ffn/conv1/Tensordot/Const"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/ffn/conv1/Tensordot/Const_1"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_f"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/ffn/conv1/Tensordot/Prod_1"
      op: "Prod"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/ffn/conv1/Tensordot/GatherV2_1"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/ffn/conv1/Tensordot/Const_1"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/ffn/conv1/Tensordot/concat/axis"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_f"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/ffn/conv1/Tensordot/concat"
      op: "ConcatV2"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/ffn/conv1/Tensordot/GatherV2_1"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/ffn/conv1/Tensordot/GatherV2"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/ffn/conv1/Tensordot/concat/axis"
      attr {
        key: "N"
        value {
          i: 2
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/ffn/conv1/Tensordot/concat_1/axis"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_f"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/ffn/conv1/Tensordot/concat_1"
      op: "ConcatV2"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/ffn/conv1/Tensordot/ListDiff"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/ffn/conv1/Tensordot/add_1"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/ffn/conv1/Tensordot/concat_1/axis"
      attr {
        key: "N"
        value {
          i: 2
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/ffn/conv1/Tensordot/stack"
      op: "Pack"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/ffn/conv1/Tensordot/Prod"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/ffn/conv1/Tensordot/Prod_1"
      attr {
        key: "N"
        value {
          i: 2
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/ffn/conv1/Tensordot/transpose"
      op: "Transpose"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/ffn/ExpandDims"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/ffn/conv1/Tensordot/concat_1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
              dim {
                size: -1
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/ffn/conv1/Tensordot/Reshape"
      op: "Reshape"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/ffn/conv1/Tensordot/transpose"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/ffn/conv1/Tensordot/stack"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/ffn/conv1/Tensordot/transpose_1/perm"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_f"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 2
              }
            }
            tensor_content: "\000\000\000\000\001\000\000\000"
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/ffn/conv1/Tensordot/transpose_1"
      op: "Transpose"
      input: "Identity_52"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/ffn/conv1/Tensordot/transpose_1/perm"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
              dim {
                size: 512
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/ffn/conv1/Tensordot/Reshape_1/shape"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_f"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 2
              }
            }
            tensor_content: "\200\000\000\000\000\002\000\000"
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/ffn/conv1/Tensordot/Reshape_1"
      op: "Reshape"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/ffn/conv1/Tensordot/transpose_1"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/ffn/conv1/Tensordot/Reshape_1/shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
              dim {
                size: 512
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/ffn/conv1/Tensordot/MatMul"
      op: "MatMul"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/ffn/conv1/Tensordot/Reshape"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/ffn/conv1/Tensordot/Reshape_1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 512
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/ffn/conv1/Tensordot/Const_2"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_f"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 512
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/ffn/conv1/Tensordot/concat_2/axis"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_f"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/ffn/conv1/Tensordot/concat_2"
      op: "ConcatV2"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/ffn/conv1/Tensordot/GatherV2"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/ffn/conv1/Tensordot/Const_2"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/ffn/conv1/Tensordot/concat_2/axis"
      attr {
        key: "N"
        value {
          i: 2
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/ffn/conv1/Tensordot"
      op: "Reshape"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/ffn/conv1/Tensordot/MatMul"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/ffn/conv1/Tensordot/concat_2"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
              dim {
                size: -1
              }
              dim {
                size: 512
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/ffn/conv1/BiasAdd"
      op: "BiasAdd"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/ffn/conv1/Tensordot"
      input: "Identity_53"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
              dim {
                size: -1
              }
              dim {
                size: 512
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/ffn/conv1/Relu"
      op: "Relu"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/ffn/conv1/BiasAdd"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
              dim {
                size: -1
              }
              dim {
                size: 512
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/body/string_embedding/encoder/layer_0/ffn/conv2/kernel/Initializer/random_uniform/shape"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@cs_similarity_transformer/body/string_embedding/encoder/layer_0/ffn/conv2/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 2
              }
            }
            tensor_content: "\000\002\000\000\200\000\000\000"
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/body/string_embedding/encoder/layer_0/ffn/conv2/kernel/Initializer/random_uniform/min"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@cs_similarity_transformer/body/string_embedding/encoder/layer_0/ffn/conv2/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: -0.09682458639144897
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/body/string_embedding/encoder/layer_0/ffn/conv2/kernel/Initializer/random_uniform/max"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@cs_similarity_transformer/body/string_embedding/encoder/layer_0/ffn/conv2/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.09682458639144897
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/body/string_embedding/encoder/layer_0/ffn/conv2/kernel/Initializer/random_uniform/RandomUniform"
      op: "RandomUniform"
      input: "cs_similarity_transformer/body/string_embedding/encoder/layer_0/ffn/conv2/kernel/Initializer/random_uniform/shape"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@cs_similarity_transformer/body/string_embedding/encoder/layer_0/ffn/conv2/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 512
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "cs_similarity_transformer/body/string_embedding/encoder/layer_0/ffn/conv2/kernel/Initializer/random_uniform/sub"
      op: "Sub"
      input: "cs_similarity_transformer/body/string_embedding/encoder/layer_0/ffn/conv2/kernel/Initializer/random_uniform/max"
      input: "cs_similarity_transformer/body/string_embedding/encoder/layer_0/ffn/conv2/kernel/Initializer/random_uniform/min"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@cs_similarity_transformer/body/string_embedding/encoder/layer_0/ffn/conv2/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/body/string_embedding/encoder/layer_0/ffn/conv2/kernel/Initializer/random_uniform/mul"
      op: "Mul"
      input: "cs_similarity_transformer/body/string_embedding/encoder/layer_0/ffn/conv2/kernel/Initializer/random_uniform/RandomUniform"
      input: "cs_similarity_transformer/body/string_embedding/encoder/layer_0/ffn/conv2/kernel/Initializer/random_uniform/sub"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@cs_similarity_transformer/body/string_embedding/encoder/layer_0/ffn/conv2/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 512
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/body/string_embedding/encoder/layer_0/ffn/conv2/kernel/Initializer/random_uniform"
      op: "Add"
      input: "cs_similarity_transformer/body/string_embedding/encoder/layer_0/ffn/conv2/kernel/Initializer/random_uniform/mul"
      input: "cs_similarity_transformer/body/string_embedding/encoder/layer_0/ffn/conv2/kernel/Initializer/random_uniform/min"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@cs_similarity_transformer/body/string_embedding/encoder/layer_0/ffn/conv2/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 512
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/body/string_embedding/encoder/layer_0/ffn/conv2/kernel"
      op: "VarHandleOp"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@cs_similarity_transformer/body/string_embedding/encoder/layer_0/ffn/conv2/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 512
            }
            dim {
              size: 128
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: "cs_similarity_transformer/body/string_embedding/encoder/layer_0/ffn/conv2/kernel"
        }
      }
    }
    node {
      name: "cs_similarity_transformer/body/string_embedding/encoder/layer_0/ffn/conv2/kernel/IsInitialized/VarIsInitializedOp"
      op: "VarIsInitializedOp"
      input: "cs_similarity_transformer/body/string_embedding/encoder/layer_0/ffn/conv2/kernel"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/body/string_embedding/encoder/layer_0/ffn/conv2/kernel/Assign"
      op: "AssignVariableOp"
      input: "cs_similarity_transformer/body/string_embedding/encoder/layer_0/ffn/conv2/kernel"
      input: "cs_similarity_transformer/body/string_embedding/encoder/layer_0/ffn/conv2/kernel/Initializer/random_uniform"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@cs_similarity_transformer/body/string_embedding/encoder/layer_0/ffn/conv2/kernel"
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "cs_similarity_transformer/body/string_embedding/encoder/layer_0/ffn/conv2/kernel/Read/ReadVariableOp"
      op: "ReadVariableOp"
      input: "cs_similarity_transformer/body/string_embedding/encoder/layer_0/ffn/conv2/kernel"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@cs_similarity_transformer/body/string_embedding/encoder/layer_0/ffn/conv2/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 512
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "Read_54/ReadVariableOp"
      op: "ReadVariableOp"
      input: "Read_54/ReadVariableOp/Switch"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 512
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "Read_54/ReadVariableOp/Switch"
      op: "Switch"
      input: "cs_similarity_transformer/body/string_embedding/encoder/layer_0/ffn/conv2/kernel"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/pred_id"
      attr {
        key: "T"
        value {
          type: DT_RESOURCE
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@cs_similarity_transformer/body/string_embedding/encoder/layer_0/ffn/conv2/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
            shape {
            }
          }
        }
      }
    }
    node {
      name: "Identity_54"
      op: "Identity"
      input: "Read_54/ReadVariableOp"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 512
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/body/string_embedding/encoder/layer_0/ffn/conv2/bias/Initializer/zeros"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@cs_similarity_transformer/body/string_embedding/encoder/layer_0/ffn/conv2/bias"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
              dim {
                size: 128
              }
            }
            float_val: 0.0
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/body/string_embedding/encoder/layer_0/ffn/conv2/bias"
      op: "VarHandleOp"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@cs_similarity_transformer/body/string_embedding/encoder/layer_0/ffn/conv2/bias"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 128
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: "cs_similarity_transformer/body/string_embedding/encoder/layer_0/ffn/conv2/bias"
        }
      }
    }
    node {
      name: "cs_similarity_transformer/body/string_embedding/encoder/layer_0/ffn/conv2/bias/IsInitialized/VarIsInitializedOp"
      op: "VarIsInitializedOp"
      input: "cs_similarity_transformer/body/string_embedding/encoder/layer_0/ffn/conv2/bias"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/body/string_embedding/encoder/layer_0/ffn/conv2/bias/Assign"
      op: "AssignVariableOp"
      input: "cs_similarity_transformer/body/string_embedding/encoder/layer_0/ffn/conv2/bias"
      input: "cs_similarity_transformer/body/string_embedding/encoder/layer_0/ffn/conv2/bias/Initializer/zeros"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@cs_similarity_transformer/body/string_embedding/encoder/layer_0/ffn/conv2/bias"
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "cs_similarity_transformer/body/string_embedding/encoder/layer_0/ffn/conv2/bias/Read/ReadVariableOp"
      op: "ReadVariableOp"
      input: "cs_similarity_transformer/body/string_embedding/encoder/layer_0/ffn/conv2/bias"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@cs_similarity_transformer/body/string_embedding/encoder/layer_0/ffn/conv2/bias"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "Read_55/ReadVariableOp"
      op: "ReadVariableOp"
      input: "Read_55/ReadVariableOp/Switch"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "Read_55/ReadVariableOp/Switch"
      op: "Switch"
      input: "cs_similarity_transformer/body/string_embedding/encoder/layer_0/ffn/conv2/bias"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/pred_id"
      attr {
        key: "T"
        value {
          type: DT_RESOURCE
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@cs_similarity_transformer/body/string_embedding/encoder/layer_0/ffn/conv2/bias"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
            shape {
            }
          }
        }
      }
    }
    node {
      name: "Identity_55"
      op: "Identity"
      input: "Read_55/ReadVariableOp"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/ffn/conv2/Tensordot/Shape"
      op: "Shape"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/ffn/conv1/Relu"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/ffn/conv2/Tensordot/Rank"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_f"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 3
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/ffn/conv2/Tensordot/axes"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_f"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 2
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/ffn/conv2/Tensordot/GreaterEqual/y"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_f"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/ffn/conv2/Tensordot/GreaterEqual"
      op: "GreaterEqual"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/ffn/conv2/Tensordot/axes"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/ffn/conv2/Tensordot/GreaterEqual/y"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/ffn/conv2/Tensordot/Cast"
      op: "Cast"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/ffn/conv2/Tensordot/GreaterEqual"
      attr {
        key: "DstT"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "SrcT"
        value {
          type: DT_BOOL
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/ffn/conv2/Tensordot/mul"
      op: "Mul"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/ffn/conv2/Tensordot/Cast"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/ffn/conv2/Tensordot/axes"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/ffn/conv2/Tensordot/Less/y"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_f"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/ffn/conv2/Tensordot/Less"
      op: "Less"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/ffn/conv2/Tensordot/axes"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/ffn/conv2/Tensordot/Less/y"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/ffn/conv2/Tensordot/Cast_1"
      op: "Cast"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/ffn/conv2/Tensordot/Less"
      attr {
        key: "DstT"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "SrcT"
        value {
          type: DT_BOOL
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/ffn/conv2/Tensordot/add"
      op: "Add"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/ffn/conv2/Tensordot/axes"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/ffn/conv2/Tensordot/Rank"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/ffn/conv2/Tensordot/mul_1"
      op: "Mul"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/ffn/conv2/Tensordot/Cast_1"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/ffn/conv2/Tensordot/add"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/ffn/conv2/Tensordot/add_1"
      op: "Add"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/ffn/conv2/Tensordot/mul"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/ffn/conv2/Tensordot/mul_1"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/ffn/conv2/Tensordot/range/start"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_f"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/ffn/conv2/Tensordot/range/delta"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_f"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/ffn/conv2/Tensordot/range"
      op: "Range"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/ffn/conv2/Tensordot/range/start"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/ffn/conv2/Tensordot/Rank"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/ffn/conv2/Tensordot/range/delta"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/ffn/conv2/Tensordot/ListDiff"
      op: "ListDiff"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/ffn/conv2/Tensordot/range"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/ffn/conv2/Tensordot/add_1"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/ffn/conv2/Tensordot/GatherV2/axis"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_f"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/ffn/conv2/Tensordot/GatherV2"
      op: "GatherV2"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/ffn/conv2/Tensordot/Shape"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/ffn/conv2/Tensordot/ListDiff"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/ffn/conv2/Tensordot/GatherV2/axis"
      attr {
        key: "Taxis"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "Tindices"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "Tparams"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/ffn/conv2/Tensordot/GatherV2_1/axis"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_f"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/ffn/conv2/Tensordot/GatherV2_1"
      op: "GatherV2"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/ffn/conv2/Tensordot/Shape"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/ffn/conv2/Tensordot/add_1"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/ffn/conv2/Tensordot/GatherV2_1/axis"
      attr {
        key: "Taxis"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "Tindices"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "Tparams"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/ffn/conv2/Tensordot/Const"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_f"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/ffn/conv2/Tensordot/Prod"
      op: "Prod"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/ffn/conv2/Tensordot/GatherV2"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/ffn/conv2/Tensordot/Const"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/ffn/conv2/Tensordot/Const_1"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_f"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/ffn/conv2/Tensordot/Prod_1"
      op: "Prod"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/ffn/conv2/Tensordot/GatherV2_1"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/ffn/conv2/Tensordot/Const_1"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/ffn/conv2/Tensordot/concat/axis"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_f"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/ffn/conv2/Tensordot/concat"
      op: "ConcatV2"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/ffn/conv2/Tensordot/GatherV2_1"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/ffn/conv2/Tensordot/GatherV2"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/ffn/conv2/Tensordot/concat/axis"
      attr {
        key: "N"
        value {
          i: 2
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/ffn/conv2/Tensordot/concat_1/axis"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_f"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/ffn/conv2/Tensordot/concat_1"
      op: "ConcatV2"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/ffn/conv2/Tensordot/ListDiff"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/ffn/conv2/Tensordot/add_1"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/ffn/conv2/Tensordot/concat_1/axis"
      attr {
        key: "N"
        value {
          i: 2
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/ffn/conv2/Tensordot/stack"
      op: "Pack"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/ffn/conv2/Tensordot/Prod"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/ffn/conv2/Tensordot/Prod_1"
      attr {
        key: "N"
        value {
          i: 2
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/ffn/conv2/Tensordot/transpose"
      op: "Transpose"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/ffn/conv1/Relu"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/ffn/conv2/Tensordot/concat_1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
              dim {
                size: -1
              }
              dim {
                size: 512
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/ffn/conv2/Tensordot/Reshape"
      op: "Reshape"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/ffn/conv2/Tensordot/transpose"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/ffn/conv2/Tensordot/stack"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/ffn/conv2/Tensordot/transpose_1/perm"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_f"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 2
              }
            }
            tensor_content: "\000\000\000\000\001\000\000\000"
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/ffn/conv2/Tensordot/transpose_1"
      op: "Transpose"
      input: "Identity_54"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/ffn/conv2/Tensordot/transpose_1/perm"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 512
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/ffn/conv2/Tensordot/Reshape_1/shape"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_f"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 2
              }
            }
            tensor_content: "\000\002\000\000\200\000\000\000"
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/ffn/conv2/Tensordot/Reshape_1"
      op: "Reshape"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/ffn/conv2/Tensordot/transpose_1"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/ffn/conv2/Tensordot/Reshape_1/shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 512
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/ffn/conv2/Tensordot/MatMul"
      op: "MatMul"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/ffn/conv2/Tensordot/Reshape"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/ffn/conv2/Tensordot/Reshape_1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/ffn/conv2/Tensordot/Const_2"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_f"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 128
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/ffn/conv2/Tensordot/concat_2/axis"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_f"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/ffn/conv2/Tensordot/concat_2"
      op: "ConcatV2"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/ffn/conv2/Tensordot/GatherV2"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/ffn/conv2/Tensordot/Const_2"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/ffn/conv2/Tensordot/concat_2/axis"
      attr {
        key: "N"
        value {
          i: 2
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/ffn/conv2/Tensordot"
      op: "Reshape"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/ffn/conv2/Tensordot/MatMul"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/ffn/conv2/Tensordot/concat_2"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
              dim {
                size: -1
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/ffn/conv2/BiasAdd"
      op: "BiasAdd"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/ffn/conv2/Tensordot"
      input: "Identity_55"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
              dim {
                size: -1
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/ffn/Squeeze"
      op: "Squeeze"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/ffn/conv2/BiasAdd"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
      attr {
        key: "squeeze_dims"
        value {
          list {
            i: 0
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/ffn/pad_reduce/restore/Shape"
      op: "Shape"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/ffn/Squeeze"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/ffn/pad_reduce/restore/strided_slice/stack"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_f"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/ffn/pad_reduce/restore/strided_slice/stack_1"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_f"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/ffn/pad_reduce/restore/strided_slice/stack_2"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_f"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/ffn/pad_reduce/restore/strided_slice"
      op: "StridedSlice"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/ffn/pad_reduce/restore/Shape"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/ffn/pad_reduce/restore/strided_slice/stack"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/ffn/pad_reduce/restore/strided_slice/stack_1"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/ffn/pad_reduce/restore/strided_slice/stack_2"
      attr {
        key: "Index"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "end_mask"
        value {
          i: 1
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/ffn/pad_reduce/restore/concat/axis"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_f"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/ffn/pad_reduce/restore/concat"
      op: "ConcatV2"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/pad_reduce/get_ids/strided_slice"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/ffn/pad_reduce/restore/strided_slice"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/ffn/pad_reduce/restore/concat/axis"
      attr {
        key: "N"
        value {
          i: 2
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/ffn/pad_reduce/restore/ScatterNd"
      op: "ScatterNd"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/pad_reduce/get_ids/ToInt32"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/ffn/Squeeze"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/ffn/pad_reduce/restore/concat"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tindices"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/ffn/Reshape_1/shape/2"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_f"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 128
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/ffn/Reshape_1/shape"
      op: "Pack"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/ffn/strided_slice"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/ffn/strided_slice_1"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/ffn/Reshape_1/shape/2"
      attr {
        key: "N"
        value {
          i: 3
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/ffn/Reshape_1"
      op: "Reshape"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/ffn/pad_reduce/restore/ScatterNd"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/ffn/Reshape_1/shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: -1
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/ffn/layer_postprocess/add"
      op: "Add"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/ffn/Reshape_1"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/layer_postprocess/add"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: -1
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/layer_prepostprocess/Shape"
      op: "Shape"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/ffn/layer_postprocess/add"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/layer_prepostprocess/strided_slice/stack"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_f"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/layer_prepostprocess/strided_slice/stack_1"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_f"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/layer_prepostprocess/strided_slice/stack_2"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_f"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/layer_prepostprocess/strided_slice"
      op: "StridedSlice"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/layer_prepostprocess/Shape"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/layer_prepostprocess/strided_slice/stack"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/layer_prepostprocess/strided_slice/stack_1"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/layer_prepostprocess/strided_slice/stack_2"
      attr {
        key: "Index"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "shrink_axis_mask"
        value {
          i: 1
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/layer_prepostprocess/strided_slice_1/stack"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_f"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/layer_prepostprocess/strided_slice_1/stack_1"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_f"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 2
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/layer_prepostprocess/strided_slice_1/stack_2"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_f"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/layer_prepostprocess/strided_slice_1"
      op: "StridedSlice"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/layer_prepostprocess/Shape"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/layer_prepostprocess/strided_slice_1/stack"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/layer_prepostprocess/strided_slice_1/stack_1"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/layer_prepostprocess/strided_slice_1/stack_2"
      attr {
        key: "Index"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "shrink_axis_mask"
        value {
          i: 1
        }
      }
    }
    node {
      name: "cs_similarity_transformer/body/string_embedding/encoder/layer_1/self_attention/layer_prepostprocess/layer_norm/layer_norm_scale/Initializer/ones"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@cs_similarity_transformer/body/string_embedding/encoder/layer_1/self_attention/layer_prepostprocess/layer_norm/layer_norm_scale"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
              dim {
                size: 128
              }
            }
            float_val: 1.0
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/body/string_embedding/encoder/layer_1/self_attention/layer_prepostprocess/layer_norm/layer_norm_scale"
      op: "VarHandleOp"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@cs_similarity_transformer/body/string_embedding/encoder/layer_1/self_attention/layer_prepostprocess/layer_norm/layer_norm_scale"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 128
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: "cs_similarity_transformer/body/string_embedding/encoder/layer_1/self_attention/layer_prepostprocess/layer_norm/layer_norm_scale"
        }
      }
    }
    node {
      name: "cs_similarity_transformer/body/string_embedding/encoder/layer_1/self_attention/layer_prepostprocess/layer_norm/layer_norm_scale/IsInitialized/VarIsInitializedOp"
      op: "VarIsInitializedOp"
      input: "cs_similarity_transformer/body/string_embedding/encoder/layer_1/self_attention/layer_prepostprocess/layer_norm/layer_norm_scale"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/body/string_embedding/encoder/layer_1/self_attention/layer_prepostprocess/layer_norm/layer_norm_scale/Assign"
      op: "AssignVariableOp"
      input: "cs_similarity_transformer/body/string_embedding/encoder/layer_1/self_attention/layer_prepostprocess/layer_norm/layer_norm_scale"
      input: "cs_similarity_transformer/body/string_embedding/encoder/layer_1/self_attention/layer_prepostprocess/layer_norm/layer_norm_scale/Initializer/ones"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@cs_similarity_transformer/body/string_embedding/encoder/layer_1/self_attention/layer_prepostprocess/layer_norm/layer_norm_scale"
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "cs_similarity_transformer/body/string_embedding/encoder/layer_1/self_attention/layer_prepostprocess/layer_norm/layer_norm_scale/Read/ReadVariableOp"
      op: "ReadVariableOp"
      input: "cs_similarity_transformer/body/string_embedding/encoder/layer_1/self_attention/layer_prepostprocess/layer_norm/layer_norm_scale"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@cs_similarity_transformer/body/string_embedding/encoder/layer_1/self_attention/layer_prepostprocess/layer_norm/layer_norm_scale"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "Read_56/ReadVariableOp"
      op: "ReadVariableOp"
      input: "Read_56/ReadVariableOp/Switch"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "Read_56/ReadVariableOp/Switch"
      op: "Switch"
      input: "cs_similarity_transformer/body/string_embedding/encoder/layer_1/self_attention/layer_prepostprocess/layer_norm/layer_norm_scale"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/pred_id"
      attr {
        key: "T"
        value {
          type: DT_RESOURCE
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@cs_similarity_transformer/body/string_embedding/encoder/layer_1/self_attention/layer_prepostprocess/layer_norm/layer_norm_scale"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
            shape {
            }
          }
        }
      }
    }
    node {
      name: "Identity_56"
      op: "Identity"
      input: "Read_56/ReadVariableOp"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/body/string_embedding/encoder/layer_1/self_attention/layer_prepostprocess/layer_norm/layer_norm_bias/Initializer/zeros"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@cs_similarity_transformer/body/string_embedding/encoder/layer_1/self_attention/layer_prepostprocess/layer_norm/layer_norm_bias"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
              dim {
                size: 128
              }
            }
            float_val: 0.0
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/body/string_embedding/encoder/layer_1/self_attention/layer_prepostprocess/layer_norm/layer_norm_bias"
      op: "VarHandleOp"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@cs_similarity_transformer/body/string_embedding/encoder/layer_1/self_attention/layer_prepostprocess/layer_norm/layer_norm_bias"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 128
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: "cs_similarity_transformer/body/string_embedding/encoder/layer_1/self_attention/layer_prepostprocess/layer_norm/layer_norm_bias"
        }
      }
    }
    node {
      name: "cs_similarity_transformer/body/string_embedding/encoder/layer_1/self_attention/layer_prepostprocess/layer_norm/layer_norm_bias/IsInitialized/VarIsInitializedOp"
      op: "VarIsInitializedOp"
      input: "cs_similarity_transformer/body/string_embedding/encoder/layer_1/self_attention/layer_prepostprocess/layer_norm/layer_norm_bias"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/body/string_embedding/encoder/layer_1/self_attention/layer_prepostprocess/layer_norm/layer_norm_bias/Assign"
      op: "AssignVariableOp"
      input: "cs_similarity_transformer/body/string_embedding/encoder/layer_1/self_attention/layer_prepostprocess/layer_norm/layer_norm_bias"
      input: "cs_similarity_transformer/body/string_embedding/encoder/layer_1/self_attention/layer_prepostprocess/layer_norm/layer_norm_bias/Initializer/zeros"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@cs_similarity_transformer/body/string_embedding/encoder/layer_1/self_attention/layer_prepostprocess/layer_norm/layer_norm_bias"
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "cs_similarity_transformer/body/string_embedding/encoder/layer_1/self_attention/layer_prepostprocess/layer_norm/layer_norm_bias/Read/ReadVariableOp"
      op: "ReadVariableOp"
      input: "cs_similarity_transformer/body/string_embedding/encoder/layer_1/self_attention/layer_prepostprocess/layer_norm/layer_norm_bias"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@cs_similarity_transformer/body/string_embedding/encoder/layer_1/self_attention/layer_prepostprocess/layer_norm/layer_norm_bias"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "Read_57/ReadVariableOp"
      op: "ReadVariableOp"
      input: "Read_57/ReadVariableOp/Switch"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "Read_57/ReadVariableOp/Switch"
      op: "Switch"
      input: "cs_similarity_transformer/body/string_embedding/encoder/layer_1/self_attention/layer_prepostprocess/layer_norm/layer_norm_bias"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/pred_id"
      attr {
        key: "T"
        value {
          type: DT_RESOURCE
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@cs_similarity_transformer/body/string_embedding/encoder/layer_1/self_attention/layer_prepostprocess/layer_norm/layer_norm_bias"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
            shape {
            }
          }
        }
      }
    }
    node {
      name: "Identity_57"
      op: "Identity"
      input: "Read_57/ReadVariableOp"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/layer_prepostprocess/layer_norm/Const"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_f"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 9.999999974752427e-07
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/layer_prepostprocess/layer_norm/Mean/reduction_indices"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_f"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: -1
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/layer_prepostprocess/layer_norm/Mean"
      op: "Mean"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/ffn/layer_postprocess/add"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/layer_prepostprocess/layer_norm/Mean/reduction_indices"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: true
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/layer_prepostprocess/layer_norm/sub"
      op: "Sub"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/ffn/layer_postprocess/add"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/layer_prepostprocess/layer_norm/Mean"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: -1
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/layer_prepostprocess/layer_norm/Square"
      op: "Square"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/layer_prepostprocess/layer_norm/sub"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: -1
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/layer_prepostprocess/layer_norm/Mean_1/reduction_indices"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_f"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: -1
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/layer_prepostprocess/layer_norm/Mean_1"
      op: "Mean"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/layer_prepostprocess/layer_norm/Square"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/layer_prepostprocess/layer_norm/Mean_1/reduction_indices"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: true
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/layer_prepostprocess/layer_norm/sub_1"
      op: "Sub"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/ffn/layer_postprocess/add"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/layer_prepostprocess/layer_norm/Mean"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: -1
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/layer_prepostprocess/layer_norm/add"
      op: "Add"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/layer_prepostprocess/layer_norm/Mean_1"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/layer_prepostprocess/layer_norm/Const"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/layer_prepostprocess/layer_norm/Rsqrt"
      op: "Rsqrt"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/layer_prepostprocess/layer_norm/add"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/layer_prepostprocess/layer_norm/mul"
      op: "Mul"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/layer_prepostprocess/layer_norm/sub_1"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/layer_prepostprocess/layer_norm/Rsqrt"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: -1
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/layer_prepostprocess/layer_norm/mul_1"
      op: "Mul"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/layer_prepostprocess/layer_norm/mul"
      input: "Identity_56"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: -1
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/layer_prepostprocess/layer_norm/add_1"
      op: "Add"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/layer_prepostprocess/layer_norm/mul_1"
      input: "Identity_57"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: -1
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/body/string_embedding/encoder/layer_1/self_attention/multihead_attention/q/kernel/Initializer/random_uniform/shape"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@cs_similarity_transformer/body/string_embedding/encoder/layer_1/self_attention/multihead_attention/q/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 2
              }
            }
            tensor_content: "\200\000\000\000\200\000\000\000"
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/body/string_embedding/encoder/layer_1/self_attention/multihead_attention/q/kernel/Initializer/random_uniform/min"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@cs_similarity_transformer/body/string_embedding/encoder/layer_1/self_attention/multihead_attention/q/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: -0.1530931144952774
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/body/string_embedding/encoder/layer_1/self_attention/multihead_attention/q/kernel/Initializer/random_uniform/max"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@cs_similarity_transformer/body/string_embedding/encoder/layer_1/self_attention/multihead_attention/q/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.1530931144952774
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/body/string_embedding/encoder/layer_1/self_attention/multihead_attention/q/kernel/Initializer/random_uniform/RandomUniform"
      op: "RandomUniform"
      input: "cs_similarity_transformer/body/string_embedding/encoder/layer_1/self_attention/multihead_attention/q/kernel/Initializer/random_uniform/shape"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@cs_similarity_transformer/body/string_embedding/encoder/layer_1/self_attention/multihead_attention/q/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "cs_similarity_transformer/body/string_embedding/encoder/layer_1/self_attention/multihead_attention/q/kernel/Initializer/random_uniform/sub"
      op: "Sub"
      input: "cs_similarity_transformer/body/string_embedding/encoder/layer_1/self_attention/multihead_attention/q/kernel/Initializer/random_uniform/max"
      input: "cs_similarity_transformer/body/string_embedding/encoder/layer_1/self_attention/multihead_attention/q/kernel/Initializer/random_uniform/min"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@cs_similarity_transformer/body/string_embedding/encoder/layer_1/self_attention/multihead_attention/q/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/body/string_embedding/encoder/layer_1/self_attention/multihead_attention/q/kernel/Initializer/random_uniform/mul"
      op: "Mul"
      input: "cs_similarity_transformer/body/string_embedding/encoder/layer_1/self_attention/multihead_attention/q/kernel/Initializer/random_uniform/RandomUniform"
      input: "cs_similarity_transformer/body/string_embedding/encoder/layer_1/self_attention/multihead_attention/q/kernel/Initializer/random_uniform/sub"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@cs_similarity_transformer/body/string_embedding/encoder/layer_1/self_attention/multihead_attention/q/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/body/string_embedding/encoder/layer_1/self_attention/multihead_attention/q/kernel/Initializer/random_uniform"
      op: "Add"
      input: "cs_similarity_transformer/body/string_embedding/encoder/layer_1/self_attention/multihead_attention/q/kernel/Initializer/random_uniform/mul"
      input: "cs_similarity_transformer/body/string_embedding/encoder/layer_1/self_attention/multihead_attention/q/kernel/Initializer/random_uniform/min"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@cs_similarity_transformer/body/string_embedding/encoder/layer_1/self_attention/multihead_attention/q/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/body/string_embedding/encoder/layer_1/self_attention/multihead_attention/q/kernel"
      op: "VarHandleOp"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@cs_similarity_transformer/body/string_embedding/encoder/layer_1/self_attention/multihead_attention/q/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 128
            }
            dim {
              size: 128
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: "cs_similarity_transformer/body/string_embedding/encoder/layer_1/self_attention/multihead_attention/q/kernel"
        }
      }
    }
    node {
      name: "cs_similarity_transformer/body/string_embedding/encoder/layer_1/self_attention/multihead_attention/q/kernel/IsInitialized/VarIsInitializedOp"
      op: "VarIsInitializedOp"
      input: "cs_similarity_transformer/body/string_embedding/encoder/layer_1/self_attention/multihead_attention/q/kernel"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/body/string_embedding/encoder/layer_1/self_attention/multihead_attention/q/kernel/Assign"
      op: "AssignVariableOp"
      input: "cs_similarity_transformer/body/string_embedding/encoder/layer_1/self_attention/multihead_attention/q/kernel"
      input: "cs_similarity_transformer/body/string_embedding/encoder/layer_1/self_attention/multihead_attention/q/kernel/Initializer/random_uniform"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@cs_similarity_transformer/body/string_embedding/encoder/layer_1/self_attention/multihead_attention/q/kernel"
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "cs_similarity_transformer/body/string_embedding/encoder/layer_1/self_attention/multihead_attention/q/kernel/Read/ReadVariableOp"
      op: "ReadVariableOp"
      input: "cs_similarity_transformer/body/string_embedding/encoder/layer_1/self_attention/multihead_attention/q/kernel"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@cs_similarity_transformer/body/string_embedding/encoder/layer_1/self_attention/multihead_attention/q/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "Read_58/ReadVariableOp"
      op: "ReadVariableOp"
      input: "Read_58/ReadVariableOp/Switch"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "Read_58/ReadVariableOp/Switch"
      op: "Switch"
      input: "cs_similarity_transformer/body/string_embedding/encoder/layer_1/self_attention/multihead_attention/q/kernel"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/pred_id"
      attr {
        key: "T"
        value {
          type: DT_RESOURCE
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@cs_similarity_transformer/body/string_embedding/encoder/layer_1/self_attention/multihead_attention/q/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
            shape {
            }
          }
        }
      }
    }
    node {
      name: "Identity_58"
      op: "Identity"
      input: "Read_58/ReadVariableOp"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/q/Tensordot/Shape"
      op: "Shape"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/layer_prepostprocess/layer_norm/add_1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/q/Tensordot/Rank"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_f"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 3
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/q/Tensordot/axes"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_f"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 2
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/q/Tensordot/GreaterEqual/y"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_f"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/q/Tensordot/GreaterEqual"
      op: "GreaterEqual"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/q/Tensordot/axes"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/q/Tensordot/GreaterEqual/y"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/q/Tensordot/Cast"
      op: "Cast"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/q/Tensordot/GreaterEqual"
      attr {
        key: "DstT"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "SrcT"
        value {
          type: DT_BOOL
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/q/Tensordot/mul"
      op: "Mul"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/q/Tensordot/Cast"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/q/Tensordot/axes"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/q/Tensordot/Less/y"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_f"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/q/Tensordot/Less"
      op: "Less"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/q/Tensordot/axes"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/q/Tensordot/Less/y"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/q/Tensordot/Cast_1"
      op: "Cast"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/q/Tensordot/Less"
      attr {
        key: "DstT"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "SrcT"
        value {
          type: DT_BOOL
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/q/Tensordot/add"
      op: "Add"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/q/Tensordot/axes"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/q/Tensordot/Rank"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/q/Tensordot/mul_1"
      op: "Mul"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/q/Tensordot/Cast_1"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/q/Tensordot/add"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/q/Tensordot/add_1"
      op: "Add"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/q/Tensordot/mul"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/q/Tensordot/mul_1"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/q/Tensordot/range/start"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_f"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/q/Tensordot/range/delta"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_f"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/q/Tensordot/range"
      op: "Range"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/q/Tensordot/range/start"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/q/Tensordot/Rank"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/q/Tensordot/range/delta"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/q/Tensordot/ListDiff"
      op: "ListDiff"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/q/Tensordot/range"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/q/Tensordot/add_1"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/q/Tensordot/GatherV2/axis"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_f"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/q/Tensordot/GatherV2"
      op: "GatherV2"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/q/Tensordot/Shape"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/q/Tensordot/ListDiff"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/q/Tensordot/GatherV2/axis"
      attr {
        key: "Taxis"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "Tindices"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "Tparams"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/q/Tensordot/GatherV2_1/axis"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_f"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/q/Tensordot/GatherV2_1"
      op: "GatherV2"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/q/Tensordot/Shape"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/q/Tensordot/add_1"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/q/Tensordot/GatherV2_1/axis"
      attr {
        key: "Taxis"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "Tindices"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "Tparams"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/q/Tensordot/Const"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_f"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/q/Tensordot/Prod"
      op: "Prod"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/q/Tensordot/GatherV2"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/q/Tensordot/Const"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/q/Tensordot/Const_1"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_f"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/q/Tensordot/Prod_1"
      op: "Prod"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/q/Tensordot/GatherV2_1"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/q/Tensordot/Const_1"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/q/Tensordot/concat/axis"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_f"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/q/Tensordot/concat"
      op: "ConcatV2"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/q/Tensordot/GatherV2_1"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/q/Tensordot/GatherV2"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/q/Tensordot/concat/axis"
      attr {
        key: "N"
        value {
          i: 2
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/q/Tensordot/concat_1/axis"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_f"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/q/Tensordot/concat_1"
      op: "ConcatV2"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/q/Tensordot/ListDiff"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/q/Tensordot/add_1"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/q/Tensordot/concat_1/axis"
      attr {
        key: "N"
        value {
          i: 2
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/q/Tensordot/stack"
      op: "Pack"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/q/Tensordot/Prod"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/q/Tensordot/Prod_1"
      attr {
        key: "N"
        value {
          i: 2
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/q/Tensordot/transpose"
      op: "Transpose"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/layer_prepostprocess/layer_norm/add_1"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/q/Tensordot/concat_1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: -1
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/q/Tensordot/Reshape"
      op: "Reshape"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/q/Tensordot/transpose"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/q/Tensordot/stack"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/q/Tensordot/transpose_1/perm"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_f"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 2
              }
            }
            tensor_content: "\000\000\000\000\001\000\000\000"
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/q/Tensordot/transpose_1"
      op: "Transpose"
      input: "Identity_58"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/q/Tensordot/transpose_1/perm"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/q/Tensordot/Reshape_1/shape"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_f"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 2
              }
            }
            tensor_content: "\200\000\000\000\200\000\000\000"
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/q/Tensordot/Reshape_1"
      op: "Reshape"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/q/Tensordot/transpose_1"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/q/Tensordot/Reshape_1/shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/q/Tensordot/MatMul"
      op: "MatMul"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/q/Tensordot/Reshape"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/q/Tensordot/Reshape_1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/q/Tensordot/Const_2"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_f"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 128
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/q/Tensordot/concat_2/axis"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_f"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/q/Tensordot/concat_2"
      op: "ConcatV2"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/q/Tensordot/GatherV2"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/q/Tensordot/Const_2"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/q/Tensordot/concat_2/axis"
      attr {
        key: "N"
        value {
          i: 2
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/q/Tensordot"
      op: "Reshape"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/q/Tensordot/MatMul"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/q/Tensordot/concat_2"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: -1
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/body/string_embedding/encoder/layer_1/self_attention/multihead_attention/k/kernel/Initializer/random_uniform/shape"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@cs_similarity_transformer/body/string_embedding/encoder/layer_1/self_attention/multihead_attention/k/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 2
              }
            }
            tensor_content: "\200\000\000\000\200\000\000\000"
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/body/string_embedding/encoder/layer_1/self_attention/multihead_attention/k/kernel/Initializer/random_uniform/min"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@cs_similarity_transformer/body/string_embedding/encoder/layer_1/self_attention/multihead_attention/k/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: -0.1530931144952774
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/body/string_embedding/encoder/layer_1/self_attention/multihead_attention/k/kernel/Initializer/random_uniform/max"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@cs_similarity_transformer/body/string_embedding/encoder/layer_1/self_attention/multihead_attention/k/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.1530931144952774
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/body/string_embedding/encoder/layer_1/self_attention/multihead_attention/k/kernel/Initializer/random_uniform/RandomUniform"
      op: "RandomUniform"
      input: "cs_similarity_transformer/body/string_embedding/encoder/layer_1/self_attention/multihead_attention/k/kernel/Initializer/random_uniform/shape"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@cs_similarity_transformer/body/string_embedding/encoder/layer_1/self_attention/multihead_attention/k/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "cs_similarity_transformer/body/string_embedding/encoder/layer_1/self_attention/multihead_attention/k/kernel/Initializer/random_uniform/sub"
      op: "Sub"
      input: "cs_similarity_transformer/body/string_embedding/encoder/layer_1/self_attention/multihead_attention/k/kernel/Initializer/random_uniform/max"
      input: "cs_similarity_transformer/body/string_embedding/encoder/layer_1/self_attention/multihead_attention/k/kernel/Initializer/random_uniform/min"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@cs_similarity_transformer/body/string_embedding/encoder/layer_1/self_attention/multihead_attention/k/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/body/string_embedding/encoder/layer_1/self_attention/multihead_attention/k/kernel/Initializer/random_uniform/mul"
      op: "Mul"
      input: "cs_similarity_transformer/body/string_embedding/encoder/layer_1/self_attention/multihead_attention/k/kernel/Initializer/random_uniform/RandomUniform"
      input: "cs_similarity_transformer/body/string_embedding/encoder/layer_1/self_attention/multihead_attention/k/kernel/Initializer/random_uniform/sub"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@cs_similarity_transformer/body/string_embedding/encoder/layer_1/self_attention/multihead_attention/k/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/body/string_embedding/encoder/layer_1/self_attention/multihead_attention/k/kernel/Initializer/random_uniform"
      op: "Add"
      input: "cs_similarity_transformer/body/string_embedding/encoder/layer_1/self_attention/multihead_attention/k/kernel/Initializer/random_uniform/mul"
      input: "cs_similarity_transformer/body/string_embedding/encoder/layer_1/self_attention/multihead_attention/k/kernel/Initializer/random_uniform/min"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@cs_similarity_transformer/body/string_embedding/encoder/layer_1/self_attention/multihead_attention/k/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/body/string_embedding/encoder/layer_1/self_attention/multihead_attention/k/kernel"
      op: "VarHandleOp"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@cs_similarity_transformer/body/string_embedding/encoder/layer_1/self_attention/multihead_attention/k/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 128
            }
            dim {
              size: 128
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: "cs_similarity_transformer/body/string_embedding/encoder/layer_1/self_attention/multihead_attention/k/kernel"
        }
      }
    }
    node {
      name: "cs_similarity_transformer/body/string_embedding/encoder/layer_1/self_attention/multihead_attention/k/kernel/IsInitialized/VarIsInitializedOp"
      op: "VarIsInitializedOp"
      input: "cs_similarity_transformer/body/string_embedding/encoder/layer_1/self_attention/multihead_attention/k/kernel"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/body/string_embedding/encoder/layer_1/self_attention/multihead_attention/k/kernel/Assign"
      op: "AssignVariableOp"
      input: "cs_similarity_transformer/body/string_embedding/encoder/layer_1/self_attention/multihead_attention/k/kernel"
      input: "cs_similarity_transformer/body/string_embedding/encoder/layer_1/self_attention/multihead_attention/k/kernel/Initializer/random_uniform"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@cs_similarity_transformer/body/string_embedding/encoder/layer_1/self_attention/multihead_attention/k/kernel"
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "cs_similarity_transformer/body/string_embedding/encoder/layer_1/self_attention/multihead_attention/k/kernel/Read/ReadVariableOp"
      op: "ReadVariableOp"
      input: "cs_similarity_transformer/body/string_embedding/encoder/layer_1/self_attention/multihead_attention/k/kernel"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@cs_similarity_transformer/body/string_embedding/encoder/layer_1/self_attention/multihead_attention/k/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "Read_59/ReadVariableOp"
      op: "ReadVariableOp"
      input: "Read_59/ReadVariableOp/Switch"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "Read_59/ReadVariableOp/Switch"
      op: "Switch"
      input: "cs_similarity_transformer/body/string_embedding/encoder/layer_1/self_attention/multihead_attention/k/kernel"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/pred_id"
      attr {
        key: "T"
        value {
          type: DT_RESOURCE
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@cs_similarity_transformer/body/string_embedding/encoder/layer_1/self_attention/multihead_attention/k/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
            shape {
            }
          }
        }
      }
    }
    node {
      name: "Identity_59"
      op: "Identity"
      input: "Read_59/ReadVariableOp"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/k/Tensordot/Shape"
      op: "Shape"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/layer_prepostprocess/layer_norm/add_1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/k/Tensordot/Rank"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_f"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 3
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/k/Tensordot/axes"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_f"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 2
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/k/Tensordot/GreaterEqual/y"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_f"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/k/Tensordot/GreaterEqual"
      op: "GreaterEqual"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/k/Tensordot/axes"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/k/Tensordot/GreaterEqual/y"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/k/Tensordot/Cast"
      op: "Cast"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/k/Tensordot/GreaterEqual"
      attr {
        key: "DstT"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "SrcT"
        value {
          type: DT_BOOL
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/k/Tensordot/mul"
      op: "Mul"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/k/Tensordot/Cast"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/k/Tensordot/axes"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/k/Tensordot/Less/y"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_f"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/k/Tensordot/Less"
      op: "Less"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/k/Tensordot/axes"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/k/Tensordot/Less/y"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/k/Tensordot/Cast_1"
      op: "Cast"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/k/Tensordot/Less"
      attr {
        key: "DstT"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "SrcT"
        value {
          type: DT_BOOL
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/k/Tensordot/add"
      op: "Add"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/k/Tensordot/axes"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/k/Tensordot/Rank"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/k/Tensordot/mul_1"
      op: "Mul"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/k/Tensordot/Cast_1"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/k/Tensordot/add"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/k/Tensordot/add_1"
      op: "Add"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/k/Tensordot/mul"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/k/Tensordot/mul_1"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/k/Tensordot/range/start"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_f"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/k/Tensordot/range/delta"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_f"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/k/Tensordot/range"
      op: "Range"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/k/Tensordot/range/start"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/k/Tensordot/Rank"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/k/Tensordot/range/delta"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/k/Tensordot/ListDiff"
      op: "ListDiff"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/k/Tensordot/range"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/k/Tensordot/add_1"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/k/Tensordot/GatherV2/axis"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_f"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/k/Tensordot/GatherV2"
      op: "GatherV2"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/k/Tensordot/Shape"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/k/Tensordot/ListDiff"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/k/Tensordot/GatherV2/axis"
      attr {
        key: "Taxis"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "Tindices"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "Tparams"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/k/Tensordot/GatherV2_1/axis"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_f"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/k/Tensordot/GatherV2_1"
      op: "GatherV2"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/k/Tensordot/Shape"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/k/Tensordot/add_1"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/k/Tensordot/GatherV2_1/axis"
      attr {
        key: "Taxis"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "Tindices"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "Tparams"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/k/Tensordot/Const"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_f"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/k/Tensordot/Prod"
      op: "Prod"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/k/Tensordot/GatherV2"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/k/Tensordot/Const"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/k/Tensordot/Const_1"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_f"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/k/Tensordot/Prod_1"
      op: "Prod"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/k/Tensordot/GatherV2_1"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/k/Tensordot/Const_1"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/k/Tensordot/concat/axis"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_f"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/k/Tensordot/concat"
      op: "ConcatV2"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/k/Tensordot/GatherV2_1"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/k/Tensordot/GatherV2"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/k/Tensordot/concat/axis"
      attr {
        key: "N"
        value {
          i: 2
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/k/Tensordot/concat_1/axis"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_f"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/k/Tensordot/concat_1"
      op: "ConcatV2"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/k/Tensordot/ListDiff"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/k/Tensordot/add_1"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/k/Tensordot/concat_1/axis"
      attr {
        key: "N"
        value {
          i: 2
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/k/Tensordot/stack"
      op: "Pack"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/k/Tensordot/Prod"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/k/Tensordot/Prod_1"
      attr {
        key: "N"
        value {
          i: 2
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/k/Tensordot/transpose"
      op: "Transpose"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/layer_prepostprocess/layer_norm/add_1"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/k/Tensordot/concat_1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: -1
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/k/Tensordot/Reshape"
      op: "Reshape"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/k/Tensordot/transpose"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/k/Tensordot/stack"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/k/Tensordot/transpose_1/perm"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_f"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 2
              }
            }
            tensor_content: "\000\000\000\000\001\000\000\000"
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/k/Tensordot/transpose_1"
      op: "Transpose"
      input: "Identity_59"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/k/Tensordot/transpose_1/perm"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/k/Tensordot/Reshape_1/shape"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_f"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 2
              }
            }
            tensor_content: "\200\000\000\000\200\000\000\000"
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/k/Tensordot/Reshape_1"
      op: "Reshape"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/k/Tensordot/transpose_1"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/k/Tensordot/Reshape_1/shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/k/Tensordot/MatMul"
      op: "MatMul"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/k/Tensordot/Reshape"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/k/Tensordot/Reshape_1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/k/Tensordot/Const_2"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_f"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 128
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/k/Tensordot/concat_2/axis"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_f"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/k/Tensordot/concat_2"
      op: "ConcatV2"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/k/Tensordot/GatherV2"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/k/Tensordot/Const_2"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/k/Tensordot/concat_2/axis"
      attr {
        key: "N"
        value {
          i: 2
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/k/Tensordot"
      op: "Reshape"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/k/Tensordot/MatMul"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/k/Tensordot/concat_2"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: -1
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/body/string_embedding/encoder/layer_1/self_attention/multihead_attention/v/kernel/Initializer/random_uniform/shape"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@cs_similarity_transformer/body/string_embedding/encoder/layer_1/self_attention/multihead_attention/v/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 2
              }
            }
            tensor_content: "\200\000\000\000\200\000\000\000"
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/body/string_embedding/encoder/layer_1/self_attention/multihead_attention/v/kernel/Initializer/random_uniform/min"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@cs_similarity_transformer/body/string_embedding/encoder/layer_1/self_attention/multihead_attention/v/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: -0.1530931144952774
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/body/string_embedding/encoder/layer_1/self_attention/multihead_attention/v/kernel/Initializer/random_uniform/max"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@cs_similarity_transformer/body/string_embedding/encoder/layer_1/self_attention/multihead_attention/v/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.1530931144952774
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/body/string_embedding/encoder/layer_1/self_attention/multihead_attention/v/kernel/Initializer/random_uniform/RandomUniform"
      op: "RandomUniform"
      input: "cs_similarity_transformer/body/string_embedding/encoder/layer_1/self_attention/multihead_attention/v/kernel/Initializer/random_uniform/shape"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@cs_similarity_transformer/body/string_embedding/encoder/layer_1/self_attention/multihead_attention/v/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "cs_similarity_transformer/body/string_embedding/encoder/layer_1/self_attention/multihead_attention/v/kernel/Initializer/random_uniform/sub"
      op: "Sub"
      input: "cs_similarity_transformer/body/string_embedding/encoder/layer_1/self_attention/multihead_attention/v/kernel/Initializer/random_uniform/max"
      input: "cs_similarity_transformer/body/string_embedding/encoder/layer_1/self_attention/multihead_attention/v/kernel/Initializer/random_uniform/min"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@cs_similarity_transformer/body/string_embedding/encoder/layer_1/self_attention/multihead_attention/v/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/body/string_embedding/encoder/layer_1/self_attention/multihead_attention/v/kernel/Initializer/random_uniform/mul"
      op: "Mul"
      input: "cs_similarity_transformer/body/string_embedding/encoder/layer_1/self_attention/multihead_attention/v/kernel/Initializer/random_uniform/RandomUniform"
      input: "cs_similarity_transformer/body/string_embedding/encoder/layer_1/self_attention/multihead_attention/v/kernel/Initializer/random_uniform/sub"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@cs_similarity_transformer/body/string_embedding/encoder/layer_1/self_attention/multihead_attention/v/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/body/string_embedding/encoder/layer_1/self_attention/multihead_attention/v/kernel/Initializer/random_uniform"
      op: "Add"
      input: "cs_similarity_transformer/body/string_embedding/encoder/layer_1/self_attention/multihead_attention/v/kernel/Initializer/random_uniform/mul"
      input: "cs_similarity_transformer/body/string_embedding/encoder/layer_1/self_attention/multihead_attention/v/kernel/Initializer/random_uniform/min"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@cs_similarity_transformer/body/string_embedding/encoder/layer_1/self_attention/multihead_attention/v/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/body/string_embedding/encoder/layer_1/self_attention/multihead_attention/v/kernel"
      op: "VarHandleOp"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@cs_similarity_transformer/body/string_embedding/encoder/layer_1/self_attention/multihead_attention/v/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 128
            }
            dim {
              size: 128
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: "cs_similarity_transformer/body/string_embedding/encoder/layer_1/self_attention/multihead_attention/v/kernel"
        }
      }
    }
    node {
      name: "cs_similarity_transformer/body/string_embedding/encoder/layer_1/self_attention/multihead_attention/v/kernel/IsInitialized/VarIsInitializedOp"
      op: "VarIsInitializedOp"
      input: "cs_similarity_transformer/body/string_embedding/encoder/layer_1/self_attention/multihead_attention/v/kernel"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/body/string_embedding/encoder/layer_1/self_attention/multihead_attention/v/kernel/Assign"
      op: "AssignVariableOp"
      input: "cs_similarity_transformer/body/string_embedding/encoder/layer_1/self_attention/multihead_attention/v/kernel"
      input: "cs_similarity_transformer/body/string_embedding/encoder/layer_1/self_attention/multihead_attention/v/kernel/Initializer/random_uniform"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@cs_similarity_transformer/body/string_embedding/encoder/layer_1/self_attention/multihead_attention/v/kernel"
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "cs_similarity_transformer/body/string_embedding/encoder/layer_1/self_attention/multihead_attention/v/kernel/Read/ReadVariableOp"
      op: "ReadVariableOp"
      input: "cs_similarity_transformer/body/string_embedding/encoder/layer_1/self_attention/multihead_attention/v/kernel"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@cs_similarity_transformer/body/string_embedding/encoder/layer_1/self_attention/multihead_attention/v/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "Read_60/ReadVariableOp"
      op: "ReadVariableOp"
      input: "Read_60/ReadVariableOp/Switch"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "Read_60/ReadVariableOp/Switch"
      op: "Switch"
      input: "cs_similarity_transformer/body/string_embedding/encoder/layer_1/self_attention/multihead_attention/v/kernel"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/pred_id"
      attr {
        key: "T"
        value {
          type: DT_RESOURCE
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@cs_similarity_transformer/body/string_embedding/encoder/layer_1/self_attention/multihead_attention/v/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
            shape {
            }
          }
        }
      }
    }
    node {
      name: "Identity_60"
      op: "Identity"
      input: "Read_60/ReadVariableOp"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/v/Tensordot/Shape"
      op: "Shape"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/layer_prepostprocess/layer_norm/add_1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/v/Tensordot/Rank"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_f"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 3
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/v/Tensordot/axes"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_f"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 2
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/v/Tensordot/GreaterEqual/y"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_f"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/v/Tensordot/GreaterEqual"
      op: "GreaterEqual"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/v/Tensordot/axes"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/v/Tensordot/GreaterEqual/y"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/v/Tensordot/Cast"
      op: "Cast"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/v/Tensordot/GreaterEqual"
      attr {
        key: "DstT"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "SrcT"
        value {
          type: DT_BOOL
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/v/Tensordot/mul"
      op: "Mul"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/v/Tensordot/Cast"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/v/Tensordot/axes"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/v/Tensordot/Less/y"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_f"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/v/Tensordot/Less"
      op: "Less"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/v/Tensordot/axes"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/v/Tensordot/Less/y"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/v/Tensordot/Cast_1"
      op: "Cast"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/v/Tensordot/Less"
      attr {
        key: "DstT"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "SrcT"
        value {
          type: DT_BOOL
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/v/Tensordot/add"
      op: "Add"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/v/Tensordot/axes"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/v/Tensordot/Rank"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/v/Tensordot/mul_1"
      op: "Mul"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/v/Tensordot/Cast_1"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/v/Tensordot/add"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/v/Tensordot/add_1"
      op: "Add"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/v/Tensordot/mul"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/v/Tensordot/mul_1"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/v/Tensordot/range/start"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_f"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/v/Tensordot/range/delta"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_f"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/v/Tensordot/range"
      op: "Range"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/v/Tensordot/range/start"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/v/Tensordot/Rank"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/v/Tensordot/range/delta"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/v/Tensordot/ListDiff"
      op: "ListDiff"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/v/Tensordot/range"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/v/Tensordot/add_1"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/v/Tensordot/GatherV2/axis"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_f"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/v/Tensordot/GatherV2"
      op: "GatherV2"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/v/Tensordot/Shape"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/v/Tensordot/ListDiff"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/v/Tensordot/GatherV2/axis"
      attr {
        key: "Taxis"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "Tindices"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "Tparams"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/v/Tensordot/GatherV2_1/axis"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_f"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/v/Tensordot/GatherV2_1"
      op: "GatherV2"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/v/Tensordot/Shape"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/v/Tensordot/add_1"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/v/Tensordot/GatherV2_1/axis"
      attr {
        key: "Taxis"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "Tindices"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "Tparams"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/v/Tensordot/Const"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_f"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/v/Tensordot/Prod"
      op: "Prod"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/v/Tensordot/GatherV2"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/v/Tensordot/Const"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/v/Tensordot/Const_1"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_f"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/v/Tensordot/Prod_1"
      op: "Prod"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/v/Tensordot/GatherV2_1"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/v/Tensordot/Const_1"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/v/Tensordot/concat/axis"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_f"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/v/Tensordot/concat"
      op: "ConcatV2"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/v/Tensordot/GatherV2_1"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/v/Tensordot/GatherV2"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/v/Tensordot/concat/axis"
      attr {
        key: "N"
        value {
          i: 2
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/v/Tensordot/concat_1/axis"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_f"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/v/Tensordot/concat_1"
      op: "ConcatV2"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/v/Tensordot/ListDiff"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/v/Tensordot/add_1"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/v/Tensordot/concat_1/axis"
      attr {
        key: "N"
        value {
          i: 2
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/v/Tensordot/stack"
      op: "Pack"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/v/Tensordot/Prod"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/v/Tensordot/Prod_1"
      attr {
        key: "N"
        value {
          i: 2
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/v/Tensordot/transpose"
      op: "Transpose"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/layer_prepostprocess/layer_norm/add_1"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/v/Tensordot/concat_1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: -1
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/v/Tensordot/Reshape"
      op: "Reshape"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/v/Tensordot/transpose"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/v/Tensordot/stack"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/v/Tensordot/transpose_1/perm"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_f"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 2
              }
            }
            tensor_content: "\000\000\000\000\001\000\000\000"
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/v/Tensordot/transpose_1"
      op: "Transpose"
      input: "Identity_60"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/v/Tensordot/transpose_1/perm"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/v/Tensordot/Reshape_1/shape"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_f"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 2
              }
            }
            tensor_content: "\200\000\000\000\200\000\000\000"
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/v/Tensordot/Reshape_1"
      op: "Reshape"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/v/Tensordot/transpose_1"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/v/Tensordot/Reshape_1/shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/v/Tensordot/MatMul"
      op: "MatMul"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/v/Tensordot/Reshape"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/v/Tensordot/Reshape_1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/v/Tensordot/Const_2"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_f"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 128
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/v/Tensordot/concat_2/axis"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_f"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/v/Tensordot/concat_2"
      op: "ConcatV2"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/v/Tensordot/GatherV2"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/v/Tensordot/Const_2"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/v/Tensordot/concat_2/axis"
      attr {
        key: "N"
        value {
          i: 2
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/v/Tensordot"
      op: "Reshape"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/v/Tensordot/MatMul"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/v/Tensordot/concat_2"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: -1
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/split_heads/split_last_dimension/Shape"
      op: "Shape"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/q/Tensordot"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/split_heads/split_last_dimension/strided_slice/stack"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_f"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/split_heads/split_last_dimension/strided_slice/stack_1"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_f"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/split_heads/split_last_dimension/strided_slice/stack_2"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_f"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/split_heads/split_last_dimension/strided_slice"
      op: "StridedSlice"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/split_heads/split_last_dimension/Shape"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/split_heads/split_last_dimension/strided_slice/stack"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/split_heads/split_last_dimension/strided_slice/stack_1"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/split_heads/split_last_dimension/strided_slice/stack_2"
      attr {
        key: "Index"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "shrink_axis_mask"
        value {
          i: 1
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/split_heads/split_last_dimension/strided_slice_1/stack"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_f"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/split_heads/split_last_dimension/strided_slice_1/stack_1"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_f"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 2
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/split_heads/split_last_dimension/strided_slice_1/stack_2"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_f"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/split_heads/split_last_dimension/strided_slice_1"
      op: "StridedSlice"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/split_heads/split_last_dimension/Shape"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/split_heads/split_last_dimension/strided_slice_1/stack"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/split_heads/split_last_dimension/strided_slice_1/stack_1"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/split_heads/split_last_dimension/strided_slice_1/stack_2"
      attr {
        key: "Index"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "shrink_axis_mask"
        value {
          i: 1
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/split_heads/split_last_dimension/Reshape/shape/2"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_f"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 4
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/split_heads/split_last_dimension/Reshape/shape/3"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_f"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 32
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/split_heads/split_last_dimension/Reshape/shape"
      op: "Pack"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/split_heads/split_last_dimension/strided_slice"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/split_heads/split_last_dimension/strided_slice_1"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/split_heads/split_last_dimension/Reshape/shape/2"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/split_heads/split_last_dimension/Reshape/shape/3"
      attr {
        key: "N"
        value {
          i: 4
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 4
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/split_heads/split_last_dimension/Reshape"
      op: "Reshape"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/q/Tensordot"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/split_heads/split_last_dimension/Reshape/shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: -1
              }
              dim {
                size: 4
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/split_heads/transpose/perm"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_f"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 4
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 4
              }
            }
            tensor_content: "\000\000\000\000\002\000\000\000\001\000\000\000\003\000\000\000"
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/split_heads/transpose"
      op: "Transpose"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/split_heads/split_last_dimension/Reshape"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/split_heads/transpose/perm"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 4
              }
              dim {
                size: -1
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/split_heads_1/split_last_dimension/Shape"
      op: "Shape"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/k/Tensordot"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/split_heads_1/split_last_dimension/strided_slice/stack"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_f"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/split_heads_1/split_last_dimension/strided_slice/stack_1"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_f"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/split_heads_1/split_last_dimension/strided_slice/stack_2"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_f"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/split_heads_1/split_last_dimension/strided_slice"
      op: "StridedSlice"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/split_heads_1/split_last_dimension/Shape"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/split_heads_1/split_last_dimension/strided_slice/stack"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/split_heads_1/split_last_dimension/strided_slice/stack_1"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/split_heads_1/split_last_dimension/strided_slice/stack_2"
      attr {
        key: "Index"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "shrink_axis_mask"
        value {
          i: 1
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/split_heads_1/split_last_dimension/strided_slice_1/stack"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_f"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/split_heads_1/split_last_dimension/strided_slice_1/stack_1"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_f"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 2
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/split_heads_1/split_last_dimension/strided_slice_1/stack_2"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_f"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/split_heads_1/split_last_dimension/strided_slice_1"
      op: "StridedSlice"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/split_heads_1/split_last_dimension/Shape"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/split_heads_1/split_last_dimension/strided_slice_1/stack"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/split_heads_1/split_last_dimension/strided_slice_1/stack_1"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/split_heads_1/split_last_dimension/strided_slice_1/stack_2"
      attr {
        key: "Index"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "shrink_axis_mask"
        value {
          i: 1
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/split_heads_1/split_last_dimension/Reshape/shape/2"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_f"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 4
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/split_heads_1/split_last_dimension/Reshape/shape/3"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_f"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 32
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/split_heads_1/split_last_dimension/Reshape/shape"
      op: "Pack"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/split_heads_1/split_last_dimension/strided_slice"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/split_heads_1/split_last_dimension/strided_slice_1"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/split_heads_1/split_last_dimension/Reshape/shape/2"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/split_heads_1/split_last_dimension/Reshape/shape/3"
      attr {
        key: "N"
        value {
          i: 4
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 4
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/split_heads_1/split_last_dimension/Reshape"
      op: "Reshape"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/k/Tensordot"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/split_heads_1/split_last_dimension/Reshape/shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: -1
              }
              dim {
                size: 4
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/split_heads_1/transpose/perm"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_f"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 4
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 4
              }
            }
            tensor_content: "\000\000\000\000\002\000\000\000\001\000\000\000\003\000\000\000"
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/split_heads_1/transpose"
      op: "Transpose"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/split_heads_1/split_last_dimension/Reshape"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/split_heads_1/transpose/perm"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 4
              }
              dim {
                size: -1
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/split_heads_2/split_last_dimension/Shape"
      op: "Shape"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/v/Tensordot"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/split_heads_2/split_last_dimension/strided_slice/stack"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_f"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/split_heads_2/split_last_dimension/strided_slice/stack_1"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_f"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/split_heads_2/split_last_dimension/strided_slice/stack_2"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_f"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/split_heads_2/split_last_dimension/strided_slice"
      op: "StridedSlice"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/split_heads_2/split_last_dimension/Shape"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/split_heads_2/split_last_dimension/strided_slice/stack"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/split_heads_2/split_last_dimension/strided_slice/stack_1"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/split_heads_2/split_last_dimension/strided_slice/stack_2"
      attr {
        key: "Index"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "shrink_axis_mask"
        value {
          i: 1
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/split_heads_2/split_last_dimension/strided_slice_1/stack"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_f"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/split_heads_2/split_last_dimension/strided_slice_1/stack_1"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_f"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 2
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/split_heads_2/split_last_dimension/strided_slice_1/stack_2"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_f"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/split_heads_2/split_last_dimension/strided_slice_1"
      op: "StridedSlice"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/split_heads_2/split_last_dimension/Shape"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/split_heads_2/split_last_dimension/strided_slice_1/stack"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/split_heads_2/split_last_dimension/strided_slice_1/stack_1"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/split_heads_2/split_last_dimension/strided_slice_1/stack_2"
      attr {
        key: "Index"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "shrink_axis_mask"
        value {
          i: 1
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/split_heads_2/split_last_dimension/Reshape/shape/2"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_f"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 4
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/split_heads_2/split_last_dimension/Reshape/shape/3"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_f"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 32
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/split_heads_2/split_last_dimension/Reshape/shape"
      op: "Pack"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/split_heads_2/split_last_dimension/strided_slice"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/split_heads_2/split_last_dimension/strided_slice_1"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/split_heads_2/split_last_dimension/Reshape/shape/2"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/split_heads_2/split_last_dimension/Reshape/shape/3"
      attr {
        key: "N"
        value {
          i: 4
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 4
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/split_heads_2/split_last_dimension/Reshape"
      op: "Reshape"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/v/Tensordot"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/split_heads_2/split_last_dimension/Reshape/shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: -1
              }
              dim {
                size: 4
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/split_heads_2/transpose/perm"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_f"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 4
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 4
              }
            }
            tensor_content: "\000\000\000\000\002\000\000\000\001\000\000\000\003\000\000\000"
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/split_heads_2/transpose"
      op: "Transpose"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/split_heads_2/split_last_dimension/Reshape"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/split_heads_2/transpose/perm"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 4
              }
              dim {
                size: -1
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/mul/y"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_f"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.1767766922712326
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/mul"
      op: "Mul"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/split_heads/transpose"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/mul/y"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 4
              }
              dim {
                size: -1
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/dot_product_attention/MatMul"
      op: "BatchMatMul"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/mul"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/split_heads_1/transpose"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 4
              }
              dim {
                size: -1
              }
              dim {
                size: -1
              }
            }
          }
        }
      }
      attr {
        key: "adj_y"
        value {
          b: true
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/dot_product_attention/add"
      op: "Add"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/dot_product_attention/MatMul"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/attention_bias_ignore_padding/ExpandDims_1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 4
              }
              dim {
                size: -1
              }
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/dot_product_attention/attention_weights"
      op: "Softmax"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/dot_product_attention/add"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 4
              }
              dim {
                size: -1
              }
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/dot_product_attention/Shape"
      op: "Shape"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/dot_product_attention/attention_weights"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 4
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/dot_product_attention/strided_slice/stack"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_f"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/dot_product_attention/strided_slice/stack_1"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_f"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/dot_product_attention/strided_slice/stack_2"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_f"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/dot_product_attention/strided_slice"
      op: "StridedSlice"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/dot_product_attention/Shape"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/dot_product_attention/strided_slice/stack"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/dot_product_attention/strided_slice/stack_1"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/dot_product_attention/strided_slice/stack_2"
      attr {
        key: "Index"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "shrink_axis_mask"
        value {
          i: 1
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/dot_product_attention/strided_slice_1/stack"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_f"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 2
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/dot_product_attention/strided_slice_1/stack_1"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_f"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 3
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/dot_product_attention/strided_slice_1/stack_2"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_f"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/dot_product_attention/strided_slice_1"
      op: "StridedSlice"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/dot_product_attention/Shape"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/dot_product_attention/strided_slice_1/stack"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/dot_product_attention/strided_slice_1/stack_1"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/dot_product_attention/strided_slice_1/stack_2"
      attr {
        key: "Index"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "shrink_axis_mask"
        value {
          i: 1
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/dot_product_attention/strided_slice_2/stack"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_f"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 3
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/dot_product_attention/strided_slice_2/stack_1"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_f"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 4
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/dot_product_attention/strided_slice_2/stack_2"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_f"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/dot_product_attention/strided_slice_2"
      op: "StridedSlice"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/dot_product_attention/Shape"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/dot_product_attention/strided_slice_2/stack"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/dot_product_attention/strided_slice_2/stack_1"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/dot_product_attention/strided_slice_2/stack_2"
      attr {
        key: "Index"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "shrink_axis_mask"
        value {
          i: 1
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/dot_product_attention/transpose/perm"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_f"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 4
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 4
              }
            }
            tensor_content: "\000\000\000\000\002\000\000\000\003\000\000\000\001\000\000\000"
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/dot_product_attention/transpose"
      op: "Transpose"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/dot_product_attention/attention_weights"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/dot_product_attention/transpose/perm"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: -1
              }
              dim {
                size: -1
              }
              dim {
                size: 4
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/dot_product_attention/Pow/y"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_f"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.20000000298023224
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/dot_product_attention/Pow"
      op: "Pow"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/dot_product_attention/transpose"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/dot_product_attention/Pow/y"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: -1
              }
              dim {
                size: -1
              }
              dim {
                size: 4
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/dot_product_attention/FloorMod/x"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_f"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: -4
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/dot_product_attention/FloorMod/y"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_f"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 3
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/dot_product_attention/FloorMod"
      op: "FloorMod"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/dot_product_attention/FloorMod/x"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/dot_product_attention/FloorMod/y"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/dot_product_attention/Pad/paddings/3/0"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_f"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/dot_product_attention/Pad/paddings/3"
      op: "Pack"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/dot_product_attention/Pad/paddings/3/0"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/dot_product_attention/FloorMod"
      attr {
        key: "N"
        value {
          i: 2
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/dot_product_attention/Pad/paddings/0_1"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_f"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 2
              }
            }
            tensor_content: "\000\000\000\000\000\000\000\000"
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/dot_product_attention/Pad/paddings/1_1"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_f"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 2
              }
            }
            tensor_content: "\000\000\000\000\000\000\000\000"
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/dot_product_attention/Pad/paddings/2_1"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_f"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 2
              }
            }
            tensor_content: "\000\000\000\000\000\000\000\000"
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/dot_product_attention/Pad/paddings"
      op: "Pack"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/dot_product_attention/Pad/paddings/0_1"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/dot_product_attention/Pad/paddings/1_1"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/dot_product_attention/Pad/paddings/2_1"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/dot_product_attention/Pad/paddings/3"
      attr {
        key: "N"
        value {
          i: 4
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 4
              }
              dim {
                size: 2
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/dot_product_attention/Pad"
      op: "Pad"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/dot_product_attention/Pow"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/dot_product_attention/Pad/paddings"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: -1
              }
              dim {
                size: -1
              }
              dim {
                size: 6
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/dot_product_attention/split_last_dimension/Shape"
      op: "Shape"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/dot_product_attention/Pad"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 4
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/dot_product_attention/split_last_dimension/strided_slice/stack"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_f"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/dot_product_attention/split_last_dimension/strided_slice/stack_1"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_f"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/dot_product_attention/split_last_dimension/strided_slice/stack_2"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_f"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/dot_product_attention/split_last_dimension/strided_slice"
      op: "StridedSlice"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/dot_product_attention/split_last_dimension/Shape"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/dot_product_attention/split_last_dimension/strided_slice/stack"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/dot_product_attention/split_last_dimension/strided_slice/stack_1"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/dot_product_attention/split_last_dimension/strided_slice/stack_2"
      attr {
        key: "Index"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "shrink_axis_mask"
        value {
          i: 1
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/dot_product_attention/split_last_dimension/strided_slice_1/stack"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_f"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/dot_product_attention/split_last_dimension/strided_slice_1/stack_1"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_f"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 2
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/dot_product_attention/split_last_dimension/strided_slice_1/stack_2"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_f"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/dot_product_attention/split_last_dimension/strided_slice_1"
      op: "StridedSlice"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/dot_product_attention/split_last_dimension/Shape"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/dot_product_attention/split_last_dimension/strided_slice_1/stack"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/dot_product_attention/split_last_dimension/strided_slice_1/stack_1"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/dot_product_attention/split_last_dimension/strided_slice_1/stack_2"
      attr {
        key: "Index"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "shrink_axis_mask"
        value {
          i: 1
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/dot_product_attention/split_last_dimension/strided_slice_2/stack"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_f"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 2
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/dot_product_attention/split_last_dimension/strided_slice_2/stack_1"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_f"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 3
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/dot_product_attention/split_last_dimension/strided_slice_2/stack_2"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_f"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/dot_product_attention/split_last_dimension/strided_slice_2"
      op: "StridedSlice"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/dot_product_attention/split_last_dimension/Shape"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/dot_product_attention/split_last_dimension/strided_slice_2/stack"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/dot_product_attention/split_last_dimension/strided_slice_2/stack_1"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/dot_product_attention/split_last_dimension/strided_slice_2/stack_2"
      attr {
        key: "Index"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "shrink_axis_mask"
        value {
          i: 1
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/dot_product_attention/split_last_dimension/Reshape/shape/3"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_f"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 3
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/dot_product_attention/split_last_dimension/Reshape/shape/4"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_f"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 2
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/dot_product_attention/split_last_dimension/Reshape/shape"
      op: "Pack"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/dot_product_attention/split_last_dimension/strided_slice"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/dot_product_attention/split_last_dimension/strided_slice_1"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/dot_product_attention/split_last_dimension/strided_slice_2"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/dot_product_attention/split_last_dimension/Reshape/shape/3"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/dot_product_attention/split_last_dimension/Reshape/shape/4"
      attr {
        key: "N"
        value {
          i: 5
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 5
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/dot_product_attention/split_last_dimension/Reshape"
      op: "Reshape"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/dot_product_attention/Pad"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/dot_product_attention/split_last_dimension/Reshape/shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: -1
              }
              dim {
                size: -1
              }
              dim {
                size: 3
              }
              dim {
                size: 2
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/dot_product_attention/Max/reduction_indices"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_f"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 4
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/dot_product_attention/Max"
      op: "Max"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/dot_product_attention/split_last_dimension/Reshape"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/dot_product_attention/Max/reduction_indices"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: -1
              }
              dim {
                size: -1
              }
              dim {
                size: 3
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/dot_product_attention/attention/tag"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_f"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
            }
            string_val: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/dot_product_attention/attention"
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/dot_product_attention/attention"
      op: "ImageSummary"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/dot_product_attention/attention/tag"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/dot_product_attention/Max"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "max_images"
        value {
          i: 1
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/dot_product_attention/MatMul_1"
      op: "BatchMatMul"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/dot_product_attention/attention_weights"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/split_heads_2/transpose"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 4
              }
              dim {
                size: -1
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/combine_heads/transpose/perm"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_f"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 4
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 4
              }
            }
            tensor_content: "\000\000\000\000\002\000\000\000\001\000\000\000\003\000\000\000"
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/combine_heads/transpose"
      op: "Transpose"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/dot_product_attention/MatMul_1"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/combine_heads/transpose/perm"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: -1
              }
              dim {
                size: 4
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/combine_heads/combine_last_two_dimensions/Shape"
      op: "Shape"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/combine_heads/transpose"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 4
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/combine_heads/combine_last_two_dimensions/strided_slice/stack"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_f"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/combine_heads/combine_last_two_dimensions/strided_slice/stack_1"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_f"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/combine_heads/combine_last_two_dimensions/strided_slice/stack_2"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_f"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/combine_heads/combine_last_two_dimensions/strided_slice"
      op: "StridedSlice"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/combine_heads/combine_last_two_dimensions/Shape"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/combine_heads/combine_last_two_dimensions/strided_slice/stack"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/combine_heads/combine_last_two_dimensions/strided_slice/stack_1"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/combine_heads/combine_last_two_dimensions/strided_slice/stack_2"
      attr {
        key: "Index"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "shrink_axis_mask"
        value {
          i: 1
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/combine_heads/combine_last_two_dimensions/strided_slice_1/stack"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_f"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/combine_heads/combine_last_two_dimensions/strided_slice_1/stack_1"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_f"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 2
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/combine_heads/combine_last_two_dimensions/strided_slice_1/stack_2"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_f"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/combine_heads/combine_last_two_dimensions/strided_slice_1"
      op: "StridedSlice"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/combine_heads/combine_last_two_dimensions/Shape"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/combine_heads/combine_last_two_dimensions/strided_slice_1/stack"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/combine_heads/combine_last_two_dimensions/strided_slice_1/stack_1"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/combine_heads/combine_last_two_dimensions/strided_slice_1/stack_2"
      attr {
        key: "Index"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "shrink_axis_mask"
        value {
          i: 1
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/combine_heads/combine_last_two_dimensions/Reshape/shape/2"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_f"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 128
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/combine_heads/combine_last_two_dimensions/Reshape/shape"
      op: "Pack"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/combine_heads/combine_last_two_dimensions/strided_slice"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/combine_heads/combine_last_two_dimensions/strided_slice_1"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/combine_heads/combine_last_two_dimensions/Reshape/shape/2"
      attr {
        key: "N"
        value {
          i: 3
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/combine_heads/combine_last_two_dimensions/Reshape"
      op: "Reshape"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/combine_heads/transpose"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/combine_heads/combine_last_two_dimensions/Reshape/shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: -1
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/body/string_embedding/encoder/layer_1/self_attention/multihead_attention/output_transform/kernel/Initializer/random_uniform/shape"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@cs_similarity_transformer/body/string_embedding/encoder/layer_1/self_attention/multihead_attention/output_transform/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 2
              }
            }
            tensor_content: "\200\000\000\000\200\000\000\000"
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/body/string_embedding/encoder/layer_1/self_attention/multihead_attention/output_transform/kernel/Initializer/random_uniform/min"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@cs_similarity_transformer/body/string_embedding/encoder/layer_1/self_attention/multihead_attention/output_transform/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: -0.1530931144952774
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/body/string_embedding/encoder/layer_1/self_attention/multihead_attention/output_transform/kernel/Initializer/random_uniform/max"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@cs_similarity_transformer/body/string_embedding/encoder/layer_1/self_attention/multihead_attention/output_transform/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.1530931144952774
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/body/string_embedding/encoder/layer_1/self_attention/multihead_attention/output_transform/kernel/Initializer/random_uniform/RandomUniform"
      op: "RandomUniform"
      input: "cs_similarity_transformer/body/string_embedding/encoder/layer_1/self_attention/multihead_attention/output_transform/kernel/Initializer/random_uniform/shape"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@cs_similarity_transformer/body/string_embedding/encoder/layer_1/self_attention/multihead_attention/output_transform/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "cs_similarity_transformer/body/string_embedding/encoder/layer_1/self_attention/multihead_attention/output_transform/kernel/Initializer/random_uniform/sub"
      op: "Sub"
      input: "cs_similarity_transformer/body/string_embedding/encoder/layer_1/self_attention/multihead_attention/output_transform/kernel/Initializer/random_uniform/max"
      input: "cs_similarity_transformer/body/string_embedding/encoder/layer_1/self_attention/multihead_attention/output_transform/kernel/Initializer/random_uniform/min"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@cs_similarity_transformer/body/string_embedding/encoder/layer_1/self_attention/multihead_attention/output_transform/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/body/string_embedding/encoder/layer_1/self_attention/multihead_attention/output_transform/kernel/Initializer/random_uniform/mul"
      op: "Mul"
      input: "cs_similarity_transformer/body/string_embedding/encoder/layer_1/self_attention/multihead_attention/output_transform/kernel/Initializer/random_uniform/RandomUniform"
      input: "cs_similarity_transformer/body/string_embedding/encoder/layer_1/self_attention/multihead_attention/output_transform/kernel/Initializer/random_uniform/sub"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@cs_similarity_transformer/body/string_embedding/encoder/layer_1/self_attention/multihead_attention/output_transform/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/body/string_embedding/encoder/layer_1/self_attention/multihead_attention/output_transform/kernel/Initializer/random_uniform"
      op: "Add"
      input: "cs_similarity_transformer/body/string_embedding/encoder/layer_1/self_attention/multihead_attention/output_transform/kernel/Initializer/random_uniform/mul"
      input: "cs_similarity_transformer/body/string_embedding/encoder/layer_1/self_attention/multihead_attention/output_transform/kernel/Initializer/random_uniform/min"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@cs_similarity_transformer/body/string_embedding/encoder/layer_1/self_attention/multihead_attention/output_transform/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/body/string_embedding/encoder/layer_1/self_attention/multihead_attention/output_transform/kernel"
      op: "VarHandleOp"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@cs_similarity_transformer/body/string_embedding/encoder/layer_1/self_attention/multihead_attention/output_transform/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 128
            }
            dim {
              size: 128
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: "cs_similarity_transformer/body/string_embedding/encoder/layer_1/self_attention/multihead_attention/output_transform/kernel"
        }
      }
    }
    node {
      name: "cs_similarity_transformer/body/string_embedding/encoder/layer_1/self_attention/multihead_attention/output_transform/kernel/IsInitialized/VarIsInitializedOp"
      op: "VarIsInitializedOp"
      input: "cs_similarity_transformer/body/string_embedding/encoder/layer_1/self_attention/multihead_attention/output_transform/kernel"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/body/string_embedding/encoder/layer_1/self_attention/multihead_attention/output_transform/kernel/Assign"
      op: "AssignVariableOp"
      input: "cs_similarity_transformer/body/string_embedding/encoder/layer_1/self_attention/multihead_attention/output_transform/kernel"
      input: "cs_similarity_transformer/body/string_embedding/encoder/layer_1/self_attention/multihead_attention/output_transform/kernel/Initializer/random_uniform"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@cs_similarity_transformer/body/string_embedding/encoder/layer_1/self_attention/multihead_attention/output_transform/kernel"
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "cs_similarity_transformer/body/string_embedding/encoder/layer_1/self_attention/multihead_attention/output_transform/kernel/Read/ReadVariableOp"
      op: "ReadVariableOp"
      input: "cs_similarity_transformer/body/string_embedding/encoder/layer_1/self_attention/multihead_attention/output_transform/kernel"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@cs_similarity_transformer/body/string_embedding/encoder/layer_1/self_attention/multihead_attention/output_transform/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "Read_61/ReadVariableOp"
      op: "ReadVariableOp"
      input: "Read_61/ReadVariableOp/Switch"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "Read_61/ReadVariableOp/Switch"
      op: "Switch"
      input: "cs_similarity_transformer/body/string_embedding/encoder/layer_1/self_attention/multihead_attention/output_transform/kernel"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/pred_id"
      attr {
        key: "T"
        value {
          type: DT_RESOURCE
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@cs_similarity_transformer/body/string_embedding/encoder/layer_1/self_attention/multihead_attention/output_transform/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
            shape {
            }
          }
        }
      }
    }
    node {
      name: "Identity_61"
      op: "Identity"
      input: "Read_61/ReadVariableOp"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/output_transform/Tensordot/Shape"
      op: "Shape"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/combine_heads/combine_last_two_dimensions/Reshape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/output_transform/Tensordot/Rank"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_f"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 3
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/output_transform/Tensordot/axes"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_f"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 2
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/output_transform/Tensordot/GreaterEqual/y"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_f"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/output_transform/Tensordot/GreaterEqual"
      op: "GreaterEqual"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/output_transform/Tensordot/axes"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/output_transform/Tensordot/GreaterEqual/y"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/output_transform/Tensordot/Cast"
      op: "Cast"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/output_transform/Tensordot/GreaterEqual"
      attr {
        key: "DstT"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "SrcT"
        value {
          type: DT_BOOL
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/output_transform/Tensordot/mul"
      op: "Mul"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/output_transform/Tensordot/Cast"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/output_transform/Tensordot/axes"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/output_transform/Tensordot/Less/y"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_f"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/output_transform/Tensordot/Less"
      op: "Less"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/output_transform/Tensordot/axes"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/output_transform/Tensordot/Less/y"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/output_transform/Tensordot/Cast_1"
      op: "Cast"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/output_transform/Tensordot/Less"
      attr {
        key: "DstT"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "SrcT"
        value {
          type: DT_BOOL
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/output_transform/Tensordot/add"
      op: "Add"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/output_transform/Tensordot/axes"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/output_transform/Tensordot/Rank"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/output_transform/Tensordot/mul_1"
      op: "Mul"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/output_transform/Tensordot/Cast_1"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/output_transform/Tensordot/add"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/output_transform/Tensordot/add_1"
      op: "Add"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/output_transform/Tensordot/mul"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/output_transform/Tensordot/mul_1"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/output_transform/Tensordot/range/start"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_f"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/output_transform/Tensordot/range/delta"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_f"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/output_transform/Tensordot/range"
      op: "Range"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/output_transform/Tensordot/range/start"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/output_transform/Tensordot/Rank"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/output_transform/Tensordot/range/delta"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/output_transform/Tensordot/ListDiff"
      op: "ListDiff"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/output_transform/Tensordot/range"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/output_transform/Tensordot/add_1"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/output_transform/Tensordot/GatherV2/axis"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_f"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/output_transform/Tensordot/GatherV2"
      op: "GatherV2"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/output_transform/Tensordot/Shape"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/output_transform/Tensordot/ListDiff"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/output_transform/Tensordot/GatherV2/axis"
      attr {
        key: "Taxis"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "Tindices"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "Tparams"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/output_transform/Tensordot/GatherV2_1/axis"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_f"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/output_transform/Tensordot/GatherV2_1"
      op: "GatherV2"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/output_transform/Tensordot/Shape"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/output_transform/Tensordot/add_1"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/output_transform/Tensordot/GatherV2_1/axis"
      attr {
        key: "Taxis"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "Tindices"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "Tparams"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/output_transform/Tensordot/Const"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_f"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/output_transform/Tensordot/Prod"
      op: "Prod"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/output_transform/Tensordot/GatherV2"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/output_transform/Tensordot/Const"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/output_transform/Tensordot/Const_1"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_f"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/output_transform/Tensordot/Prod_1"
      op: "Prod"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/output_transform/Tensordot/GatherV2_1"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/output_transform/Tensordot/Const_1"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/output_transform/Tensordot/concat/axis"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_f"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/output_transform/Tensordot/concat"
      op: "ConcatV2"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/output_transform/Tensordot/GatherV2_1"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/output_transform/Tensordot/GatherV2"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/output_transform/Tensordot/concat/axis"
      attr {
        key: "N"
        value {
          i: 2
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/output_transform/Tensordot/concat_1/axis"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_f"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/output_transform/Tensordot/concat_1"
      op: "ConcatV2"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/output_transform/Tensordot/ListDiff"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/output_transform/Tensordot/add_1"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/output_transform/Tensordot/concat_1/axis"
      attr {
        key: "N"
        value {
          i: 2
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/output_transform/Tensordot/stack"
      op: "Pack"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/output_transform/Tensordot/Prod"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/output_transform/Tensordot/Prod_1"
      attr {
        key: "N"
        value {
          i: 2
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/output_transform/Tensordot/transpose"
      op: "Transpose"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/combine_heads/combine_last_two_dimensions/Reshape"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/output_transform/Tensordot/concat_1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: -1
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/output_transform/Tensordot/Reshape"
      op: "Reshape"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/output_transform/Tensordot/transpose"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/output_transform/Tensordot/stack"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/output_transform/Tensordot/transpose_1/perm"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_f"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 2
              }
            }
            tensor_content: "\000\000\000\000\001\000\000\000"
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/output_transform/Tensordot/transpose_1"
      op: "Transpose"
      input: "Identity_61"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/output_transform/Tensordot/transpose_1/perm"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/output_transform/Tensordot/Reshape_1/shape"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_f"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 2
              }
            }
            tensor_content: "\200\000\000\000\200\000\000\000"
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/output_transform/Tensordot/Reshape_1"
      op: "Reshape"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/output_transform/Tensordot/transpose_1"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/output_transform/Tensordot/Reshape_1/shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/output_transform/Tensordot/MatMul"
      op: "MatMul"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/output_transform/Tensordot/Reshape"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/output_transform/Tensordot/Reshape_1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/output_transform/Tensordot/Const_2"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_f"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 128
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/output_transform/Tensordot/concat_2/axis"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_f"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/output_transform/Tensordot/concat_2"
      op: "ConcatV2"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/output_transform/Tensordot/GatherV2"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/output_transform/Tensordot/Const_2"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/output_transform/Tensordot/concat_2/axis"
      attr {
        key: "N"
        value {
          i: 2
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/output_transform/Tensordot"
      op: "Reshape"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/output_transform/Tensordot/MatMul"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/output_transform/Tensordot/concat_2"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: -1
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/layer_postprocess/add"
      op: "Add"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/output_transform/Tensordot"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/ffn/layer_postprocess/add"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: -1
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/ffn/layer_prepostprocess/Shape"
      op: "Shape"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/layer_postprocess/add"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/ffn/layer_prepostprocess/strided_slice/stack"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_f"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/ffn/layer_prepostprocess/strided_slice/stack_1"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_f"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/ffn/layer_prepostprocess/strided_slice/stack_2"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_f"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/ffn/layer_prepostprocess/strided_slice"
      op: "StridedSlice"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/ffn/layer_prepostprocess/Shape"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/ffn/layer_prepostprocess/strided_slice/stack"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/ffn/layer_prepostprocess/strided_slice/stack_1"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/ffn/layer_prepostprocess/strided_slice/stack_2"
      attr {
        key: "Index"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "shrink_axis_mask"
        value {
          i: 1
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/ffn/layer_prepostprocess/strided_slice_1/stack"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_f"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/ffn/layer_prepostprocess/strided_slice_1/stack_1"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_f"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 2
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/ffn/layer_prepostprocess/strided_slice_1/stack_2"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_f"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/ffn/layer_prepostprocess/strided_slice_1"
      op: "StridedSlice"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/ffn/layer_prepostprocess/Shape"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/ffn/layer_prepostprocess/strided_slice_1/stack"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/ffn/layer_prepostprocess/strided_slice_1/stack_1"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/ffn/layer_prepostprocess/strided_slice_1/stack_2"
      attr {
        key: "Index"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "shrink_axis_mask"
        value {
          i: 1
        }
      }
    }
    node {
      name: "cs_similarity_transformer/body/string_embedding/encoder/layer_1/ffn/layer_prepostprocess/layer_norm/layer_norm_scale/Initializer/ones"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@cs_similarity_transformer/body/string_embedding/encoder/layer_1/ffn/layer_prepostprocess/layer_norm/layer_norm_scale"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
              dim {
                size: 128
              }
            }
            float_val: 1.0
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/body/string_embedding/encoder/layer_1/ffn/layer_prepostprocess/layer_norm/layer_norm_scale"
      op: "VarHandleOp"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@cs_similarity_transformer/body/string_embedding/encoder/layer_1/ffn/layer_prepostprocess/layer_norm/layer_norm_scale"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 128
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: "cs_similarity_transformer/body/string_embedding/encoder/layer_1/ffn/layer_prepostprocess/layer_norm/layer_norm_scale"
        }
      }
    }
    node {
      name: "cs_similarity_transformer/body/string_embedding/encoder/layer_1/ffn/layer_prepostprocess/layer_norm/layer_norm_scale/IsInitialized/VarIsInitializedOp"
      op: "VarIsInitializedOp"
      input: "cs_similarity_transformer/body/string_embedding/encoder/layer_1/ffn/layer_prepostprocess/layer_norm/layer_norm_scale"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/body/string_embedding/encoder/layer_1/ffn/layer_prepostprocess/layer_norm/layer_norm_scale/Assign"
      op: "AssignVariableOp"
      input: "cs_similarity_transformer/body/string_embedding/encoder/layer_1/ffn/layer_prepostprocess/layer_norm/layer_norm_scale"
      input: "cs_similarity_transformer/body/string_embedding/encoder/layer_1/ffn/layer_prepostprocess/layer_norm/layer_norm_scale/Initializer/ones"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@cs_similarity_transformer/body/string_embedding/encoder/layer_1/ffn/layer_prepostprocess/layer_norm/layer_norm_scale"
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "cs_similarity_transformer/body/string_embedding/encoder/layer_1/ffn/layer_prepostprocess/layer_norm/layer_norm_scale/Read/ReadVariableOp"
      op: "ReadVariableOp"
      input: "cs_similarity_transformer/body/string_embedding/encoder/layer_1/ffn/layer_prepostprocess/layer_norm/layer_norm_scale"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@cs_similarity_transformer/body/string_embedding/encoder/layer_1/ffn/layer_prepostprocess/layer_norm/layer_norm_scale"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "Read_62/ReadVariableOp"
      op: "ReadVariableOp"
      input: "Read_62/ReadVariableOp/Switch"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "Read_62/ReadVariableOp/Switch"
      op: "Switch"
      input: "cs_similarity_transformer/body/string_embedding/encoder/layer_1/ffn/layer_prepostprocess/layer_norm/layer_norm_scale"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/pred_id"
      attr {
        key: "T"
        value {
          type: DT_RESOURCE
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@cs_similarity_transformer/body/string_embedding/encoder/layer_1/ffn/layer_prepostprocess/layer_norm/layer_norm_scale"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
            shape {
            }
          }
        }
      }
    }
    node {
      name: "Identity_62"
      op: "Identity"
      input: "Read_62/ReadVariableOp"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/body/string_embedding/encoder/layer_1/ffn/layer_prepostprocess/layer_norm/layer_norm_bias/Initializer/zeros"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@cs_similarity_transformer/body/string_embedding/encoder/layer_1/ffn/layer_prepostprocess/layer_norm/layer_norm_bias"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
              dim {
                size: 128
              }
            }
            float_val: 0.0
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/body/string_embedding/encoder/layer_1/ffn/layer_prepostprocess/layer_norm/layer_norm_bias"
      op: "VarHandleOp"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@cs_similarity_transformer/body/string_embedding/encoder/layer_1/ffn/layer_prepostprocess/layer_norm/layer_norm_bias"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 128
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: "cs_similarity_transformer/body/string_embedding/encoder/layer_1/ffn/layer_prepostprocess/layer_norm/layer_norm_bias"
        }
      }
    }
    node {
      name: "cs_similarity_transformer/body/string_embedding/encoder/layer_1/ffn/layer_prepostprocess/layer_norm/layer_norm_bias/IsInitialized/VarIsInitializedOp"
      op: "VarIsInitializedOp"
      input: "cs_similarity_transformer/body/string_embedding/encoder/layer_1/ffn/layer_prepostprocess/layer_norm/layer_norm_bias"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/body/string_embedding/encoder/layer_1/ffn/layer_prepostprocess/layer_norm/layer_norm_bias/Assign"
      op: "AssignVariableOp"
      input: "cs_similarity_transformer/body/string_embedding/encoder/layer_1/ffn/layer_prepostprocess/layer_norm/layer_norm_bias"
      input: "cs_similarity_transformer/body/string_embedding/encoder/layer_1/ffn/layer_prepostprocess/layer_norm/layer_norm_bias/Initializer/zeros"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@cs_similarity_transformer/body/string_embedding/encoder/layer_1/ffn/layer_prepostprocess/layer_norm/layer_norm_bias"
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "cs_similarity_transformer/body/string_embedding/encoder/layer_1/ffn/layer_prepostprocess/layer_norm/layer_norm_bias/Read/ReadVariableOp"
      op: "ReadVariableOp"
      input: "cs_similarity_transformer/body/string_embedding/encoder/layer_1/ffn/layer_prepostprocess/layer_norm/layer_norm_bias"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@cs_similarity_transformer/body/string_embedding/encoder/layer_1/ffn/layer_prepostprocess/layer_norm/layer_norm_bias"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "Read_63/ReadVariableOp"
      op: "ReadVariableOp"
      input: "Read_63/ReadVariableOp/Switch"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "Read_63/ReadVariableOp/Switch"
      op: "Switch"
      input: "cs_similarity_transformer/body/string_embedding/encoder/layer_1/ffn/layer_prepostprocess/layer_norm/layer_norm_bias"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/pred_id"
      attr {
        key: "T"
        value {
          type: DT_RESOURCE
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@cs_similarity_transformer/body/string_embedding/encoder/layer_1/ffn/layer_prepostprocess/layer_norm/layer_norm_bias"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
            shape {
            }
          }
        }
      }
    }
    node {
      name: "Identity_63"
      op: "Identity"
      input: "Read_63/ReadVariableOp"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/ffn/layer_prepostprocess/layer_norm/Const"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_f"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 9.999999974752427e-07
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/ffn/layer_prepostprocess/layer_norm/Mean/reduction_indices"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_f"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: -1
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/ffn/layer_prepostprocess/layer_norm/Mean"
      op: "Mean"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/layer_postprocess/add"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/ffn/layer_prepostprocess/layer_norm/Mean/reduction_indices"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: true
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/ffn/layer_prepostprocess/layer_norm/sub"
      op: "Sub"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/layer_postprocess/add"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/ffn/layer_prepostprocess/layer_norm/Mean"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: -1
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/ffn/layer_prepostprocess/layer_norm/Square"
      op: "Square"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/ffn/layer_prepostprocess/layer_norm/sub"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: -1
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/ffn/layer_prepostprocess/layer_norm/Mean_1/reduction_indices"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_f"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: -1
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/ffn/layer_prepostprocess/layer_norm/Mean_1"
      op: "Mean"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/ffn/layer_prepostprocess/layer_norm/Square"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/ffn/layer_prepostprocess/layer_norm/Mean_1/reduction_indices"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: true
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/ffn/layer_prepostprocess/layer_norm/sub_1"
      op: "Sub"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/layer_postprocess/add"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/ffn/layer_prepostprocess/layer_norm/Mean"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: -1
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/ffn/layer_prepostprocess/layer_norm/add"
      op: "Add"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/ffn/layer_prepostprocess/layer_norm/Mean_1"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/ffn/layer_prepostprocess/layer_norm/Const"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/ffn/layer_prepostprocess/layer_norm/Rsqrt"
      op: "Rsqrt"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/ffn/layer_prepostprocess/layer_norm/add"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/ffn/layer_prepostprocess/layer_norm/mul"
      op: "Mul"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/ffn/layer_prepostprocess/layer_norm/sub_1"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/ffn/layer_prepostprocess/layer_norm/Rsqrt"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: -1
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/ffn/layer_prepostprocess/layer_norm/mul_1"
      op: "Mul"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/ffn/layer_prepostprocess/layer_norm/mul"
      input: "Identity_62"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: -1
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/ffn/layer_prepostprocess/layer_norm/add_1"
      op: "Add"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/ffn/layer_prepostprocess/layer_norm/mul_1"
      input: "Identity_63"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: -1
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/ffn/Shape"
      op: "Shape"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/ffn/layer_prepostprocess/layer_norm/add_1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/ffn/strided_slice/stack"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_f"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/ffn/strided_slice/stack_1"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_f"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/ffn/strided_slice/stack_2"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_f"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/ffn/strided_slice"
      op: "StridedSlice"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/ffn/Shape"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/ffn/strided_slice/stack"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/ffn/strided_slice/stack_1"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/ffn/strided_slice/stack_2"
      attr {
        key: "Index"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "shrink_axis_mask"
        value {
          i: 1
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/ffn/strided_slice_1/stack"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_f"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/ffn/strided_slice_1/stack_1"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_f"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 2
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/ffn/strided_slice_1/stack_2"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_f"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/ffn/strided_slice_1"
      op: "StridedSlice"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/ffn/Shape"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/ffn/strided_slice_1/stack"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/ffn/strided_slice_1/stack_1"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/ffn/strided_slice_1/stack_2"
      attr {
        key: "Index"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "shrink_axis_mask"
        value {
          i: 1
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/ffn/concat/values_0"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_f"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: -1
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/ffn/concat/values_1"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_f"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 128
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/ffn/concat/axis"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_f"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/ffn/concat"
      op: "ConcatV2"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/ffn/concat/values_0"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/ffn/concat/values_1"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/ffn/concat/axis"
      attr {
        key: "N"
        value {
          i: 2
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/ffn/Reshape"
      op: "Reshape"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/ffn/layer_prepostprocess/layer_norm/add_1"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/ffn/concat"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/ffn/pad_reduce/remove/GatherNd"
      op: "GatherNd"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/ffn/Reshape"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/pad_reduce/get_ids/ToInt32"
      attr {
        key: "Tindices"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "Tparams"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/ffn/ExpandDims/dim"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_f"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/ffn/ExpandDims"
      op: "ExpandDims"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/ffn/pad_reduce/remove/GatherNd"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/ffn/ExpandDims/dim"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
              dim {
                size: -1
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/body/string_embedding/encoder/layer_1/ffn/conv1/kernel/Initializer/random_uniform/shape"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@cs_similarity_transformer/body/string_embedding/encoder/layer_1/ffn/conv1/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 2
              }
            }
            tensor_content: "\200\000\000\000\000\002\000\000"
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/body/string_embedding/encoder/layer_1/ffn/conv1/kernel/Initializer/random_uniform/min"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@cs_similarity_transformer/body/string_embedding/encoder/layer_1/ffn/conv1/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: -0.09682458639144897
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/body/string_embedding/encoder/layer_1/ffn/conv1/kernel/Initializer/random_uniform/max"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@cs_similarity_transformer/body/string_embedding/encoder/layer_1/ffn/conv1/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.09682458639144897
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/body/string_embedding/encoder/layer_1/ffn/conv1/kernel/Initializer/random_uniform/RandomUniform"
      op: "RandomUniform"
      input: "cs_similarity_transformer/body/string_embedding/encoder/layer_1/ffn/conv1/kernel/Initializer/random_uniform/shape"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@cs_similarity_transformer/body/string_embedding/encoder/layer_1/ffn/conv1/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
              dim {
                size: 512
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "cs_similarity_transformer/body/string_embedding/encoder/layer_1/ffn/conv1/kernel/Initializer/random_uniform/sub"
      op: "Sub"
      input: "cs_similarity_transformer/body/string_embedding/encoder/layer_1/ffn/conv1/kernel/Initializer/random_uniform/max"
      input: "cs_similarity_transformer/body/string_embedding/encoder/layer_1/ffn/conv1/kernel/Initializer/random_uniform/min"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@cs_similarity_transformer/body/string_embedding/encoder/layer_1/ffn/conv1/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/body/string_embedding/encoder/layer_1/ffn/conv1/kernel/Initializer/random_uniform/mul"
      op: "Mul"
      input: "cs_similarity_transformer/body/string_embedding/encoder/layer_1/ffn/conv1/kernel/Initializer/random_uniform/RandomUniform"
      input: "cs_similarity_transformer/body/string_embedding/encoder/layer_1/ffn/conv1/kernel/Initializer/random_uniform/sub"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@cs_similarity_transformer/body/string_embedding/encoder/layer_1/ffn/conv1/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
              dim {
                size: 512
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/body/string_embedding/encoder/layer_1/ffn/conv1/kernel/Initializer/random_uniform"
      op: "Add"
      input: "cs_similarity_transformer/body/string_embedding/encoder/layer_1/ffn/conv1/kernel/Initializer/random_uniform/mul"
      input: "cs_similarity_transformer/body/string_embedding/encoder/layer_1/ffn/conv1/kernel/Initializer/random_uniform/min"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@cs_similarity_transformer/body/string_embedding/encoder/layer_1/ffn/conv1/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
              dim {
                size: 512
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/body/string_embedding/encoder/layer_1/ffn/conv1/kernel"
      op: "VarHandleOp"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@cs_similarity_transformer/body/string_embedding/encoder/layer_1/ffn/conv1/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 128
            }
            dim {
              size: 512
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: "cs_similarity_transformer/body/string_embedding/encoder/layer_1/ffn/conv1/kernel"
        }
      }
    }
    node {
      name: "cs_similarity_transformer/body/string_embedding/encoder/layer_1/ffn/conv1/kernel/IsInitialized/VarIsInitializedOp"
      op: "VarIsInitializedOp"
      input: "cs_similarity_transformer/body/string_embedding/encoder/layer_1/ffn/conv1/kernel"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/body/string_embedding/encoder/layer_1/ffn/conv1/kernel/Assign"
      op: "AssignVariableOp"
      input: "cs_similarity_transformer/body/string_embedding/encoder/layer_1/ffn/conv1/kernel"
      input: "cs_similarity_transformer/body/string_embedding/encoder/layer_1/ffn/conv1/kernel/Initializer/random_uniform"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@cs_similarity_transformer/body/string_embedding/encoder/layer_1/ffn/conv1/kernel"
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "cs_similarity_transformer/body/string_embedding/encoder/layer_1/ffn/conv1/kernel/Read/ReadVariableOp"
      op: "ReadVariableOp"
      input: "cs_similarity_transformer/body/string_embedding/encoder/layer_1/ffn/conv1/kernel"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@cs_similarity_transformer/body/string_embedding/encoder/layer_1/ffn/conv1/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
              dim {
                size: 512
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "Read_64/ReadVariableOp"
      op: "ReadVariableOp"
      input: "Read_64/ReadVariableOp/Switch"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
              dim {
                size: 512
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "Read_64/ReadVariableOp/Switch"
      op: "Switch"
      input: "cs_similarity_transformer/body/string_embedding/encoder/layer_1/ffn/conv1/kernel"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/pred_id"
      attr {
        key: "T"
        value {
          type: DT_RESOURCE
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@cs_similarity_transformer/body/string_embedding/encoder/layer_1/ffn/conv1/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
            shape {
            }
          }
        }
      }
    }
    node {
      name: "Identity_64"
      op: "Identity"
      input: "Read_64/ReadVariableOp"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
              dim {
                size: 512
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/body/string_embedding/encoder/layer_1/ffn/conv1/bias/Initializer/zeros"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@cs_similarity_transformer/body/string_embedding/encoder/layer_1/ffn/conv1/bias"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 512
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
              dim {
                size: 512
              }
            }
            float_val: 0.0
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/body/string_embedding/encoder/layer_1/ffn/conv1/bias"
      op: "VarHandleOp"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@cs_similarity_transformer/body/string_embedding/encoder/layer_1/ffn/conv1/bias"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 512
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: "cs_similarity_transformer/body/string_embedding/encoder/layer_1/ffn/conv1/bias"
        }
      }
    }
    node {
      name: "cs_similarity_transformer/body/string_embedding/encoder/layer_1/ffn/conv1/bias/IsInitialized/VarIsInitializedOp"
      op: "VarIsInitializedOp"
      input: "cs_similarity_transformer/body/string_embedding/encoder/layer_1/ffn/conv1/bias"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/body/string_embedding/encoder/layer_1/ffn/conv1/bias/Assign"
      op: "AssignVariableOp"
      input: "cs_similarity_transformer/body/string_embedding/encoder/layer_1/ffn/conv1/bias"
      input: "cs_similarity_transformer/body/string_embedding/encoder/layer_1/ffn/conv1/bias/Initializer/zeros"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@cs_similarity_transformer/body/string_embedding/encoder/layer_1/ffn/conv1/bias"
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "cs_similarity_transformer/body/string_embedding/encoder/layer_1/ffn/conv1/bias/Read/ReadVariableOp"
      op: "ReadVariableOp"
      input: "cs_similarity_transformer/body/string_embedding/encoder/layer_1/ffn/conv1/bias"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@cs_similarity_transformer/body/string_embedding/encoder/layer_1/ffn/conv1/bias"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 512
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "Read_65/ReadVariableOp"
      op: "ReadVariableOp"
      input: "Read_65/ReadVariableOp/Switch"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 512
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "Read_65/ReadVariableOp/Switch"
      op: "Switch"
      input: "cs_similarity_transformer/body/string_embedding/encoder/layer_1/ffn/conv1/bias"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/pred_id"
      attr {
        key: "T"
        value {
          type: DT_RESOURCE
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@cs_similarity_transformer/body/string_embedding/encoder/layer_1/ffn/conv1/bias"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
            shape {
            }
          }
        }
      }
    }
    node {
      name: "Identity_65"
      op: "Identity"
      input: "Read_65/ReadVariableOp"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 512
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/ffn/conv1/Tensordot/Shape"
      op: "Shape"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/ffn/ExpandDims"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/ffn/conv1/Tensordot/Rank"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_f"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 3
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/ffn/conv1/Tensordot/axes"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_f"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 2
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/ffn/conv1/Tensordot/GreaterEqual/y"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_f"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/ffn/conv1/Tensordot/GreaterEqual"
      op: "GreaterEqual"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/ffn/conv1/Tensordot/axes"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/ffn/conv1/Tensordot/GreaterEqual/y"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/ffn/conv1/Tensordot/Cast"
      op: "Cast"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/ffn/conv1/Tensordot/GreaterEqual"
      attr {
        key: "DstT"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "SrcT"
        value {
          type: DT_BOOL
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/ffn/conv1/Tensordot/mul"
      op: "Mul"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/ffn/conv1/Tensordot/Cast"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/ffn/conv1/Tensordot/axes"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/ffn/conv1/Tensordot/Less/y"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_f"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/ffn/conv1/Tensordot/Less"
      op: "Less"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/ffn/conv1/Tensordot/axes"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/ffn/conv1/Tensordot/Less/y"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/ffn/conv1/Tensordot/Cast_1"
      op: "Cast"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/ffn/conv1/Tensordot/Less"
      attr {
        key: "DstT"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "SrcT"
        value {
          type: DT_BOOL
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/ffn/conv1/Tensordot/add"
      op: "Add"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/ffn/conv1/Tensordot/axes"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/ffn/conv1/Tensordot/Rank"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/ffn/conv1/Tensordot/mul_1"
      op: "Mul"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/ffn/conv1/Tensordot/Cast_1"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/ffn/conv1/Tensordot/add"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/ffn/conv1/Tensordot/add_1"
      op: "Add"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/ffn/conv1/Tensordot/mul"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/ffn/conv1/Tensordot/mul_1"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/ffn/conv1/Tensordot/range/start"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_f"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/ffn/conv1/Tensordot/range/delta"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_f"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/ffn/conv1/Tensordot/range"
      op: "Range"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/ffn/conv1/Tensordot/range/start"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/ffn/conv1/Tensordot/Rank"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/ffn/conv1/Tensordot/range/delta"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/ffn/conv1/Tensordot/ListDiff"
      op: "ListDiff"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/ffn/conv1/Tensordot/range"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/ffn/conv1/Tensordot/add_1"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/ffn/conv1/Tensordot/GatherV2/axis"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_f"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/ffn/conv1/Tensordot/GatherV2"
      op: "GatherV2"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/ffn/conv1/Tensordot/Shape"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/ffn/conv1/Tensordot/ListDiff"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/ffn/conv1/Tensordot/GatherV2/axis"
      attr {
        key: "Taxis"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "Tindices"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "Tparams"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/ffn/conv1/Tensordot/GatherV2_1/axis"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_f"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/ffn/conv1/Tensordot/GatherV2_1"
      op: "GatherV2"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/ffn/conv1/Tensordot/Shape"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/ffn/conv1/Tensordot/add_1"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/ffn/conv1/Tensordot/GatherV2_1/axis"
      attr {
        key: "Taxis"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "Tindices"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "Tparams"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/ffn/conv1/Tensordot/Const"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_f"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/ffn/conv1/Tensordot/Prod"
      op: "Prod"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/ffn/conv1/Tensordot/GatherV2"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/ffn/conv1/Tensordot/Const"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/ffn/conv1/Tensordot/Const_1"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_f"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/ffn/conv1/Tensordot/Prod_1"
      op: "Prod"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/ffn/conv1/Tensordot/GatherV2_1"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/ffn/conv1/Tensordot/Const_1"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/ffn/conv1/Tensordot/concat/axis"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_f"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/ffn/conv1/Tensordot/concat"
      op: "ConcatV2"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/ffn/conv1/Tensordot/GatherV2_1"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/ffn/conv1/Tensordot/GatherV2"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/ffn/conv1/Tensordot/concat/axis"
      attr {
        key: "N"
        value {
          i: 2
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/ffn/conv1/Tensordot/concat_1/axis"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_f"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/ffn/conv1/Tensordot/concat_1"
      op: "ConcatV2"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/ffn/conv1/Tensordot/ListDiff"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/ffn/conv1/Tensordot/add_1"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/ffn/conv1/Tensordot/concat_1/axis"
      attr {
        key: "N"
        value {
          i: 2
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/ffn/conv1/Tensordot/stack"
      op: "Pack"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/ffn/conv1/Tensordot/Prod"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/ffn/conv1/Tensordot/Prod_1"
      attr {
        key: "N"
        value {
          i: 2
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/ffn/conv1/Tensordot/transpose"
      op: "Transpose"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/ffn/ExpandDims"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/ffn/conv1/Tensordot/concat_1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
              dim {
                size: -1
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/ffn/conv1/Tensordot/Reshape"
      op: "Reshape"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/ffn/conv1/Tensordot/transpose"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/ffn/conv1/Tensordot/stack"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/ffn/conv1/Tensordot/transpose_1/perm"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_f"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 2
              }
            }
            tensor_content: "\000\000\000\000\001\000\000\000"
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/ffn/conv1/Tensordot/transpose_1"
      op: "Transpose"
      input: "Identity_64"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/ffn/conv1/Tensordot/transpose_1/perm"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
              dim {
                size: 512
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/ffn/conv1/Tensordot/Reshape_1/shape"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_f"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 2
              }
            }
            tensor_content: "\200\000\000\000\000\002\000\000"
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/ffn/conv1/Tensordot/Reshape_1"
      op: "Reshape"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/ffn/conv1/Tensordot/transpose_1"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/ffn/conv1/Tensordot/Reshape_1/shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
              dim {
                size: 512
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/ffn/conv1/Tensordot/MatMul"
      op: "MatMul"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/ffn/conv1/Tensordot/Reshape"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/ffn/conv1/Tensordot/Reshape_1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 512
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/ffn/conv1/Tensordot/Const_2"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_f"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 512
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/ffn/conv1/Tensordot/concat_2/axis"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_f"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/ffn/conv1/Tensordot/concat_2"
      op: "ConcatV2"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/ffn/conv1/Tensordot/GatherV2"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/ffn/conv1/Tensordot/Const_2"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/ffn/conv1/Tensordot/concat_2/axis"
      attr {
        key: "N"
        value {
          i: 2
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/ffn/conv1/Tensordot"
      op: "Reshape"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/ffn/conv1/Tensordot/MatMul"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/ffn/conv1/Tensordot/concat_2"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
              dim {
                size: -1
              }
              dim {
                size: 512
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/ffn/conv1/BiasAdd"
      op: "BiasAdd"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/ffn/conv1/Tensordot"
      input: "Identity_65"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
              dim {
                size: -1
              }
              dim {
                size: 512
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/ffn/conv1/Relu"
      op: "Relu"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/ffn/conv1/BiasAdd"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
              dim {
                size: -1
              }
              dim {
                size: 512
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/body/string_embedding/encoder/layer_1/ffn/conv2/kernel/Initializer/random_uniform/shape"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@cs_similarity_transformer/body/string_embedding/encoder/layer_1/ffn/conv2/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 2
              }
            }
            tensor_content: "\000\002\000\000\200\000\000\000"
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/body/string_embedding/encoder/layer_1/ffn/conv2/kernel/Initializer/random_uniform/min"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@cs_similarity_transformer/body/string_embedding/encoder/layer_1/ffn/conv2/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: -0.09682458639144897
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/body/string_embedding/encoder/layer_1/ffn/conv2/kernel/Initializer/random_uniform/max"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@cs_similarity_transformer/body/string_embedding/encoder/layer_1/ffn/conv2/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.09682458639144897
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/body/string_embedding/encoder/layer_1/ffn/conv2/kernel/Initializer/random_uniform/RandomUniform"
      op: "RandomUniform"
      input: "cs_similarity_transformer/body/string_embedding/encoder/layer_1/ffn/conv2/kernel/Initializer/random_uniform/shape"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@cs_similarity_transformer/body/string_embedding/encoder/layer_1/ffn/conv2/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 512
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "cs_similarity_transformer/body/string_embedding/encoder/layer_1/ffn/conv2/kernel/Initializer/random_uniform/sub"
      op: "Sub"
      input: "cs_similarity_transformer/body/string_embedding/encoder/layer_1/ffn/conv2/kernel/Initializer/random_uniform/max"
      input: "cs_similarity_transformer/body/string_embedding/encoder/layer_1/ffn/conv2/kernel/Initializer/random_uniform/min"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@cs_similarity_transformer/body/string_embedding/encoder/layer_1/ffn/conv2/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/body/string_embedding/encoder/layer_1/ffn/conv2/kernel/Initializer/random_uniform/mul"
      op: "Mul"
      input: "cs_similarity_transformer/body/string_embedding/encoder/layer_1/ffn/conv2/kernel/Initializer/random_uniform/RandomUniform"
      input: "cs_similarity_transformer/body/string_embedding/encoder/layer_1/ffn/conv2/kernel/Initializer/random_uniform/sub"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@cs_similarity_transformer/body/string_embedding/encoder/layer_1/ffn/conv2/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 512
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/body/string_embedding/encoder/layer_1/ffn/conv2/kernel/Initializer/random_uniform"
      op: "Add"
      input: "cs_similarity_transformer/body/string_embedding/encoder/layer_1/ffn/conv2/kernel/Initializer/random_uniform/mul"
      input: "cs_similarity_transformer/body/string_embedding/encoder/layer_1/ffn/conv2/kernel/Initializer/random_uniform/min"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@cs_similarity_transformer/body/string_embedding/encoder/layer_1/ffn/conv2/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 512
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/body/string_embedding/encoder/layer_1/ffn/conv2/kernel"
      op: "VarHandleOp"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@cs_similarity_transformer/body/string_embedding/encoder/layer_1/ffn/conv2/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 512
            }
            dim {
              size: 128
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: "cs_similarity_transformer/body/string_embedding/encoder/layer_1/ffn/conv2/kernel"
        }
      }
    }
    node {
      name: "cs_similarity_transformer/body/string_embedding/encoder/layer_1/ffn/conv2/kernel/IsInitialized/VarIsInitializedOp"
      op: "VarIsInitializedOp"
      input: "cs_similarity_transformer/body/string_embedding/encoder/layer_1/ffn/conv2/kernel"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/body/string_embedding/encoder/layer_1/ffn/conv2/kernel/Assign"
      op: "AssignVariableOp"
      input: "cs_similarity_transformer/body/string_embedding/encoder/layer_1/ffn/conv2/kernel"
      input: "cs_similarity_transformer/body/string_embedding/encoder/layer_1/ffn/conv2/kernel/Initializer/random_uniform"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@cs_similarity_transformer/body/string_embedding/encoder/layer_1/ffn/conv2/kernel"
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "cs_similarity_transformer/body/string_embedding/encoder/layer_1/ffn/conv2/kernel/Read/ReadVariableOp"
      op: "ReadVariableOp"
      input: "cs_similarity_transformer/body/string_embedding/encoder/layer_1/ffn/conv2/kernel"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@cs_similarity_transformer/body/string_embedding/encoder/layer_1/ffn/conv2/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 512
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "Read_66/ReadVariableOp"
      op: "ReadVariableOp"
      input: "Read_66/ReadVariableOp/Switch"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 512
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "Read_66/ReadVariableOp/Switch"
      op: "Switch"
      input: "cs_similarity_transformer/body/string_embedding/encoder/layer_1/ffn/conv2/kernel"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/pred_id"
      attr {
        key: "T"
        value {
          type: DT_RESOURCE
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@cs_similarity_transformer/body/string_embedding/encoder/layer_1/ffn/conv2/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
            shape {
            }
          }
        }
      }
    }
    node {
      name: "Identity_66"
      op: "Identity"
      input: "Read_66/ReadVariableOp"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 512
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/body/string_embedding/encoder/layer_1/ffn/conv2/bias/Initializer/zeros"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@cs_similarity_transformer/body/string_embedding/encoder/layer_1/ffn/conv2/bias"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
              dim {
                size: 128
              }
            }
            float_val: 0.0
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/body/string_embedding/encoder/layer_1/ffn/conv2/bias"
      op: "VarHandleOp"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@cs_similarity_transformer/body/string_embedding/encoder/layer_1/ffn/conv2/bias"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 128
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: "cs_similarity_transformer/body/string_embedding/encoder/layer_1/ffn/conv2/bias"
        }
      }
    }
    node {
      name: "cs_similarity_transformer/body/string_embedding/encoder/layer_1/ffn/conv2/bias/IsInitialized/VarIsInitializedOp"
      op: "VarIsInitializedOp"
      input: "cs_similarity_transformer/body/string_embedding/encoder/layer_1/ffn/conv2/bias"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/body/string_embedding/encoder/layer_1/ffn/conv2/bias/Assign"
      op: "AssignVariableOp"
      input: "cs_similarity_transformer/body/string_embedding/encoder/layer_1/ffn/conv2/bias"
      input: "cs_similarity_transformer/body/string_embedding/encoder/layer_1/ffn/conv2/bias/Initializer/zeros"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@cs_similarity_transformer/body/string_embedding/encoder/layer_1/ffn/conv2/bias"
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "cs_similarity_transformer/body/string_embedding/encoder/layer_1/ffn/conv2/bias/Read/ReadVariableOp"
      op: "ReadVariableOp"
      input: "cs_similarity_transformer/body/string_embedding/encoder/layer_1/ffn/conv2/bias"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@cs_similarity_transformer/body/string_embedding/encoder/layer_1/ffn/conv2/bias"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "Read_67/ReadVariableOp"
      op: "ReadVariableOp"
      input: "Read_67/ReadVariableOp/Switch"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "Read_67/ReadVariableOp/Switch"
      op: "Switch"
      input: "cs_similarity_transformer/body/string_embedding/encoder/layer_1/ffn/conv2/bias"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/pred_id"
      attr {
        key: "T"
        value {
          type: DT_RESOURCE
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@cs_similarity_transformer/body/string_embedding/encoder/layer_1/ffn/conv2/bias"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
            shape {
            }
          }
        }
      }
    }
    node {
      name: "Identity_67"
      op: "Identity"
      input: "Read_67/ReadVariableOp"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/ffn/conv2/Tensordot/Shape"
      op: "Shape"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/ffn/conv1/Relu"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/ffn/conv2/Tensordot/Rank"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_f"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 3
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/ffn/conv2/Tensordot/axes"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_f"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 2
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/ffn/conv2/Tensordot/GreaterEqual/y"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_f"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/ffn/conv2/Tensordot/GreaterEqual"
      op: "GreaterEqual"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/ffn/conv2/Tensordot/axes"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/ffn/conv2/Tensordot/GreaterEqual/y"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/ffn/conv2/Tensordot/Cast"
      op: "Cast"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/ffn/conv2/Tensordot/GreaterEqual"
      attr {
        key: "DstT"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "SrcT"
        value {
          type: DT_BOOL
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/ffn/conv2/Tensordot/mul"
      op: "Mul"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/ffn/conv2/Tensordot/Cast"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/ffn/conv2/Tensordot/axes"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/ffn/conv2/Tensordot/Less/y"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_f"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/ffn/conv2/Tensordot/Less"
      op: "Less"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/ffn/conv2/Tensordot/axes"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/ffn/conv2/Tensordot/Less/y"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/ffn/conv2/Tensordot/Cast_1"
      op: "Cast"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/ffn/conv2/Tensordot/Less"
      attr {
        key: "DstT"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "SrcT"
        value {
          type: DT_BOOL
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/ffn/conv2/Tensordot/add"
      op: "Add"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/ffn/conv2/Tensordot/axes"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/ffn/conv2/Tensordot/Rank"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/ffn/conv2/Tensordot/mul_1"
      op: "Mul"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/ffn/conv2/Tensordot/Cast_1"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/ffn/conv2/Tensordot/add"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/ffn/conv2/Tensordot/add_1"
      op: "Add"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/ffn/conv2/Tensordot/mul"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/ffn/conv2/Tensordot/mul_1"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/ffn/conv2/Tensordot/range/start"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_f"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/ffn/conv2/Tensordot/range/delta"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_f"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/ffn/conv2/Tensordot/range"
      op: "Range"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/ffn/conv2/Tensordot/range/start"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/ffn/conv2/Tensordot/Rank"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/ffn/conv2/Tensordot/range/delta"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/ffn/conv2/Tensordot/ListDiff"
      op: "ListDiff"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/ffn/conv2/Tensordot/range"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/ffn/conv2/Tensordot/add_1"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/ffn/conv2/Tensordot/GatherV2/axis"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_f"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/ffn/conv2/Tensordot/GatherV2"
      op: "GatherV2"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/ffn/conv2/Tensordot/Shape"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/ffn/conv2/Tensordot/ListDiff"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/ffn/conv2/Tensordot/GatherV2/axis"
      attr {
        key: "Taxis"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "Tindices"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "Tparams"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/ffn/conv2/Tensordot/GatherV2_1/axis"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_f"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/ffn/conv2/Tensordot/GatherV2_1"
      op: "GatherV2"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/ffn/conv2/Tensordot/Shape"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/ffn/conv2/Tensordot/add_1"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/ffn/conv2/Tensordot/GatherV2_1/axis"
      attr {
        key: "Taxis"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "Tindices"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "Tparams"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/ffn/conv2/Tensordot/Const"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_f"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/ffn/conv2/Tensordot/Prod"
      op: "Prod"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/ffn/conv2/Tensordot/GatherV2"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/ffn/conv2/Tensordot/Const"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/ffn/conv2/Tensordot/Const_1"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_f"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/ffn/conv2/Tensordot/Prod_1"
      op: "Prod"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/ffn/conv2/Tensordot/GatherV2_1"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/ffn/conv2/Tensordot/Const_1"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/ffn/conv2/Tensordot/concat/axis"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_f"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/ffn/conv2/Tensordot/concat"
      op: "ConcatV2"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/ffn/conv2/Tensordot/GatherV2_1"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/ffn/conv2/Tensordot/GatherV2"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/ffn/conv2/Tensordot/concat/axis"
      attr {
        key: "N"
        value {
          i: 2
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/ffn/conv2/Tensordot/concat_1/axis"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_f"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/ffn/conv2/Tensordot/concat_1"
      op: "ConcatV2"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/ffn/conv2/Tensordot/ListDiff"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/ffn/conv2/Tensordot/add_1"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/ffn/conv2/Tensordot/concat_1/axis"
      attr {
        key: "N"
        value {
          i: 2
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/ffn/conv2/Tensordot/stack"
      op: "Pack"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/ffn/conv2/Tensordot/Prod"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/ffn/conv2/Tensordot/Prod_1"
      attr {
        key: "N"
        value {
          i: 2
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/ffn/conv2/Tensordot/transpose"
      op: "Transpose"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/ffn/conv1/Relu"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/ffn/conv2/Tensordot/concat_1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
              dim {
                size: -1
              }
              dim {
                size: 512
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/ffn/conv2/Tensordot/Reshape"
      op: "Reshape"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/ffn/conv2/Tensordot/transpose"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/ffn/conv2/Tensordot/stack"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/ffn/conv2/Tensordot/transpose_1/perm"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_f"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 2
              }
            }
            tensor_content: "\000\000\000\000\001\000\000\000"
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/ffn/conv2/Tensordot/transpose_1"
      op: "Transpose"
      input: "Identity_66"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/ffn/conv2/Tensordot/transpose_1/perm"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 512
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/ffn/conv2/Tensordot/Reshape_1/shape"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_f"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 2
              }
            }
            tensor_content: "\000\002\000\000\200\000\000\000"
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/ffn/conv2/Tensordot/Reshape_1"
      op: "Reshape"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/ffn/conv2/Tensordot/transpose_1"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/ffn/conv2/Tensordot/Reshape_1/shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 512
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/ffn/conv2/Tensordot/MatMul"
      op: "MatMul"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/ffn/conv2/Tensordot/Reshape"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/ffn/conv2/Tensordot/Reshape_1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/ffn/conv2/Tensordot/Const_2"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_f"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 128
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/ffn/conv2/Tensordot/concat_2/axis"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_f"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/ffn/conv2/Tensordot/concat_2"
      op: "ConcatV2"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/ffn/conv2/Tensordot/GatherV2"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/ffn/conv2/Tensordot/Const_2"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/ffn/conv2/Tensordot/concat_2/axis"
      attr {
        key: "N"
        value {
          i: 2
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/ffn/conv2/Tensordot"
      op: "Reshape"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/ffn/conv2/Tensordot/MatMul"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/ffn/conv2/Tensordot/concat_2"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
              dim {
                size: -1
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/ffn/conv2/BiasAdd"
      op: "BiasAdd"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/ffn/conv2/Tensordot"
      input: "Identity_67"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
              dim {
                size: -1
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/ffn/Squeeze"
      op: "Squeeze"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/ffn/conv2/BiasAdd"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
      attr {
        key: "squeeze_dims"
        value {
          list {
            i: 0
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/ffn/pad_reduce/restore/Shape"
      op: "Shape"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/ffn/Squeeze"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/ffn/pad_reduce/restore/strided_slice/stack"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_f"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/ffn/pad_reduce/restore/strided_slice/stack_1"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_f"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/ffn/pad_reduce/restore/strided_slice/stack_2"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_f"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/ffn/pad_reduce/restore/strided_slice"
      op: "StridedSlice"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/ffn/pad_reduce/restore/Shape"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/ffn/pad_reduce/restore/strided_slice/stack"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/ffn/pad_reduce/restore/strided_slice/stack_1"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/ffn/pad_reduce/restore/strided_slice/stack_2"
      attr {
        key: "Index"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "end_mask"
        value {
          i: 1
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/ffn/pad_reduce/restore/concat/axis"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_f"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/ffn/pad_reduce/restore/concat"
      op: "ConcatV2"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/pad_reduce/get_ids/strided_slice"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/ffn/pad_reduce/restore/strided_slice"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/ffn/pad_reduce/restore/concat/axis"
      attr {
        key: "N"
        value {
          i: 2
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/ffn/pad_reduce/restore/ScatterNd"
      op: "ScatterNd"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/pad_reduce/get_ids/ToInt32"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/ffn/Squeeze"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/ffn/pad_reduce/restore/concat"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tindices"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/ffn/Reshape_1/shape/2"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_f"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 128
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/ffn/Reshape_1/shape"
      op: "Pack"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/ffn/strided_slice"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/ffn/strided_slice_1"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/ffn/Reshape_1/shape/2"
      attr {
        key: "N"
        value {
          i: 3
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/ffn/Reshape_1"
      op: "Reshape"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/ffn/pad_reduce/restore/ScatterNd"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/ffn/Reshape_1/shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: -1
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/ffn/layer_postprocess/add"
      op: "Add"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/ffn/Reshape_1"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/layer_postprocess/add"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: -1
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_prepostprocess/Shape"
      op: "Shape"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/ffn/layer_postprocess/add"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_prepostprocess/strided_slice/stack"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_f"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_prepostprocess/strided_slice/stack_1"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_f"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_prepostprocess/strided_slice/stack_2"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_f"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_prepostprocess/strided_slice"
      op: "StridedSlice"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_prepostprocess/Shape"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_prepostprocess/strided_slice/stack"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_prepostprocess/strided_slice/stack_1"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_prepostprocess/strided_slice/stack_2"
      attr {
        key: "Index"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "shrink_axis_mask"
        value {
          i: 1
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_prepostprocess/strided_slice_1/stack"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_f"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_prepostprocess/strided_slice_1/stack_1"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_f"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 2
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_prepostprocess/strided_slice_1/stack_2"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_f"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_prepostprocess/strided_slice_1"
      op: "StridedSlice"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_prepostprocess/Shape"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_prepostprocess/strided_slice_1/stack"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_prepostprocess/strided_slice_1/stack_1"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_prepostprocess/strided_slice_1/stack_2"
      attr {
        key: "Index"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "shrink_axis_mask"
        value {
          i: 1
        }
      }
    }
    node {
      name: "cs_similarity_transformer/body/string_embedding/encoder/layer_prepostprocess/layer_norm/layer_norm_scale/Initializer/ones"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@cs_similarity_transformer/body/string_embedding/encoder/layer_prepostprocess/layer_norm/layer_norm_scale"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
              dim {
                size: 128
              }
            }
            float_val: 1.0
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/body/string_embedding/encoder/layer_prepostprocess/layer_norm/layer_norm_scale"
      op: "VarHandleOp"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@cs_similarity_transformer/body/string_embedding/encoder/layer_prepostprocess/layer_norm/layer_norm_scale"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 128
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: "cs_similarity_transformer/body/string_embedding/encoder/layer_prepostprocess/layer_norm/layer_norm_scale"
        }
      }
    }
    node {
      name: "cs_similarity_transformer/body/string_embedding/encoder/layer_prepostprocess/layer_norm/layer_norm_scale/IsInitialized/VarIsInitializedOp"
      op: "VarIsInitializedOp"
      input: "cs_similarity_transformer/body/string_embedding/encoder/layer_prepostprocess/layer_norm/layer_norm_scale"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/body/string_embedding/encoder/layer_prepostprocess/layer_norm/layer_norm_scale/Assign"
      op: "AssignVariableOp"
      input: "cs_similarity_transformer/body/string_embedding/encoder/layer_prepostprocess/layer_norm/layer_norm_scale"
      input: "cs_similarity_transformer/body/string_embedding/encoder/layer_prepostprocess/layer_norm/layer_norm_scale/Initializer/ones"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@cs_similarity_transformer/body/string_embedding/encoder/layer_prepostprocess/layer_norm/layer_norm_scale"
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "cs_similarity_transformer/body/string_embedding/encoder/layer_prepostprocess/layer_norm/layer_norm_scale/Read/ReadVariableOp"
      op: "ReadVariableOp"
      input: "cs_similarity_transformer/body/string_embedding/encoder/layer_prepostprocess/layer_norm/layer_norm_scale"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@cs_similarity_transformer/body/string_embedding/encoder/layer_prepostprocess/layer_norm/layer_norm_scale"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "Read_68/ReadVariableOp"
      op: "ReadVariableOp"
      input: "Read_68/ReadVariableOp/Switch"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "Read_68/ReadVariableOp/Switch"
      op: "Switch"
      input: "cs_similarity_transformer/body/string_embedding/encoder/layer_prepostprocess/layer_norm/layer_norm_scale"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/pred_id"
      attr {
        key: "T"
        value {
          type: DT_RESOURCE
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@cs_similarity_transformer/body/string_embedding/encoder/layer_prepostprocess/layer_norm/layer_norm_scale"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
            shape {
            }
          }
        }
      }
    }
    node {
      name: "Identity_68"
      op: "Identity"
      input: "Read_68/ReadVariableOp"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/body/string_embedding/encoder/layer_prepostprocess/layer_norm/layer_norm_bias/Initializer/zeros"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@cs_similarity_transformer/body/string_embedding/encoder/layer_prepostprocess/layer_norm/layer_norm_bias"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
              dim {
                size: 128
              }
            }
            float_val: 0.0
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/body/string_embedding/encoder/layer_prepostprocess/layer_norm/layer_norm_bias"
      op: "VarHandleOp"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@cs_similarity_transformer/body/string_embedding/encoder/layer_prepostprocess/layer_norm/layer_norm_bias"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 128
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: "cs_similarity_transformer/body/string_embedding/encoder/layer_prepostprocess/layer_norm/layer_norm_bias"
        }
      }
    }
    node {
      name: "cs_similarity_transformer/body/string_embedding/encoder/layer_prepostprocess/layer_norm/layer_norm_bias/IsInitialized/VarIsInitializedOp"
      op: "VarIsInitializedOp"
      input: "cs_similarity_transformer/body/string_embedding/encoder/layer_prepostprocess/layer_norm/layer_norm_bias"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/body/string_embedding/encoder/layer_prepostprocess/layer_norm/layer_norm_bias/Assign"
      op: "AssignVariableOp"
      input: "cs_similarity_transformer/body/string_embedding/encoder/layer_prepostprocess/layer_norm/layer_norm_bias"
      input: "cs_similarity_transformer/body/string_embedding/encoder/layer_prepostprocess/layer_norm/layer_norm_bias/Initializer/zeros"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@cs_similarity_transformer/body/string_embedding/encoder/layer_prepostprocess/layer_norm/layer_norm_bias"
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "cs_similarity_transformer/body/string_embedding/encoder/layer_prepostprocess/layer_norm/layer_norm_bias/Read/ReadVariableOp"
      op: "ReadVariableOp"
      input: "cs_similarity_transformer/body/string_embedding/encoder/layer_prepostprocess/layer_norm/layer_norm_bias"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@cs_similarity_transformer/body/string_embedding/encoder/layer_prepostprocess/layer_norm/layer_norm_bias"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "Read_69/ReadVariableOp"
      op: "ReadVariableOp"
      input: "Read_69/ReadVariableOp/Switch"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "Read_69/ReadVariableOp/Switch"
      op: "Switch"
      input: "cs_similarity_transformer/body/string_embedding/encoder/layer_prepostprocess/layer_norm/layer_norm_bias"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/pred_id"
      attr {
        key: "T"
        value {
          type: DT_RESOURCE
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@cs_similarity_transformer/body/string_embedding/encoder/layer_prepostprocess/layer_norm/layer_norm_bias"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
            shape {
            }
          }
        }
      }
    }
    node {
      name: "Identity_69"
      op: "Identity"
      input: "Read_69/ReadVariableOp"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 128
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_prepostprocess/layer_norm/Const"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_f"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 9.999999974752427e-07
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_prepostprocess/layer_norm/Mean/reduction_indices"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_f"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: -1
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_prepostprocess/layer_norm/Mean"
      op: "Mean"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/ffn/layer_postprocess/add"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_prepostprocess/layer_norm/Mean/reduction_indices"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: true
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_prepostprocess/layer_norm/sub"
      op: "Sub"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/ffn/layer_postprocess/add"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_prepostprocess/layer_norm/Mean"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: -1
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_prepostprocess/layer_norm/Square"
      op: "Square"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_prepostprocess/layer_norm/sub"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: -1
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_prepostprocess/layer_norm/Mean_1/reduction_indices"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_f"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: -1
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_prepostprocess/layer_norm/Mean_1"
      op: "Mean"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_prepostprocess/layer_norm/Square"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_prepostprocess/layer_norm/Mean_1/reduction_indices"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: true
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_prepostprocess/layer_norm/sub_1"
      op: "Sub"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/ffn/layer_postprocess/add"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_prepostprocess/layer_norm/Mean"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: -1
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_prepostprocess/layer_norm/add"
      op: "Add"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_prepostprocess/layer_norm/Mean_1"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_prepostprocess/layer_norm/Const"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_prepostprocess/layer_norm/Rsqrt"
      op: "Rsqrt"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_prepostprocess/layer_norm/add"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_prepostprocess/layer_norm/mul"
      op: "Mul"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_prepostprocess/layer_norm/sub_1"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_prepostprocess/layer_norm/Rsqrt"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: -1
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_prepostprocess/layer_norm/mul_1"
      op: "Mul"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_prepostprocess/layer_norm/mul"
      input: "Identity_68"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: -1
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_prepostprocess/layer_norm/add_1"
      op: "Add"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_prepostprocess/layer_norm/mul_1"
      input: "Identity_69"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: -1
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/Mean/reduction_indices"
      op: "Const"
      input: "^cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_f"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/Mean"
      op: "Mean"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_prepostprocess/layer_norm/add_1"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/Mean/reduction_indices"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/Merge"
      op: "Merge"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/Mean"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/Mean"
      attr {
        key: "N"
        value {
          i: 2
        }
      }
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 128
              }
            }
            shape {
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/Rank/Const"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
              dim {
                size: 1
              }
            }
            float_val: 0.0
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/Rank"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/range/start"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/range/delta"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/range"
      op: "Range"
      input: "cs_similarity_transformer/range/start"
      input: "cs_similarity_transformer/Rank"
      input: "cs_similarity_transformer/range/delta"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/Mean/input"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
              dim {
                size: 1
              }
            }
            float_val: 0.0
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/Mean"
      op: "Mean"
      input: "cs_similarity_transformer/Mean/input"
      input: "cs_similarity_transformer/range"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/Rank_1/Const"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
              dim {
                size: 1
              }
            }
            float_val: 0.0
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/Rank_1"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/range_1/start"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/range_1/delta"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/range_1"
      op: "Range"
      input: "cs_similarity_transformer/range_1/start"
      input: "cs_similarity_transformer/Rank_1"
      input: "cs_similarity_transformer/range_1/delta"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/Mean_1/input"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
              dim {
                size: 1
              }
            }
            float_val: 0.0
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/Mean_1"
      op: "Mean"
      input: "cs_similarity_transformer/Mean_1/input"
      input: "cs_similarity_transformer/range_1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/concat/concat_dim"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "cs_similarity_transformer/concat"
      op: "Identity"
      input: "cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/Merge"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 128
              }
            }
          }
        }
      }
    }
    node {
      name: "Shape_1"
      op: "Shape"
      input: "cs_similarity_transformer/concat"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
    }
    node {
      name: "strided_slice_1/stack"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "strided_slice_1/stack_1"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "strided_slice_1/stack_2"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "strided_slice_1"
      op: "StridedSlice"
      input: "Shape_1"
      input: "strided_slice_1/stack"
      input: "strided_slice_1/stack_1"
      input: "strided_slice_1/stack_2"
      attr {
        key: "Index"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "shrink_axis_mask"
        value {
          i: 1
        }
      }
    }
    node {
      name: "ExpandDims/dim"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "ExpandDims"
      op: "ExpandDims"
      input: "cs_similarity_transformer/input_space_id"
      input: "ExpandDims/dim"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "Tile/multiples"
      op: "Pack"
      input: "strided_slice_1"
      attr {
        key: "N"
        value {
          i: 1
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "Tile"
      op: "Tile"
      input: "ExpandDims"
      input: "Tile/multiples"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "Shape_2"
      op: "Shape"
      input: "cs_similarity_transformer/concat"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
    }
    node {
      name: "strided_slice_2/stack"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "strided_slice_2/stack_1"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "strided_slice_2/stack_2"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "strided_slice_2"
      op: "StridedSlice"
      input: "Shape_2"
      input: "strided_slice_2/stack"
      input: "strided_slice_2/stack_1"
      input: "strided_slice_2/stack_2"
      attr {
        key: "Index"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "shrink_axis_mask"
        value {
          i: 1
        }
      }
    }
    node {
      name: "ExpandDims_1/dim"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "ExpandDims_1"
      op: "ExpandDims"
      input: "cs_similarity_transformer/target_space_id"
      input: "ExpandDims_1/dim"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "Tile_1/multiples"
      op: "Pack"
      input: "strided_slice_2"
      attr {
        key: "N"
        value {
          i: 1
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "Tile_1"
      op: "Tile"
      input: "ExpandDims_1"
      input: "Tile_1/multiples"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "init"
      op: "NoOp"
    }
    node {
      name: "init_all_tables"
      op: "NoOp"
    }
    node {
      name: "init_1"
      op: "NoOp"
    }
    node {
      name: "group_deps"
      op: "NoOp"
      input: "^init"
      input: "^init_1"
      input: "^init_all_tables"
    }
    node {
      name: "save/Const"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
            }
            string_val: "model"
          }
        }
      }
    }
    node {
      name: "save/StringJoin/inputs_1"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
            }
            string_val: "_temp_61938b731ae24e74b3315e7f73e72fd9/part"
          }
        }
      }
    }
    node {
      name: "save/StringJoin"
      op: "StringJoin"
      input: "save/Const"
      input: "save/StringJoin/inputs_1"
      attr {
        key: "N"
        value {
          i: 2
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "save/num_shards"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "save/ShardedFilename/shard"
      op: "Const"
      device: "/device:CPU:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "save/ShardedFilename"
      op: "ShardedFilename"
      input: "save/StringJoin"
      input: "save/ShardedFilename/shard"
      input: "save/num_shards"
      device: "/device:CPU:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "save/SaveV2/tensor_names"
      op: "Const"
      device: "/device:CPU:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 71
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
              dim {
                size: 71
              }
            }
            string_val: "cs_similarity_transformer/body/code_embedding/encoder/layer_0/ffn/conv1/bias"
            string_val: "cs_similarity_transformer/body/code_embedding/encoder/layer_0/ffn/conv1/kernel"
            string_val: "cs_similarity_transformer/body/code_embedding/encoder/layer_0/ffn/conv2/bias"
            string_val: "cs_similarity_transformer/body/code_embedding/encoder/layer_0/ffn/conv2/kernel"
            string_val: "cs_similarity_transformer/body/code_embedding/encoder/layer_0/ffn/layer_prepostprocess/layer_norm/layer_norm_bias"
            string_val: "cs_similarity_transformer/body/code_embedding/encoder/layer_0/ffn/layer_prepostprocess/layer_norm/layer_norm_scale"
            string_val: "cs_similarity_transformer/body/code_embedding/encoder/layer_0/self_attention/layer_prepostprocess/layer_norm/layer_norm_bias"
            string_val: "cs_similarity_transformer/body/code_embedding/encoder/layer_0/self_attention/layer_prepostprocess/layer_norm/layer_norm_scale"
            string_val: "cs_similarity_transformer/body/code_embedding/encoder/layer_0/self_attention/multihead_attention/k/kernel"
            string_val: "cs_similarity_transformer/body/code_embedding/encoder/layer_0/self_attention/multihead_attention/output_transform/kernel"
            string_val: "cs_similarity_transformer/body/code_embedding/encoder/layer_0/self_attention/multihead_attention/q/kernel"
            string_val: "cs_similarity_transformer/body/code_embedding/encoder/layer_0/self_attention/multihead_attention/v/kernel"
            string_val: "cs_similarity_transformer/body/code_embedding/encoder/layer_1/ffn/conv1/bias"
            string_val: "cs_similarity_transformer/body/code_embedding/encoder/layer_1/ffn/conv1/kernel"
            string_val: "cs_similarity_transformer/body/code_embedding/encoder/layer_1/ffn/conv2/bias"
            string_val: "cs_similarity_transformer/body/code_embedding/encoder/layer_1/ffn/conv2/kernel"
            string_val: "cs_similarity_transformer/body/code_embedding/encoder/layer_1/ffn/layer_prepostprocess/layer_norm/layer_norm_bias"
            string_val: "cs_similarity_transformer/body/code_embedding/encoder/layer_1/ffn/layer_prepostprocess/layer_norm/layer_norm_scale"
            string_val: "cs_similarity_transformer/body/code_embedding/encoder/layer_1/self_attention/layer_prepostprocess/layer_norm/layer_norm_bias"
            string_val: "cs_similarity_transformer/body/code_embedding/encoder/layer_1/self_attention/layer_prepostprocess/layer_norm/layer_norm_scale"
            string_val: "cs_similarity_transformer/body/code_embedding/encoder/layer_1/self_attention/multihead_attention/k/kernel"
            string_val: "cs_similarity_transformer/body/code_embedding/encoder/layer_1/self_attention/multihead_attention/output_transform/kernel"
            string_val: "cs_similarity_transformer/body/code_embedding/encoder/layer_1/self_attention/multihead_attention/q/kernel"
            string_val: "cs_similarity_transformer/body/code_embedding/encoder/layer_1/self_attention/multihead_attention/v/kernel"
            string_val: "cs_similarity_transformer/body/code_embedding/encoder/layer_prepostprocess/layer_norm/layer_norm_bias"
            string_val: "cs_similarity_transformer/body/code_embedding/encoder/layer_prepostprocess/layer_norm/layer_norm_scale"
            string_val: "cs_similarity_transformer/body/code_embedding/target_space_embedding/kernel"
            string_val: "cs_similarity_transformer/body/string_embedding/encoder/layer_0/ffn/conv1/bias"
            string_val: "cs_similarity_transformer/body/string_embedding/encoder/layer_0/ffn/conv1/kernel"
            string_val: "cs_similarity_transformer/body/string_embedding/encoder/layer_0/ffn/conv2/bias"
            string_val: "cs_similarity_transformer/body/string_embedding/encoder/layer_0/ffn/conv2/kernel"
            string_val: "cs_similarity_transformer/body/string_embedding/encoder/layer_0/ffn/layer_prepostprocess/layer_norm/layer_norm_bias"
            string_val: "cs_similarity_transformer/body/string_embedding/encoder/layer_0/ffn/layer_prepostprocess/layer_norm/layer_norm_scale"
            string_val: "cs_similarity_transformer/body/string_embedding/encoder/layer_0/self_attention/layer_prepostprocess/layer_norm/layer_norm_bias"
            string_val: "cs_similarity_transformer/body/string_embedding/encoder/layer_0/self_attention/layer_prepostprocess/layer_norm/layer_norm_scale"
            string_val: "cs_similarity_transformer/body/string_embedding/encoder/layer_0/self_attention/multihead_attention/k/kernel"
            string_val: "cs_similarity_transformer/body/string_embedding/encoder/layer_0/self_attention/multihead_attention/output_transform/kernel"
            string_val: "cs_similarity_transformer/body/string_embedding/encoder/layer_0/self_attention/multihead_attention/q/kernel"
            string_val: "cs_similarity_transformer/body/string_embedding/encoder/layer_0/self_attention/multihead_attention/v/kernel"
            string_val: "cs_similarity_transformer/body/string_embedding/encoder/layer_1/ffn/conv1/bias"
            string_val: "cs_similarity_transformer/body/string_embedding/encoder/layer_1/ffn/conv1/kernel"
            string_val: "cs_similarity_transformer/body/string_embedding/encoder/layer_1/ffn/conv2/bias"
            string_val: "cs_similarity_transformer/body/string_embedding/encoder/layer_1/ffn/conv2/kernel"
            string_val: "cs_similarity_transformer/body/string_embedding/encoder/layer_1/ffn/layer_prepostprocess/layer_norm/layer_norm_bias"
            string_val: "cs_similarity_transformer/body/string_embedding/encoder/layer_1/ffn/layer_prepostprocess/layer_norm/layer_norm_scale"
            string_val: "cs_similarity_transformer/body/string_embedding/encoder/layer_1/self_attention/layer_prepostprocess/layer_norm/layer_norm_bias"
            string_val: "cs_similarity_transformer/body/string_embedding/encoder/layer_1/self_attention/layer_prepostprocess/layer_norm/layer_norm_scale"
            string_val: "cs_similarity_transformer/body/string_embedding/encoder/layer_1/self_attention/multihead_attention/k/kernel"
            string_val: "cs_similarity_transformer/body/string_embedding/encoder/layer_1/self_attention/multihead_attention/output_transform/kernel"
            string_val: "cs_similarity_transformer/body/string_embedding/encoder/layer_1/self_attention/multihead_attention/q/kernel"
            string_val: "cs_similarity_transformer/body/string_embedding/encoder/layer_1/self_attention/multihead_attention/v/kernel"
            string_val: "cs_similarity_transformer/body/string_embedding/encoder/layer_prepostprocess/layer_norm/layer_norm_bias"
            string_val: "cs_similarity_transformer/body/string_embedding/encoder/layer_prepostprocess/layer_norm/layer_norm_scale"
            string_val: "cs_similarity_transformer/body/string_embedding/target_space_embedding/kernel"
            string_val: "cs_similarity_transformer/symbol_modality_8164_128/shared/weights_0"
            string_val: "cs_similarity_transformer/symbol_modality_8164_128/shared/weights_1"
            string_val: "cs_similarity_transformer/symbol_modality_8164_128/shared/weights_10"
            string_val: "cs_similarity_transformer/symbol_modality_8164_128/shared/weights_11"
            string_val: "cs_similarity_transformer/symbol_modality_8164_128/shared/weights_12"
            string_val: "cs_similarity_transformer/symbol_modality_8164_128/shared/weights_13"
            string_val: "cs_similarity_transformer/symbol_modality_8164_128/shared/weights_14"
            string_val: "cs_similarity_transformer/symbol_modality_8164_128/shared/weights_15"
            string_val: "cs_similarity_transformer/symbol_modality_8164_128/shared/weights_2"
            string_val: "cs_similarity_transformer/symbol_modality_8164_128/shared/weights_3"
            string_val: "cs_similarity_transformer/symbol_modality_8164_128/shared/weights_4"
            string_val: "cs_similarity_transformer/symbol_modality_8164_128/shared/weights_5"
            string_val: "cs_similarity_transformer/symbol_modality_8164_128/shared/weights_6"
            string_val: "cs_similarity_transformer/symbol_modality_8164_128/shared/weights_7"
            string_val: "cs_similarity_transformer/symbol_modality_8164_128/shared/weights_8"
            string_val: "cs_similarity_transformer/symbol_modality_8164_128/shared/weights_9"
            string_val: "global_step"
          }
        }
      }
    }
    node {
      name: "save/SaveV2/shape_and_slices"
      op: "Const"
      device: "/device:CPU:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 71
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
              dim {
                size: 71
              }
            }
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
          }
        }
      }
    }
    node {
      name: "save/SaveV2"
      op: "SaveV2"
      input: "save/ShardedFilename"
      input: "save/SaveV2/tensor_names"
      input: "save/SaveV2/shape_and_slices"
      input: "cs_similarity_transformer/body/code_embedding/encoder/layer_0/ffn/conv1/bias/Read/ReadVariableOp"
      input: "cs_similarity_transformer/body/code_embedding/encoder/layer_0/ffn/conv1/kernel/Read/ReadVariableOp"
      input: "cs_similarity_transformer/body/code_embedding/encoder/layer_0/ffn/conv2/bias/Read/ReadVariableOp"
      input: "cs_similarity_transformer/body/code_embedding/encoder/layer_0/ffn/conv2/kernel/Read/ReadVariableOp"
      input: "cs_similarity_transformer/body/code_embedding/encoder/layer_0/ffn/layer_prepostprocess/layer_norm/layer_norm_bias/Read/ReadVariableOp"
      input: "cs_similarity_transformer/body/code_embedding/encoder/layer_0/ffn/layer_prepostprocess/layer_norm/layer_norm_scale/Read/ReadVariableOp"
      input: "cs_similarity_transformer/body/code_embedding/encoder/layer_0/self_attention/layer_prepostprocess/layer_norm/layer_norm_bias/Read/ReadVariableOp"
      input: "cs_similarity_transformer/body/code_embedding/encoder/layer_0/self_attention/layer_prepostprocess/layer_norm/layer_norm_scale/Read/ReadVariableOp"
      input: "cs_similarity_transformer/body/code_embedding/encoder/layer_0/self_attention/multihead_attention/k/kernel/Read/ReadVariableOp"
      input: "cs_similarity_transformer/body/code_embedding/encoder/layer_0/self_attention/multihead_attention/output_transform/kernel/Read/ReadVariableOp"
      input: "cs_similarity_transformer/body/code_embedding/encoder/layer_0/self_attention/multihead_attention/q/kernel/Read/ReadVariableOp"
      input: "cs_similarity_transformer/body/code_embedding/encoder/layer_0/self_attention/multihead_attention/v/kernel/Read/ReadVariableOp"
      input: "cs_similarity_transformer/body/code_embedding/encoder/layer_1/ffn/conv1/bias/Read/ReadVariableOp"
      input: "cs_similarity_transformer/body/code_embedding/encoder/layer_1/ffn/conv1/kernel/Read/ReadVariableOp"
      input: "cs_similarity_transformer/body/code_embedding/encoder/layer_1/ffn/conv2/bias/Read/ReadVariableOp"
      input: "cs_similarity_transformer/body/code_embedding/encoder/layer_1/ffn/conv2/kernel/Read/ReadVariableOp"
      input: "cs_similarity_transformer/body/code_embedding/encoder/layer_1/ffn/layer_prepostprocess/layer_norm/layer_norm_bias/Read/ReadVariableOp"
      input: "cs_similarity_transformer/body/code_embedding/encoder/layer_1/ffn/layer_prepostprocess/layer_norm/layer_norm_scale/Read/ReadVariableOp"
      input: "cs_similarity_transformer/body/code_embedding/encoder/layer_1/self_attention/layer_prepostprocess/layer_norm/layer_norm_bias/Read/ReadVariableOp"
      input: "cs_similarity_transformer/body/code_embedding/encoder/layer_1/self_attention/layer_prepostprocess/layer_norm/layer_norm_scale/Read/ReadVariableOp"
      input: "cs_similarity_transformer/body/code_embedding/encoder/layer_1/self_attention/multihead_attention/k/kernel/Read/ReadVariableOp"
      input: "cs_similarity_transformer/body/code_embedding/encoder/layer_1/self_attention/multihead_attention/output_transform/kernel/Read/ReadVariableOp"
      input: "cs_similarity_transformer/body/code_embedding/encoder/layer_1/self_attention/multihead_attention/q/kernel/Read/ReadVariableOp"
      input: "cs_similarity_transformer/body/code_embedding/encoder/layer_1/self_attention/multihead_attention/v/kernel/Read/ReadVariableOp"
      input: "cs_similarity_transformer/body/code_embedding/encoder/layer_prepostprocess/layer_norm/layer_norm_bias/Read/ReadVariableOp"
      input: "cs_similarity_transformer/body/code_embedding/encoder/layer_prepostprocess/layer_norm/layer_norm_scale/Read/ReadVariableOp"
      input: "cs_similarity_transformer/body/code_embedding/target_space_embedding/kernel/Read/ReadVariableOp"
      input: "cs_similarity_transformer/body/string_embedding/encoder/layer_0/ffn/conv1/bias/Read/ReadVariableOp"
      input: "cs_similarity_transformer/body/string_embedding/encoder/layer_0/ffn/conv1/kernel/Read/ReadVariableOp"
      input: "cs_similarity_transformer/body/string_embedding/encoder/layer_0/ffn/conv2/bias/Read/ReadVariableOp"
      input: "cs_similarity_transformer/body/string_embedding/encoder/layer_0/ffn/conv2/kernel/Read/ReadVariableOp"
      input: "cs_similarity_transformer/body/string_embedding/encoder/layer_0/ffn/layer_prepostprocess/layer_norm/layer_norm_bias/Read/ReadVariableOp"
      input: "cs_similarity_transformer/body/string_embedding/encoder/layer_0/ffn/layer_prepostprocess/layer_norm/layer_norm_scale/Read/ReadVariableOp"
      input: "cs_similarity_transformer/body/string_embedding/encoder/layer_0/self_attention/layer_prepostprocess/layer_norm/layer_norm_bias/Read/ReadVariableOp"
      input: "cs_similarity_transformer/body/string_embedding/encoder/layer_0/self_attention/layer_prepostprocess/layer_norm/layer_norm_scale/Read/ReadVariableOp"
      input: "cs_similarity_transformer/body/string_embedding/encoder/layer_0/self_attention/multihead_attention/k/kernel/Read/ReadVariableOp"
      input: "cs_similarity_transformer/body/string_embedding/encoder/layer_0/self_attention/multihead_attention/output_transform/kernel/Read/ReadVariableOp"
      input: "cs_similarity_transformer/body/string_embedding/encoder/layer_0/self_attention/multihead_attention/q/kernel/Read/ReadVariableOp"
      input: "cs_similarity_transformer/body/string_embedding/encoder/layer_0/self_attention/multihead_attention/v/kernel/Read/ReadVariableOp"
      input: "cs_similarity_transformer/body/string_embedding/encoder/layer_1/ffn/conv1/bias/Read/ReadVariableOp"
      input: "cs_similarity_transformer/body/string_embedding/encoder/layer_1/ffn/conv1/kernel/Read/ReadVariableOp"
      input: "cs_similarity_transformer/body/string_embedding/encoder/layer_1/ffn/conv2/bias/Read/ReadVariableOp"
      input: "cs_similarity_transformer/body/string_embedding/encoder/layer_1/ffn/conv2/kernel/Read/ReadVariableOp"
      input: "cs_similarity_transformer/body/string_embedding/encoder/layer_1/ffn/layer_prepostprocess/layer_norm/layer_norm_bias/Read/ReadVariableOp"
      input: "cs_similarity_transformer/body/string_embedding/encoder/layer_1/ffn/layer_prepostprocess/layer_norm/layer_norm_scale/Read/ReadVariableOp"
      input: "cs_similarity_transformer/body/string_embedding/encoder/layer_1/self_attention/layer_prepostprocess/layer_norm/layer_norm_bias/Read/ReadVariableOp"
      input: "cs_similarity_transformer/body/string_embedding/encoder/layer_1/self_attention/layer_prepostprocess/layer_norm/layer_norm_scale/Read/ReadVariableOp"
      input: "cs_similarity_transformer/body/string_embedding/encoder/layer_1/self_attention/multihead_attention/k/kernel/Read/ReadVariableOp"
      input: "cs_similarity_transformer/body/string_embedding/encoder/layer_1/self_attention/multihead_attention/output_transform/kernel/Read/ReadVariableOp"
      input: "cs_similarity_transformer/body/string_embedding/encoder/layer_1/self_attention/multihead_attention/q/kernel/Read/ReadVariableOp"
      input: "cs_similarity_transformer/body/string_embedding/encoder/layer_1/self_attention/multihead_attention/v/kernel/Read/ReadVariableOp"
      input: "cs_similarity_transformer/body/string_embedding/encoder/layer_prepostprocess/layer_norm/layer_norm_bias/Read/ReadVariableOp"
      input: "cs_similarity_transformer/body/string_embedding/encoder/layer_prepostprocess/layer_norm/layer_norm_scale/Read/ReadVariableOp"
      input: "cs_similarity_transformer/body/string_embedding/target_space_embedding/kernel/Read/ReadVariableOp"
      input: "cs_similarity_transformer/symbol_modality_8164_128/shared/weights_0/Read/ReadVariableOp"
      input: "cs_similarity_transformer/symbol_modality_8164_128/shared/weights_1/Read/ReadVariableOp"
      input: "cs_similarity_transformer/symbol_modality_8164_128/shared/weights_10/Read/ReadVariableOp"
      input: "cs_similarity_transformer/symbol_modality_8164_128/shared/weights_11/Read/ReadVariableOp"
      input: "cs_similarity_transformer/symbol_modality_8164_128/shared/weights_12/Read/ReadVariableOp"
      input: "cs_similarity_transformer/symbol_modality_8164_128/shared/weights_13/Read/ReadVariableOp"
      input: "cs_similarity_transformer/symbol_modality_8164_128/shared/weights_14/Read/ReadVariableOp"
      input: "cs_similarity_transformer/symbol_modality_8164_128/shared/weights_15/Read/ReadVariableOp"
      input: "cs_similarity_transformer/symbol_modality_8164_128/shared/weights_2/Read/ReadVariableOp"
      input: "cs_similarity_transformer/symbol_modality_8164_128/shared/weights_3/Read/ReadVariableOp"
      input: "cs_similarity_transformer/symbol_modality_8164_128/shared/weights_4/Read/ReadVariableOp"
      input: "cs_similarity_transformer/symbol_modality_8164_128/shared/weights_5/Read/ReadVariableOp"
      input: "cs_similarity_transformer/symbol_modality_8164_128/shared/weights_6/Read/ReadVariableOp"
      input: "cs_similarity_transformer/symbol_modality_8164_128/shared/weights_7/Read/ReadVariableOp"
      input: "cs_similarity_transformer/symbol_modality_8164_128/shared/weights_8/Read/ReadVariableOp"
      input: "cs_similarity_transformer/symbol_modality_8164_128/shared/weights_9/Read/ReadVariableOp"
      input: "global_step"
      device: "/device:CPU:0"
      attr {
        key: "dtypes"
        value {
          list {
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_INT64
          }
        }
      }
    }
    node {
      name: "save/control_dependency"
      op: "Identity"
      input: "save/ShardedFilename"
      input: "^save/SaveV2"
      device: "/device:CPU:0"
      attr {
        key: "T"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@save/ShardedFilename"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "save/MergeV2Checkpoints/checkpoint_prefixes"
      op: "Pack"
      input: "save/ShardedFilename"
      input: "^save/control_dependency"
      device: "/device:CPU:0"
      attr {
        key: "N"
        value {
          i: 1
        }
      }
      attr {
        key: "T"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "save/MergeV2Checkpoints"
      op: "MergeV2Checkpoints"
      input: "save/MergeV2Checkpoints/checkpoint_prefixes"
      input: "save/Const"
      device: "/device:CPU:0"
    }
    node {
      name: "save/Identity"
      op: "Identity"
      input: "save/Const"
      input: "^save/MergeV2Checkpoints"
      input: "^save/control_dependency"
      device: "/device:CPU:0"
      attr {
        key: "T"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "save/RestoreV2/tensor_names"
      op: "Const"
      device: "/device:CPU:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 71
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
              dim {
                size: 71
              }
            }
            string_val: "cs_similarity_transformer/body/code_embedding/encoder/layer_0/ffn/conv1/bias"
            string_val: "cs_similarity_transformer/body/code_embedding/encoder/layer_0/ffn/conv1/kernel"
            string_val: "cs_similarity_transformer/body/code_embedding/encoder/layer_0/ffn/conv2/bias"
            string_val: "cs_similarity_transformer/body/code_embedding/encoder/layer_0/ffn/conv2/kernel"
            string_val: "cs_similarity_transformer/body/code_embedding/encoder/layer_0/ffn/layer_prepostprocess/layer_norm/layer_norm_bias"
            string_val: "cs_similarity_transformer/body/code_embedding/encoder/layer_0/ffn/layer_prepostprocess/layer_norm/layer_norm_scale"
            string_val: "cs_similarity_transformer/body/code_embedding/encoder/layer_0/self_attention/layer_prepostprocess/layer_norm/layer_norm_bias"
            string_val: "cs_similarity_transformer/body/code_embedding/encoder/layer_0/self_attention/layer_prepostprocess/layer_norm/layer_norm_scale"
            string_val: "cs_similarity_transformer/body/code_embedding/encoder/layer_0/self_attention/multihead_attention/k/kernel"
            string_val: "cs_similarity_transformer/body/code_embedding/encoder/layer_0/self_attention/multihead_attention/output_transform/kernel"
            string_val: "cs_similarity_transformer/body/code_embedding/encoder/layer_0/self_attention/multihead_attention/q/kernel"
            string_val: "cs_similarity_transformer/body/code_embedding/encoder/layer_0/self_attention/multihead_attention/v/kernel"
            string_val: "cs_similarity_transformer/body/code_embedding/encoder/layer_1/ffn/conv1/bias"
            string_val: "cs_similarity_transformer/body/code_embedding/encoder/layer_1/ffn/conv1/kernel"
            string_val: "cs_similarity_transformer/body/code_embedding/encoder/layer_1/ffn/conv2/bias"
            string_val: "cs_similarity_transformer/body/code_embedding/encoder/layer_1/ffn/conv2/kernel"
            string_val: "cs_similarity_transformer/body/code_embedding/encoder/layer_1/ffn/layer_prepostprocess/layer_norm/layer_norm_bias"
            string_val: "cs_similarity_transformer/body/code_embedding/encoder/layer_1/ffn/layer_prepostprocess/layer_norm/layer_norm_scale"
            string_val: "cs_similarity_transformer/body/code_embedding/encoder/layer_1/self_attention/layer_prepostprocess/layer_norm/layer_norm_bias"
            string_val: "cs_similarity_transformer/body/code_embedding/encoder/layer_1/self_attention/layer_prepostprocess/layer_norm/layer_norm_scale"
            string_val: "cs_similarity_transformer/body/code_embedding/encoder/layer_1/self_attention/multihead_attention/k/kernel"
            string_val: "cs_similarity_transformer/body/code_embedding/encoder/layer_1/self_attention/multihead_attention/output_transform/kernel"
            string_val: "cs_similarity_transformer/body/code_embedding/encoder/layer_1/self_attention/multihead_attention/q/kernel"
            string_val: "cs_similarity_transformer/body/code_embedding/encoder/layer_1/self_attention/multihead_attention/v/kernel"
            string_val: "cs_similarity_transformer/body/code_embedding/encoder/layer_prepostprocess/layer_norm/layer_norm_bias"
            string_val: "cs_similarity_transformer/body/code_embedding/encoder/layer_prepostprocess/layer_norm/layer_norm_scale"
            string_val: "cs_similarity_transformer/body/code_embedding/target_space_embedding/kernel"
            string_val: "cs_similarity_transformer/body/string_embedding/encoder/layer_0/ffn/conv1/bias"
            string_val: "cs_similarity_transformer/body/string_embedding/encoder/layer_0/ffn/conv1/kernel"
            string_val: "cs_similarity_transformer/body/string_embedding/encoder/layer_0/ffn/conv2/bias"
            string_val: "cs_similarity_transformer/body/string_embedding/encoder/layer_0/ffn/conv2/kernel"
            string_val: "cs_similarity_transformer/body/string_embedding/encoder/layer_0/ffn/layer_prepostprocess/layer_norm/layer_norm_bias"
            string_val: "cs_similarity_transformer/body/string_embedding/encoder/layer_0/ffn/layer_prepostprocess/layer_norm/layer_norm_scale"
            string_val: "cs_similarity_transformer/body/string_embedding/encoder/layer_0/self_attention/layer_prepostprocess/layer_norm/layer_norm_bias"
            string_val: "cs_similarity_transformer/body/string_embedding/encoder/layer_0/self_attention/layer_prepostprocess/layer_norm/layer_norm_scale"
            string_val: "cs_similarity_transformer/body/string_embedding/encoder/layer_0/self_attention/multihead_attention/k/kernel"
            string_val: "cs_similarity_transformer/body/string_embedding/encoder/layer_0/self_attention/multihead_attention/output_transform/kernel"
            string_val: "cs_similarity_transformer/body/string_embedding/encoder/layer_0/self_attention/multihead_attention/q/kernel"
            string_val: "cs_similarity_transformer/body/string_embedding/encoder/layer_0/self_attention/multihead_attention/v/kernel"
            string_val: "cs_similarity_transformer/body/string_embedding/encoder/layer_1/ffn/conv1/bias"
            string_val: "cs_similarity_transformer/body/string_embedding/encoder/layer_1/ffn/conv1/kernel"
            string_val: "cs_similarity_transformer/body/string_embedding/encoder/layer_1/ffn/conv2/bias"
            string_val: "cs_similarity_transformer/body/string_embedding/encoder/layer_1/ffn/conv2/kernel"
            string_val: "cs_similarity_transformer/body/string_embedding/encoder/layer_1/ffn/layer_prepostprocess/layer_norm/layer_norm_bias"
            string_val: "cs_similarity_transformer/body/string_embedding/encoder/layer_1/ffn/layer_prepostprocess/layer_norm/layer_norm_scale"
            string_val: "cs_similarity_transformer/body/string_embedding/encoder/layer_1/self_attention/layer_prepostprocess/layer_norm/layer_norm_bias"
            string_val: "cs_similarity_transformer/body/string_embedding/encoder/layer_1/self_attention/layer_prepostprocess/layer_norm/layer_norm_scale"
            string_val: "cs_similarity_transformer/body/string_embedding/encoder/layer_1/self_attention/multihead_attention/k/kernel"
            string_val: "cs_similarity_transformer/body/string_embedding/encoder/layer_1/self_attention/multihead_attention/output_transform/kernel"
            string_val: "cs_similarity_transformer/body/string_embedding/encoder/layer_1/self_attention/multihead_attention/q/kernel"
            string_val: "cs_similarity_transformer/body/string_embedding/encoder/layer_1/self_attention/multihead_attention/v/kernel"
            string_val: "cs_similarity_transformer/body/string_embedding/encoder/layer_prepostprocess/layer_norm/layer_norm_bias"
            string_val: "cs_similarity_transformer/body/string_embedding/encoder/layer_prepostprocess/layer_norm/layer_norm_scale"
            string_val: "cs_similarity_transformer/body/string_embedding/target_space_embedding/kernel"
            string_val: "cs_similarity_transformer/symbol_modality_8164_128/shared/weights_0"
            string_val: "cs_similarity_transformer/symbol_modality_8164_128/shared/weights_1"
            string_val: "cs_similarity_transformer/symbol_modality_8164_128/shared/weights_10"
            string_val: "cs_similarity_transformer/symbol_modality_8164_128/shared/weights_11"
            string_val: "cs_similarity_transformer/symbol_modality_8164_128/shared/weights_12"
            string_val: "cs_similarity_transformer/symbol_modality_8164_128/shared/weights_13"
            string_val: "cs_similarity_transformer/symbol_modality_8164_128/shared/weights_14"
            string_val: "cs_similarity_transformer/symbol_modality_8164_128/shared/weights_15"
            string_val: "cs_similarity_transformer/symbol_modality_8164_128/shared/weights_2"
            string_val: "cs_similarity_transformer/symbol_modality_8164_128/shared/weights_3"
            string_val: "cs_similarity_transformer/symbol_modality_8164_128/shared/weights_4"
            string_val: "cs_similarity_transformer/symbol_modality_8164_128/shared/weights_5"
            string_val: "cs_similarity_transformer/symbol_modality_8164_128/shared/weights_6"
            string_val: "cs_similarity_transformer/symbol_modality_8164_128/shared/weights_7"
            string_val: "cs_similarity_transformer/symbol_modality_8164_128/shared/weights_8"
            string_val: "cs_similarity_transformer/symbol_modality_8164_128/shared/weights_9"
            string_val: "global_step"
          }
        }
      }
    }
    node {
      name: "save/RestoreV2/shape_and_slices"
      op: "Const"
      device: "/device:CPU:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 71
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
              dim {
                size: 71
              }
            }
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
          }
        }
      }
    }
    node {
      name: "save/RestoreV2"
      op: "RestoreV2"
      input: "save/Const"
      input: "save/RestoreV2/tensor_names"
      input: "save/RestoreV2/shape_and_slices"
      device: "/device:CPU:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "dtypes"
        value {
          list {
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_INT64
          }
        }
      }
    }
    node {
      name: "save/Identity_1"
      op: "Identity"
      input: "save/RestoreV2"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
    }
    node {
      name: "save/AssignVariableOp"
      op: "AssignVariableOp"
      input: "cs_similarity_transformer/body/code_embedding/encoder/layer_0/ffn/conv1/bias"
      input: "save/Identity_1"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "save/Identity_2"
      op: "Identity"
      input: "save/RestoreV2:1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
    }
    node {
      name: "save/AssignVariableOp_1"
      op: "AssignVariableOp"
      input: "cs_similarity_transformer/body/code_embedding/encoder/layer_0/ffn/conv1/kernel"
      input: "save/Identity_2"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "save/Identity_3"
      op: "Identity"
      input: "save/RestoreV2:2"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
    }
    node {
      name: "save/AssignVariableOp_2"
      op: "AssignVariableOp"
      input: "cs_similarity_transformer/body/code_embedding/encoder/layer_0/ffn/conv2/bias"
      input: "save/Identity_3"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "save/Identity_4"
      op: "Identity"
      input: "save/RestoreV2:3"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
    }
    node {
      name: "save/AssignVariableOp_3"
      op: "AssignVariableOp"
      input: "cs_similarity_transformer/body/code_embedding/encoder/layer_0/ffn/conv2/kernel"
      input: "save/Identity_4"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "save/Identity_5"
      op: "Identity"
      input: "save/RestoreV2:4"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
    }
    node {
      name: "save/AssignVariableOp_4"
      op: "AssignVariableOp"
      input: "cs_similarity_transformer/body/code_embedding/encoder/layer_0/ffn/layer_prepostprocess/layer_norm/layer_norm_bias"
      input: "save/Identity_5"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "save/Identity_6"
      op: "Identity"
      input: "save/RestoreV2:5"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
    }
    node {
      name: "save/AssignVariableOp_5"
      op: "AssignVariableOp"
      input: "cs_similarity_transformer/body/code_embedding/encoder/layer_0/ffn/layer_prepostprocess/layer_norm/layer_norm_scale"
      input: "save/Identity_6"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "save/Identity_7"
      op: "Identity"
      input: "save/RestoreV2:6"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
    }
    node {
      name: "save/AssignVariableOp_6"
      op: "AssignVariableOp"
      input: "cs_similarity_transformer/body/code_embedding/encoder/layer_0/self_attention/layer_prepostprocess/layer_norm/layer_norm_bias"
      input: "save/Identity_7"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "save/Identity_8"
      op: "Identity"
      input: "save/RestoreV2:7"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
    }
    node {
      name: "save/AssignVariableOp_7"
      op: "AssignVariableOp"
      input: "cs_similarity_transformer/body/code_embedding/encoder/layer_0/self_attention/layer_prepostprocess/layer_norm/layer_norm_scale"
      input: "save/Identity_8"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "save/Identity_9"
      op: "Identity"
      input: "save/RestoreV2:8"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
    }
    node {
      name: "save/AssignVariableOp_8"
      op: "AssignVariableOp"
      input: "cs_similarity_transformer/body/code_embedding/encoder/layer_0/self_attention/multihead_attention/k/kernel"
      input: "save/Identity_9"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "save/Identity_10"
      op: "Identity"
      input: "save/RestoreV2:9"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
    }
    node {
      name: "save/AssignVariableOp_9"
      op: "AssignVariableOp"
      input: "cs_similarity_transformer/body/code_embedding/encoder/layer_0/self_attention/multihead_attention/output_transform/kernel"
      input: "save/Identity_10"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "save/Identity_11"
      op: "Identity"
      input: "save/RestoreV2:10"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
    }
    node {
      name: "save/AssignVariableOp_10"
      op: "AssignVariableOp"
      input: "cs_similarity_transformer/body/code_embedding/encoder/layer_0/self_attention/multihead_attention/q/kernel"
      input: "save/Identity_11"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "save/Identity_12"
      op: "Identity"
      input: "save/RestoreV2:11"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
    }
    node {
      name: "save/AssignVariableOp_11"
      op: "AssignVariableOp"
      input: "cs_similarity_transformer/body/code_embedding/encoder/layer_0/self_attention/multihead_attention/v/kernel"
      input: "save/Identity_12"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "save/Identity_13"
      op: "Identity"
      input: "save/RestoreV2:12"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
    }
    node {
      name: "save/AssignVariableOp_12"
      op: "AssignVariableOp"
      input: "cs_similarity_transformer/body/code_embedding/encoder/layer_1/ffn/conv1/bias"
      input: "save/Identity_13"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "save/Identity_14"
      op: "Identity"
      input: "save/RestoreV2:13"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
    }
    node {
      name: "save/AssignVariableOp_13"
      op: "AssignVariableOp"
      input: "cs_similarity_transformer/body/code_embedding/encoder/layer_1/ffn/conv1/kernel"
      input: "save/Identity_14"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "save/Identity_15"
      op: "Identity"
      input: "save/RestoreV2:14"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
    }
    node {
      name: "save/AssignVariableOp_14"
      op: "AssignVariableOp"
      input: "cs_similarity_transformer/body/code_embedding/encoder/layer_1/ffn/conv2/bias"
      input: "save/Identity_15"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "save/Identity_16"
      op: "Identity"
      input: "save/RestoreV2:15"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
    }
    node {
      name: "save/AssignVariableOp_15"
      op: "AssignVariableOp"
      input: "cs_similarity_transformer/body/code_embedding/encoder/layer_1/ffn/conv2/kernel"
      input: "save/Identity_16"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "save/Identity_17"
      op: "Identity"
      input: "save/RestoreV2:16"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
    }
    node {
      name: "save/AssignVariableOp_16"
      op: "AssignVariableOp"
      input: "cs_similarity_transformer/body/code_embedding/encoder/layer_1/ffn/layer_prepostprocess/layer_norm/layer_norm_bias"
      input: "save/Identity_17"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "save/Identity_18"
      op: "Identity"
      input: "save/RestoreV2:17"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
    }
    node {
      name: "save/AssignVariableOp_17"
      op: "AssignVariableOp"
      input: "cs_similarity_transformer/body/code_embedding/encoder/layer_1/ffn/layer_prepostprocess/layer_norm/layer_norm_scale"
      input: "save/Identity_18"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "save/Identity_19"
      op: "Identity"
      input: "save/RestoreV2:18"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
    }
    node {
      name: "save/AssignVariableOp_18"
      op: "AssignVariableOp"
      input: "cs_similarity_transformer/body/code_embedding/encoder/layer_1/self_attention/layer_prepostprocess/layer_norm/layer_norm_bias"
      input: "save/Identity_19"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "save/Identity_20"
      op: "Identity"
      input: "save/RestoreV2:19"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
    }
    node {
      name: "save/AssignVariableOp_19"
      op: "AssignVariableOp"
      input: "cs_similarity_transformer/body/code_embedding/encoder/layer_1/self_attention/layer_prepostprocess/layer_norm/layer_norm_scale"
      input: "save/Identity_20"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "save/Identity_21"
      op: "Identity"
      input: "save/RestoreV2:20"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
    }
    node {
      name: "save/AssignVariableOp_20"
      op: "AssignVariableOp"
      input: "cs_similarity_transformer/body/code_embedding/encoder/layer_1/self_attention/multihead_attention/k/kernel"
      input: "save/Identity_21"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "save/Identity_22"
      op: "Identity"
      input: "save/RestoreV2:21"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
    }
    node {
      name: "save/AssignVariableOp_21"
      op: "AssignVariableOp"
      input: "cs_similarity_transformer/body/code_embedding/encoder/layer_1/self_attention/multihead_attention/output_transform/kernel"
      input: "save/Identity_22"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "save/Identity_23"
      op: "Identity"
      input: "save/RestoreV2:22"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
    }
    node {
      name: "save/AssignVariableOp_22"
      op: "AssignVariableOp"
      input: "cs_similarity_transformer/body/code_embedding/encoder/layer_1/self_attention/multihead_attention/q/kernel"
      input: "save/Identity_23"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "save/Identity_24"
      op: "Identity"
      input: "save/RestoreV2:23"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
    }
    node {
      name: "save/AssignVariableOp_23"
      op: "AssignVariableOp"
      input: "cs_similarity_transformer/body/code_embedding/encoder/layer_1/self_attention/multihead_attention/v/kernel"
      input: "save/Identity_24"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "save/Identity_25"
      op: "Identity"
      input: "save/RestoreV2:24"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
    }
    node {
      name: "save/AssignVariableOp_24"
      op: "AssignVariableOp"
      input: "cs_similarity_transformer/body/code_embedding/encoder/layer_prepostprocess/layer_norm/layer_norm_bias"
      input: "save/Identity_25"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "save/Identity_26"
      op: "Identity"
      input: "save/RestoreV2:25"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
    }
    node {
      name: "save/AssignVariableOp_25"
      op: "AssignVariableOp"
      input: "cs_similarity_transformer/body/code_embedding/encoder/layer_prepostprocess/layer_norm/layer_norm_scale"
      input: "save/Identity_26"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "save/Identity_27"
      op: "Identity"
      input: "save/RestoreV2:26"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
    }
    node {
      name: "save/AssignVariableOp_26"
      op: "AssignVariableOp"
      input: "cs_similarity_transformer/body/code_embedding/target_space_embedding/kernel"
      input: "save/Identity_27"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "save/Identity_28"
      op: "Identity"
      input: "save/RestoreV2:27"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
    }
    node {
      name: "save/AssignVariableOp_27"
      op: "AssignVariableOp"
      input: "cs_similarity_transformer/body/string_embedding/encoder/layer_0/ffn/conv1/bias"
      input: "save/Identity_28"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "save/Identity_29"
      op: "Identity"
      input: "save/RestoreV2:28"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
    }
    node {
      name: "save/AssignVariableOp_28"
      op: "AssignVariableOp"
      input: "cs_similarity_transformer/body/string_embedding/encoder/layer_0/ffn/conv1/kernel"
      input: "save/Identity_29"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "save/Identity_30"
      op: "Identity"
      input: "save/RestoreV2:29"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
    }
    node {
      name: "save/AssignVariableOp_29"
      op: "AssignVariableOp"
      input: "cs_similarity_transformer/body/string_embedding/encoder/layer_0/ffn/conv2/bias"
      input: "save/Identity_30"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "save/Identity_31"
      op: "Identity"
      input: "save/RestoreV2:30"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
    }
    node {
      name: "save/AssignVariableOp_30"
      op: "AssignVariableOp"
      input: "cs_similarity_transformer/body/string_embedding/encoder/layer_0/ffn/conv2/kernel"
      input: "save/Identity_31"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "save/Identity_32"
      op: "Identity"
      input: "save/RestoreV2:31"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
    }
    node {
      name: "save/AssignVariableOp_31"
      op: "AssignVariableOp"
      input: "cs_similarity_transformer/body/string_embedding/encoder/layer_0/ffn/layer_prepostprocess/layer_norm/layer_norm_bias"
      input: "save/Identity_32"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "save/Identity_33"
      op: "Identity"
      input: "save/RestoreV2:32"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
    }
    node {
      name: "save/AssignVariableOp_32"
      op: "AssignVariableOp"
      input: "cs_similarity_transformer/body/string_embedding/encoder/layer_0/ffn/layer_prepostprocess/layer_norm/layer_norm_scale"
      input: "save/Identity_33"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "save/Identity_34"
      op: "Identity"
      input: "save/RestoreV2:33"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
    }
    node {
      name: "save/AssignVariableOp_33"
      op: "AssignVariableOp"
      input: "cs_similarity_transformer/body/string_embedding/encoder/layer_0/self_attention/layer_prepostprocess/layer_norm/layer_norm_bias"
      input: "save/Identity_34"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "save/Identity_35"
      op: "Identity"
      input: "save/RestoreV2:34"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
    }
    node {
      name: "save/AssignVariableOp_34"
      op: "AssignVariableOp"
      input: "cs_similarity_transformer/body/string_embedding/encoder/layer_0/self_attention/layer_prepostprocess/layer_norm/layer_norm_scale"
      input: "save/Identity_35"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "save/Identity_36"
      op: "Identity"
      input: "save/RestoreV2:35"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
    }
    node {
      name: "save/AssignVariableOp_35"
      op: "AssignVariableOp"
      input: "cs_similarity_transformer/body/string_embedding/encoder/layer_0/self_attention/multihead_attention/k/kernel"
      input: "save/Identity_36"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "save/Identity_37"
      op: "Identity"
      input: "save/RestoreV2:36"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
    }
    node {
      name: "save/AssignVariableOp_36"
      op: "AssignVariableOp"
      input: "cs_similarity_transformer/body/string_embedding/encoder/layer_0/self_attention/multihead_attention/output_transform/kernel"
      input: "save/Identity_37"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "save/Identity_38"
      op: "Identity"
      input: "save/RestoreV2:37"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
    }
    node {
      name: "save/AssignVariableOp_37"
      op: "AssignVariableOp"
      input: "cs_similarity_transformer/body/string_embedding/encoder/layer_0/self_attention/multihead_attention/q/kernel"
      input: "save/Identity_38"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "save/Identity_39"
      op: "Identity"
      input: "save/RestoreV2:38"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
    }
    node {
      name: "save/AssignVariableOp_38"
      op: "AssignVariableOp"
      input: "cs_similarity_transformer/body/string_embedding/encoder/layer_0/self_attention/multihead_attention/v/kernel"
      input: "save/Identity_39"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "save/Identity_40"
      op: "Identity"
      input: "save/RestoreV2:39"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
    }
    node {
      name: "save/AssignVariableOp_39"
      op: "AssignVariableOp"
      input: "cs_similarity_transformer/body/string_embedding/encoder/layer_1/ffn/conv1/bias"
      input: "save/Identity_40"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "save/Identity_41"
      op: "Identity"
      input: "save/RestoreV2:40"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
    }
    node {
      name: "save/AssignVariableOp_40"
      op: "AssignVariableOp"
      input: "cs_similarity_transformer/body/string_embedding/encoder/layer_1/ffn/conv1/kernel"
      input: "save/Identity_41"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "save/Identity_42"
      op: "Identity"
      input: "save/RestoreV2:41"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
    }
    node {
      name: "save/AssignVariableOp_41"
      op: "AssignVariableOp"
      input: "cs_similarity_transformer/body/string_embedding/encoder/layer_1/ffn/conv2/bias"
      input: "save/Identity_42"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "save/Identity_43"
      op: "Identity"
      input: "save/RestoreV2:42"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
    }
    node {
      name: "save/AssignVariableOp_42"
      op: "AssignVariableOp"
      input: "cs_similarity_transformer/body/string_embedding/encoder/layer_1/ffn/conv2/kernel"
      input: "save/Identity_43"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "save/Identity_44"
      op: "Identity"
      input: "save/RestoreV2:43"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
    }
    node {
      name: "save/AssignVariableOp_43"
      op: "AssignVariableOp"
      input: "cs_similarity_transformer/body/string_embedding/encoder/layer_1/ffn/layer_prepostprocess/layer_norm/layer_norm_bias"
      input: "save/Identity_44"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "save/Identity_45"
      op: "Identity"
      input: "save/RestoreV2:44"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
    }
    node {
      name: "save/AssignVariableOp_44"
      op: "AssignVariableOp"
      input: "cs_similarity_transformer/body/string_embedding/encoder/layer_1/ffn/layer_prepostprocess/layer_norm/layer_norm_scale"
      input: "save/Identity_45"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "save/Identity_46"
      op: "Identity"
      input: "save/RestoreV2:45"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
    }
    node {
      name: "save/AssignVariableOp_45"
      op: "AssignVariableOp"
      input: "cs_similarity_transformer/body/string_embedding/encoder/layer_1/self_attention/layer_prepostprocess/layer_norm/layer_norm_bias"
      input: "save/Identity_46"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "save/Identity_47"
      op: "Identity"
      input: "save/RestoreV2:46"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
    }
    node {
      name: "save/AssignVariableOp_46"
      op: "AssignVariableOp"
      input: "cs_similarity_transformer/body/string_embedding/encoder/layer_1/self_attention/layer_prepostprocess/layer_norm/layer_norm_scale"
      input: "save/Identity_47"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "save/Identity_48"
      op: "Identity"
      input: "save/RestoreV2:47"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
    }
    node {
      name: "save/AssignVariableOp_47"
      op: "AssignVariableOp"
      input: "cs_similarity_transformer/body/string_embedding/encoder/layer_1/self_attention/multihead_attention/k/kernel"
      input: "save/Identity_48"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "save/Identity_49"
      op: "Identity"
      input: "save/RestoreV2:48"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
    }
    node {
      name: "save/AssignVariableOp_48"
      op: "AssignVariableOp"
      input: "cs_similarity_transformer/body/string_embedding/encoder/layer_1/self_attention/multihead_attention/output_transform/kernel"
      input: "save/Identity_49"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "save/Identity_50"
      op: "Identity"
      input: "save/RestoreV2:49"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
    }
    node {
      name: "save/AssignVariableOp_49"
      op: "AssignVariableOp"
      input: "cs_similarity_transformer/body/string_embedding/encoder/layer_1/self_attention/multihead_attention/q/kernel"
      input: "save/Identity_50"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "save/Identity_51"
      op: "Identity"
      input: "save/RestoreV2:50"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
    }
    node {
      name: "save/AssignVariableOp_50"
      op: "AssignVariableOp"
      input: "cs_similarity_transformer/body/string_embedding/encoder/layer_1/self_attention/multihead_attention/v/kernel"
      input: "save/Identity_51"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "save/Identity_52"
      op: "Identity"
      input: "save/RestoreV2:51"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
    }
    node {
      name: "save/AssignVariableOp_51"
      op: "AssignVariableOp"
      input: "cs_similarity_transformer/body/string_embedding/encoder/layer_prepostprocess/layer_norm/layer_norm_bias"
      input: "save/Identity_52"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "save/Identity_53"
      op: "Identity"
      input: "save/RestoreV2:52"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
    }
    node {
      name: "save/AssignVariableOp_52"
      op: "AssignVariableOp"
      input: "cs_similarity_transformer/body/string_embedding/encoder/layer_prepostprocess/layer_norm/layer_norm_scale"
      input: "save/Identity_53"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "save/Identity_54"
      op: "Identity"
      input: "save/RestoreV2:53"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
    }
    node {
      name: "save/AssignVariableOp_53"
      op: "AssignVariableOp"
      input: "cs_similarity_transformer/body/string_embedding/target_space_embedding/kernel"
      input: "save/Identity_54"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "save/Identity_55"
      op: "Identity"
      input: "save/RestoreV2:54"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
    }
    node {
      name: "save/AssignVariableOp_54"
      op: "AssignVariableOp"
      input: "cs_similarity_transformer/symbol_modality_8164_128/shared/weights_0"
      input: "save/Identity_55"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "save/Identity_56"
      op: "Identity"
      input: "save/RestoreV2:55"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
    }
    node {
      name: "save/AssignVariableOp_55"
      op: "AssignVariableOp"
      input: "cs_similarity_transformer/symbol_modality_8164_128/shared/weights_1"
      input: "save/Identity_56"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "save/Identity_57"
      op: "Identity"
      input: "save/RestoreV2:56"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
    }
    node {
      name: "save/AssignVariableOp_56"
      op: "AssignVariableOp"
      input: "cs_similarity_transformer/symbol_modality_8164_128/shared/weights_10"
      input: "save/Identity_57"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "save/Identity_58"
      op: "Identity"
      input: "save/RestoreV2:57"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
    }
    node {
      name: "save/AssignVariableOp_57"
      op: "AssignVariableOp"
      input: "cs_similarity_transformer/symbol_modality_8164_128/shared/weights_11"
      input: "save/Identity_58"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "save/Identity_59"
      op: "Identity"
      input: "save/RestoreV2:58"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
    }
    node {
      name: "save/AssignVariableOp_58"
      op: "AssignVariableOp"
      input: "cs_similarity_transformer/symbol_modality_8164_128/shared/weights_12"
      input: "save/Identity_59"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "save/Identity_60"
      op: "Identity"
      input: "save/RestoreV2:59"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
    }
    node {
      name: "save/AssignVariableOp_59"
      op: "AssignVariableOp"
      input: "cs_similarity_transformer/symbol_modality_8164_128/shared/weights_13"
      input: "save/Identity_60"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "save/Identity_61"
      op: "Identity"
      input: "save/RestoreV2:60"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
    }
    node {
      name: "save/AssignVariableOp_60"
      op: "AssignVariableOp"
      input: "cs_similarity_transformer/symbol_modality_8164_128/shared/weights_14"
      input: "save/Identity_61"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "save/Identity_62"
      op: "Identity"
      input: "save/RestoreV2:61"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
    }
    node {
      name: "save/AssignVariableOp_61"
      op: "AssignVariableOp"
      input: "cs_similarity_transformer/symbol_modality_8164_128/shared/weights_15"
      input: "save/Identity_62"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "save/Identity_63"
      op: "Identity"
      input: "save/RestoreV2:62"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
    }
    node {
      name: "save/AssignVariableOp_62"
      op: "AssignVariableOp"
      input: "cs_similarity_transformer/symbol_modality_8164_128/shared/weights_2"
      input: "save/Identity_63"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "save/Identity_64"
      op: "Identity"
      input: "save/RestoreV2:63"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
    }
    node {
      name: "save/AssignVariableOp_63"
      op: "AssignVariableOp"
      input: "cs_similarity_transformer/symbol_modality_8164_128/shared/weights_3"
      input: "save/Identity_64"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "save/Identity_65"
      op: "Identity"
      input: "save/RestoreV2:64"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
    }
    node {
      name: "save/AssignVariableOp_64"
      op: "AssignVariableOp"
      input: "cs_similarity_transformer/symbol_modality_8164_128/shared/weights_4"
      input: "save/Identity_65"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "save/Identity_66"
      op: "Identity"
      input: "save/RestoreV2:65"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
    }
    node {
      name: "save/AssignVariableOp_65"
      op: "AssignVariableOp"
      input: "cs_similarity_transformer/symbol_modality_8164_128/shared/weights_5"
      input: "save/Identity_66"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "save/Identity_67"
      op: "Identity"
      input: "save/RestoreV2:66"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
    }
    node {
      name: "save/AssignVariableOp_66"
      op: "AssignVariableOp"
      input: "cs_similarity_transformer/symbol_modality_8164_128/shared/weights_6"
      input: "save/Identity_67"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "save/Identity_68"
      op: "Identity"
      input: "save/RestoreV2:67"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
    }
    node {
      name: "save/AssignVariableOp_67"
      op: "AssignVariableOp"
      input: "cs_similarity_transformer/symbol_modality_8164_128/shared/weights_7"
      input: "save/Identity_68"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "save/Identity_69"
      op: "Identity"
      input: "save/RestoreV2:68"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
    }
    node {
      name: "save/AssignVariableOp_68"
      op: "AssignVariableOp"
      input: "cs_similarity_transformer/symbol_modality_8164_128/shared/weights_8"
      input: "save/Identity_69"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "save/Identity_70"
      op: "Identity"
      input: "save/RestoreV2:69"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
    }
    node {
      name: "save/AssignVariableOp_69"
      op: "AssignVariableOp"
      input: "cs_similarity_transformer/symbol_modality_8164_128/shared/weights_9"
      input: "save/Identity_70"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "save/Assign"
      op: "Assign"
      input: "global_step"
      input: "save/RestoreV2:70"
      attr {
        key: "T"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@global_step"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "save/restore_shard"
      op: "NoOp"
      input: "^save/Assign"
      input: "^save/AssignVariableOp"
      input: "^save/AssignVariableOp_1"
      input: "^save/AssignVariableOp_10"
      input: "^save/AssignVariableOp_11"
      input: "^save/AssignVariableOp_12"
      input: "^save/AssignVariableOp_13"
      input: "^save/AssignVariableOp_14"
      input: "^save/AssignVariableOp_15"
      input: "^save/AssignVariableOp_16"
      input: "^save/AssignVariableOp_17"
      input: "^save/AssignVariableOp_18"
      input: "^save/AssignVariableOp_19"
      input: "^save/AssignVariableOp_2"
      input: "^save/AssignVariableOp_20"
      input: "^save/AssignVariableOp_21"
      input: "^save/AssignVariableOp_22"
      input: "^save/AssignVariableOp_23"
      input: "^save/AssignVariableOp_24"
      input: "^save/AssignVariableOp_25"
      input: "^save/AssignVariableOp_26"
      input: "^save/AssignVariableOp_27"
      input: "^save/AssignVariableOp_28"
      input: "^save/AssignVariableOp_29"
      input: "^save/AssignVariableOp_3"
      input: "^save/AssignVariableOp_30"
      input: "^save/AssignVariableOp_31"
      input: "^save/AssignVariableOp_32"
      input: "^save/AssignVariableOp_33"
      input: "^save/AssignVariableOp_34"
      input: "^save/AssignVariableOp_35"
      input: "^save/AssignVariableOp_36"
      input: "^save/AssignVariableOp_37"
      input: "^save/AssignVariableOp_38"
      input: "^save/AssignVariableOp_39"
      input: "^save/AssignVariableOp_4"
      input: "^save/AssignVariableOp_40"
      input: "^save/AssignVariableOp_41"
      input: "^save/AssignVariableOp_42"
      input: "^save/AssignVariableOp_43"
      input: "^save/AssignVariableOp_44"
      input: "^save/AssignVariableOp_45"
      input: "^save/AssignVariableOp_46"
      input: "^save/AssignVariableOp_47"
      input: "^save/AssignVariableOp_48"
      input: "^save/AssignVariableOp_49"
      input: "^save/AssignVariableOp_5"
      input: "^save/AssignVariableOp_50"
      input: "^save/AssignVariableOp_51"
      input: "^save/AssignVariableOp_52"
      input: "^save/AssignVariableOp_53"
      input: "^save/AssignVariableOp_54"
      input: "^save/AssignVariableOp_55"
      input: "^save/AssignVariableOp_56"
      input: "^save/AssignVariableOp_57"
      input: "^save/AssignVariableOp_58"
      input: "^save/AssignVariableOp_59"
      input: "^save/AssignVariableOp_6"
      input: "^save/AssignVariableOp_60"
      input: "^save/AssignVariableOp_61"
      input: "^save/AssignVariableOp_62"
      input: "^save/AssignVariableOp_63"
      input: "^save/AssignVariableOp_64"
      input: "^save/AssignVariableOp_65"
      input: "^save/AssignVariableOp_66"
      input: "^save/AssignVariableOp_67"
      input: "^save/AssignVariableOp_68"
      input: "^save/AssignVariableOp_69"
      input: "^save/AssignVariableOp_7"
      input: "^save/AssignVariableOp_8"
      input: "^save/AssignVariableOp_9"
    }
    node {
      name: "save/restore_all"
      op: "NoOp"
      input: "^save/restore_shard"
    }
    library {
      function {
        signature {
          name: "tf_data_structured_function_wrapper_bshwJPcRWbY"
          input_arg {
            name: "arg0"
            type: DT_STRING
          }
          output_arg {
            name: "reshape"
            type: DT_INT64
          }
          output_arg {
            name: "reshape_1"
            type: DT_INT64
          }
          output_arg {
            name: "sparsetodense"
            type: DT_INT64
          }
          output_arg {
            name: "sparsetodense_1"
            type: DT_INT64
          }
          description: "Wrapper for passing nested structures to and from tf.data functions."
        }
        node_def {
          name: "ParseSingleExample/key_batch_prediction_key"
          op: "Const"
          attr {
            key: "dtype"
            value {
              type: DT_INT64
            }
          }
          attr {
            key: "value"
            value {
              tensor {
                dtype: DT_INT64
                tensor_shape {
                }
                int64_val: 0
              }
            }
          }
        }
        node_def {
          name: "ParseSingleExample/Reshape/shape"
          op: "Const"
          attr {
            key: "dtype"
            value {
              type: DT_INT32
            }
          }
          attr {
            key: "value"
            value {
              tensor {
                dtype: DT_INT32
                tensor_shape {
                  dim {
                    size: 1
                  }
                }
                int_val: 1
              }
            }
          }
        }
        node_def {
          name: "ParseSingleExample/Reshape"
          op: "Reshape"
          input: "ParseSingleExample/key_batch_prediction_key:output:0"
          input: "ParseSingleExample/Reshape/shape:output:0"
          attr {
            key: "T"
            value {
              type: DT_INT64
            }
          }
        }
        node_def {
          name: "ParseSingleExample/Const"
          op: "Const"
          attr {
            key: "dtype"
            value {
              type: DT_INT64
            }
          }
          attr {
            key: "value"
            value {
              tensor {
                dtype: DT_INT64
                tensor_shape {
                  dim {
                  }
                }
              }
            }
          }
        }
        node_def {
          name: "ParseSingleExample/ParseSingleExample"
          op: "ParseSingleExample"
          input: "arg0"
          input: "ParseSingleExample/Reshape:output:0"
          input: "ParseSingleExample/Const:output:0"
          attr {
            key: "Tdense"
            value {
              list {
                type: DT_INT64
                type: DT_INT64
              }
            }
          }
          attr {
            key: "dense_keys"
            value {
              list {
                s: "batch_prediction_key"
                s: "embed_code"
              }
            }
          }
          attr {
            key: "dense_shapes"
            value {
              list {
                shape {
                  dim {
                    size: 1
                  }
                }
                shape {
                  dim {
                    size: 1
                  }
                }
              }
            }
          }
          attr {
            key: "num_sparse"
            value {
              i: 2
            }
          }
          attr {
            key: "sparse_keys"
            value {
              list {
                s: "inputs"
                s: "targets"
              }
            }
          }
          attr {
            key: "sparse_types"
            value {
              list {
                type: DT_INT64
                type: DT_INT64
              }
            }
          }
        }
        node_def {
          name: "Reshape/shape"
          op: "Const"
          attr {
            key: "dtype"
            value {
              type: DT_INT32
            }
          }
          attr {
            key: "value"
            value {
              tensor {
                dtype: DT_INT32
                tensor_shape {
                  dim {
                    size: 1
                  }
                }
                int_val: 1
              }
            }
          }
        }
        node_def {
          name: "Reshape"
          op: "Reshape"
          input: "ParseSingleExample/ParseSingleExample:dense_values:0"
          input: "Reshape/shape:output:0"
          attr {
            key: "T"
            value {
              type: DT_INT64
            }
          }
        }
        node_def {
          name: "Reshape_1/shape"
          op: "Const"
          attr {
            key: "dtype"
            value {
              type: DT_INT32
            }
          }
          attr {
            key: "value"
            value {
              tensor {
                dtype: DT_INT32
                tensor_shape {
                  dim {
                    size: 1
                  }
                }
                int_val: 1
              }
            }
          }
        }
        node_def {
          name: "Reshape_1"
          op: "Reshape"
          input: "ParseSingleExample/ParseSingleExample:dense_values:1"
          input: "Reshape_1/shape:output:0"
          attr {
            key: "T"
            value {
              type: DT_INT64
            }
          }
        }
        node_def {
          name: "SparseToDense/default_value"
          op: "Const"
          attr {
            key: "dtype"
            value {
              type: DT_INT64
            }
          }
          attr {
            key: "value"
            value {
              tensor {
                dtype: DT_INT64
                tensor_shape {
                }
                int64_val: 0
              }
            }
          }
        }
        node_def {
          name: "SparseToDense"
          op: "SparseToDense"
          input: "ParseSingleExample/ParseSingleExample:sparse_indices:0"
          input: "ParseSingleExample/ParseSingleExample:sparse_shapes:0"
          input: "ParseSingleExample/ParseSingleExample:sparse_values:0"
          input: "SparseToDense/default_value:output:0"
          attr {
            key: "T"
            value {
              type: DT_INT64
            }
          }
          attr {
            key: "Tindices"
            value {
              type: DT_INT64
            }
          }
        }
        node_def {
          name: "SparseToDense_1/default_value"
          op: "Const"
          attr {
            key: "dtype"
            value {
              type: DT_INT64
            }
          }
          attr {
            key: "value"
            value {
              tensor {
                dtype: DT_INT64
                tensor_shape {
                }
                int64_val: 0
              }
            }
          }
        }
        node_def {
          name: "SparseToDense_1"
          op: "SparseToDense"
          input: "ParseSingleExample/ParseSingleExample:sparse_indices:1"
          input: "ParseSingleExample/ParseSingleExample:sparse_shapes:1"
          input: "ParseSingleExample/ParseSingleExample:sparse_values:1"
          input: "SparseToDense_1/default_value:output:0"
          attr {
            key: "T"
            value {
              type: DT_INT64
            }
          }
          attr {
            key: "Tindices"
            value {
              type: DT_INT64
            }
          }
        }
        ret {
          key: "reshape"
          value: "Reshape:output:0"
        }
        ret {
          key: "reshape_1"
          value: "Reshape_1:output:0"
        }
        ret {
          key: "sparsetodense"
          value: "SparseToDense:dense:0"
        }
        ret {
          key: "sparsetodense_1"
          value: "SparseToDense_1:dense:0"
        }
      }
      function {
        signature {
          name: "tf_data_structured_function_wrapper_qI9kamzZnOg"
          input_arg {
            name: "arg0"
            type: DT_INT64
          }
          input_arg {
            name: "arg1"
            type: DT_INT64
          }
          input_arg {
            name: "arg2"
            type: DT_INT64
          }
          input_arg {
            name: "arg3"
            type: DT_INT64
          }
          output_arg {
            name: "toint32"
            type: DT_INT32
          }
          output_arg {
            name: "toint32_1"
            type: DT_INT32
          }
          output_arg {
            name: "toint32_2"
            type: DT_INT32
          }
          output_arg {
            name: "toint32_3"
            type: DT_INT32
          }
          description: "Wrapper for passing nested structures to and from tf.data functions."
        }
        node_def {
          name: "ToInt32"
          op: "Cast"
          input: "arg0"
          attr {
            key: "DstT"
            value {
              type: DT_INT32
            }
          }
          attr {
            key: "SrcT"
            value {
              type: DT_INT64
            }
          }
        }
        node_def {
          name: "ToInt32_1"
          op: "Cast"
          input: "arg1"
          attr {
            key: "DstT"
            value {
              type: DT_INT32
            }
          }
          attr {
            key: "SrcT"
            value {
              type: DT_INT64
            }
          }
        }
        node_def {
          name: "ToInt32_2"
          op: "Cast"
          input: "arg2"
          attr {
            key: "DstT"
            value {
              type: DT_INT32
            }
          }
          attr {
            key: "SrcT"
            value {
              type: DT_INT64
            }
          }
        }
        node_def {
          name: "ToInt32_3"
          op: "Cast"
          input: "arg3"
          attr {
            key: "DstT"
            value {
              type: DT_INT32
            }
          }
          attr {
            key: "SrcT"
            value {
              type: DT_INT64
            }
          }
        }
        ret {
          key: "toint32"
          value: "ToInt32:y:0"
        }
        ret {
          key: "toint32_1"
          value: "ToInt32_1:y:0"
        }
        ret {
          key: "toint32_2"
          value: "ToInt32_2:y:0"
        }
        ret {
          key: "toint32_3"
          value: "ToInt32_3:y:0"
        }
      }
      function {
        signature {
          name: "convert_gradient_to_tensor_HBc3xYw22Mw"
          input_arg {
            name: "x_0"
            type: DT_FLOAT
          }
          output_arg {
            name: "x"
            type: DT_FLOAT
          }
          description: "Identity operation whose gradient is converted to a `Tensor`.\n\n  Currently, the gradient to `tf.concat` is particularly expensive to\n  compute if dy is an `IndexedSlices` (a lack of GPU implementation\n  forces the gradient operation onto CPU).  This situation occurs when\n  the output of the `tf.concat` is eventually passed to `tf.gather`.\n  It is sometimes faster to convert the gradient to a `Tensor`, so as\n  to get the cheaper gradient for `tf.concat`.  To do this, replace\n  `tf.concat(x)` with `convert_gradient_to_tensor(tf.concat(x))`.\n\n  Args:\n    x: A `Tensor`.\n\n  Returns:\n    The input `Tensor`.\n  "
        }
        ret {
          key: "x"
          value: "x_0"
        }
      }
      function {
        signature {
          name: "tf_data_structured_function_wrapper_EVCvgogkMRU"
          input_arg {
            name: "arg0_0"
            type: DT_INT64
          }
          input_arg {
            name: "arg1_0"
            type: DT_INT64
          }
          input_arg {
            name: "arg2_0"
            type: DT_INT64
          }
          input_arg {
            name: "arg3_0"
            type: DT_INT64
          }
          output_arg {
            name: "arg0"
            type: DT_INT64
          }
          output_arg {
            name: "arg1"
            type: DT_INT64
          }
          output_arg {
            name: "arg2"
            type: DT_INT64
          }
          output_arg {
            name: "arg3"
            type: DT_INT64
          }
          description: "Wrapper for passing nested structures to and from tf.data functions."
        }
        ret {
          key: "arg0"
          value: "arg0_0"
        }
        ret {
          key: "arg1"
          value: "arg1_0"
        }
        ret {
          key: "arg2"
          value: "arg2_0"
        }
        ret {
          key: "arg3"
          value: "arg3_0"
        }
      }
      function {
        signature {
          name: "tf_data_structured_function_wrapper_bkLTuN6B4xc"
          input_arg {
            name: "arg0_0"
            type: DT_INT32
          }
          input_arg {
            name: "arg1_0"
            type: DT_INT32
          }
          input_arg {
            name: "arg2"
            type: DT_INT32
          }
          input_arg {
            name: "arg3"
            type: DT_INT32
          }
          output_arg {
            name: "arg0"
            type: DT_INT32
          }
          output_arg {
            name: "arg1"
            type: DT_INT32
          }
          output_arg {
            name: "expanddims_1"
            type: DT_INT32
          }
          output_arg {
            name: "expanddims_3"
            type: DT_INT32
          }
          description: "Wrapper for passing nested structures to and from tf.data functions."
        }
        node_def {
          name: "ExpandDims/dim"
          op: "Const"
          attr {
            key: "dtype"
            value {
              type: DT_INT32
            }
          }
          attr {
            key: "value"
            value {
              tensor {
                dtype: DT_INT32
                tensor_shape {
                }
                int_val: -1
              }
            }
          }
        }
        node_def {
          name: "ExpandDims"
          op: "ExpandDims"
          input: "arg2"
          input: "ExpandDims/dim:output:0"
          attr {
            key: "T"
            value {
              type: DT_INT32
            }
          }
        }
        node_def {
          name: "ExpandDims_1/dim"
          op: "Const"
          attr {
            key: "dtype"
            value {
              type: DT_INT32
            }
          }
          attr {
            key: "value"
            value {
              tensor {
                dtype: DT_INT32
                tensor_shape {
                }
                int_val: -1
              }
            }
          }
        }
        node_def {
          name: "ExpandDims_1"
          op: "ExpandDims"
          input: "ExpandDims:output:0"
          input: "ExpandDims_1/dim:output:0"
          attr {
            key: "T"
            value {
              type: DT_INT32
            }
          }
        }
        node_def {
          name: "ExpandDims_2/dim"
          op: "Const"
          attr {
            key: "dtype"
            value {
              type: DT_INT32
            }
          }
          attr {
            key: "value"
            value {
              tensor {
                dtype: DT_INT32
                tensor_shape {
                }
                int_val: -1
              }
            }
          }
        }
        node_def {
          name: "ExpandDims_2"
          op: "ExpandDims"
          input: "arg3"
          input: "ExpandDims_2/dim:output:0"
          attr {
            key: "T"
            value {
              type: DT_INT32
            }
          }
        }
        node_def {
          name: "ExpandDims_3/dim"
          op: "Const"
          attr {
            key: "dtype"
            value {
              type: DT_INT32
            }
          }
          attr {
            key: "value"
            value {
              tensor {
                dtype: DT_INT32
                tensor_shape {
                }
                int_val: -1
              }
            }
          }
        }
        node_def {
          name: "ExpandDims_3"
          op: "ExpandDims"
          input: "ExpandDims_2:output:0"
          input: "ExpandDims_3/dim:output:0"
          attr {
            key: "T"
            value {
              type: DT_INT32
            }
          }
        }
        ret {
          key: "arg0"
          value: "arg0_0"
        }
        ret {
          key: "arg1"
          value: "arg1_0"
        }
        ret {
          key: "expanddims_1"
          value: "ExpandDims_1:output:0"
        }
        ret {
          key: "expanddims_3"
          value: "ExpandDims_3:output:0"
        }
      }
    }
    versions {
      producer: 27
      min_consumer: 12
    }
  }
  saver_def {
    filename_tensor_name: "save/Const:0"
    save_tensor_name: "save/Identity:0"
    restore_op_name: "save/restore_all"
    max_to_keep: 5
    sharded: true
    keep_checkpoint_every_n_hours: 10000.0
    version: V2
  }
  collection_def {
    key: "cond_context"
    value {
      bytes_list {
        value: "\nncs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/cond_text\022ncs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/pred_id:0\032ocs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_t:0 \001*\210\247\014\n\rIdentity_16:0\n\rIdentity_17:0\n\rIdentity_18:0\n\rIdentity_19:0\n\rIdentity_20:0\n\rIdentity_21:0\n\rIdentity_22:0\n\rIdentity_23:0\n\rIdentity_24:0\n\rIdentity_25:0\n\rIdentity_26:0\n\rIdentity_27:0\n\rIdentity_28:0\n\rIdentity_29:0\n\rIdentity_30:0\n\rIdentity_31:0\n\rIdentity_32:0\n\rIdentity_33:0\n\rIdentity_34:0\n\rIdentity_35:0\n\rIdentity_36:0\n\rIdentity_37:0\n\rIdentity_38:0\n\rIdentity_39:0\n\rIdentity_40:0\n\rIdentity_41:0\n\rIdentity_42:0\n\037Read_16/ReadVariableOp/Switch:1\n\030Read_16/ReadVariableOp:0\n\037Read_17/ReadVariableOp/Switch:1\n\030Read_17/ReadVariableOp:0\n\037Read_18/ReadVariableOp/Switch:1\n\030Read_18/ReadVariableOp:0\n\037Read_19/ReadVariableOp/Switch:1\n\030Read_19/ReadVariableOp:0\n\037Read_20/ReadVariableOp/Switch:1\n\030Read_20/ReadVariableOp:0\n\037Read_21/ReadVariableOp/Switch:1\n\030Read_21/ReadVariableOp:0\n\037Read_22/ReadVariableOp/Switch:1\n\030Read_22/ReadVariableOp:0\n\037Read_23/ReadVariableOp/Switch:1\n\030Read_23/ReadVariableOp:0\n\037Read_24/ReadVariableOp/Switch:1\n\030Read_24/ReadVariableOp:0\n\037Read_25/ReadVariableOp/Switch:1\n\030Read_25/ReadVariableOp:0\n\037Read_26/ReadVariableOp/Switch:1\n\030Read_26/ReadVariableOp:0\n\037Read_27/ReadVariableOp/Switch:1\n\030Read_27/ReadVariableOp:0\n\037Read_28/ReadVariableOp/Switch:1\n\030Read_28/ReadVariableOp:0\n\037Read_29/ReadVariableOp/Switch:1\n\030Read_29/ReadVariableOp:0\n\037Read_30/ReadVariableOp/Switch:1\n\030Read_30/ReadVariableOp:0\n\037Read_31/ReadVariableOp/Switch:1\n\030Read_31/ReadVariableOp:0\n\037Read_32/ReadVariableOp/Switch:1\n\030Read_32/ReadVariableOp:0\n\037Read_33/ReadVariableOp/Switch:1\n\030Read_33/ReadVariableOp:0\n\037Read_34/ReadVariableOp/Switch:1\n\030Read_34/ReadVariableOp:0\n\037Read_35/ReadVariableOp/Switch:1\n\030Read_35/ReadVariableOp:0\n\037Read_36/ReadVariableOp/Switch:1\n\030Read_36/ReadVariableOp:0\n\037Read_37/ReadVariableOp/Switch:1\n\030Read_37/ReadVariableOp:0\n\037Read_38/ReadVariableOp/Switch:1\n\030Read_38/ReadVariableOp:0\n\037Read_39/ReadVariableOp/Switch:1\n\030Read_39/ReadVariableOp:0\n\037Read_40/ReadVariableOp/Switch:1\n\030Read_40/ReadVariableOp:0\n\037Read_41/ReadVariableOp/Switch:1\n\030Read_41/ReadVariableOp:0\n\037Read_42/ReadVariableOp/Switch:1\n\030Read_42/ReadVariableOp:0\nNcs_similarity_transformer/body/code_embedding/encoder/layer_0/ffn/conv1/bias:0\nPcs_similarity_transformer/body/code_embedding/encoder/layer_0/ffn/conv1/kernel:0\nNcs_similarity_transformer/body/code_embedding/encoder/layer_0/ffn/conv2/bias:0\nPcs_similarity_transformer/body/code_embedding/encoder/layer_0/ffn/conv2/kernel:0\nscs_similarity_transformer/body/code_embedding/encoder/layer_0/ffn/layer_prepostprocess/layer_norm/layer_norm_bias:0\ntcs_similarity_transformer/body/code_embedding/encoder/layer_0/ffn/layer_prepostprocess/layer_norm/layer_norm_scale:0\n~cs_similarity_transformer/body/code_embedding/encoder/layer_0/self_attention/layer_prepostprocess/layer_norm/layer_norm_bias:0\n\177cs_similarity_transformer/body/code_embedding/encoder/layer_0/self_attention/layer_prepostprocess/layer_norm/layer_norm_scale:0\nkcs_similarity_transformer/body/code_embedding/encoder/layer_0/self_attention/multihead_attention/k/kernel:0\nzcs_similarity_transformer/body/code_embedding/encoder/layer_0/self_attention/multihead_attention/output_transform/kernel:0\nkcs_similarity_transformer/body/code_embedding/encoder/layer_0/self_attention/multihead_attention/q/kernel:0\nkcs_similarity_transformer/body/code_embedding/encoder/layer_0/self_attention/multihead_attention/v/kernel:0\nNcs_similarity_transformer/body/code_embedding/encoder/layer_1/ffn/conv1/bias:0\nPcs_similarity_transformer/body/code_embedding/encoder/layer_1/ffn/conv1/kernel:0\nNcs_similarity_transformer/body/code_embedding/encoder/layer_1/ffn/conv2/bias:0\nPcs_similarity_transformer/body/code_embedding/encoder/layer_1/ffn/conv2/kernel:0\nscs_similarity_transformer/body/code_embedding/encoder/layer_1/ffn/layer_prepostprocess/layer_norm/layer_norm_bias:0\ntcs_similarity_transformer/body/code_embedding/encoder/layer_1/ffn/layer_prepostprocess/layer_norm/layer_norm_scale:0\n~cs_similarity_transformer/body/code_embedding/encoder/layer_1/self_attention/layer_prepostprocess/layer_norm/layer_norm_bias:0\n\177cs_similarity_transformer/body/code_embedding/encoder/layer_1/self_attention/layer_prepostprocess/layer_norm/layer_norm_scale:0\nkcs_similarity_transformer/body/code_embedding/encoder/layer_1/self_attention/multihead_attention/k/kernel:0\nzcs_similarity_transformer/body/code_embedding/encoder/layer_1/self_attention/multihead_attention/output_transform/kernel:0\nkcs_similarity_transformer/body/code_embedding/encoder/layer_1/self_attention/multihead_attention/q/kernel:0\nkcs_similarity_transformer/body/code_embedding/encoder/layer_1/self_attention/multihead_attention/v/kernel:0\ngcs_similarity_transformer/body/code_embedding/encoder/layer_prepostprocess/layer_norm/layer_norm_bias:0\nhcs_similarity_transformer/body/code_embedding/encoder/layer_prepostprocess/layer_norm/layer_norm_scale:0\nMcs_similarity_transformer/body/code_embedding/target_space_embedding/kernel:0\n\214\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/Mean/reduction_indices:0\nzcs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/Mean:0\n\205\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/Reshape/shape/2:0\n\203\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/Reshape/shape:0\n}cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/Reshape:0\n\205\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/Reshape_1/shape:0\n\177cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/Reshape_1:0\n\202\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/Shape/Switch:1\n{cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/Shape:0\nycs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/add:0\n\220\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/add_timing_signal_1d/Shape:0\n\222\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/add_timing_signal_1d/Shape_1:0\n\216\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/add_timing_signal_1d/add:0\n\243\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/add_timing_signal_1d/get_timing_signal_1d/Cos:0\n\243\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/add_timing_signal_1d/get_timing_signal_1d/Exp:0\n\256\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/add_timing_signal_1d/get_timing_signal_1d/ExpandDims/dim:0\n\252\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/add_timing_signal_1d/get_timing_signal_1d/ExpandDims:0\n\260\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/add_timing_signal_1d/get_timing_signal_1d/ExpandDims_1/dim:0\n\254\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/add_timing_signal_1d/get_timing_signal_1d/ExpandDims_1:0\n\252\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/add_timing_signal_1d/get_timing_signal_1d/FloorMod/x:0\n\252\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/add_timing_signal_1d/get_timing_signal_1d/FloorMod/y:0\n\250\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/add_timing_signal_1d/get_timing_signal_1d/FloorMod:0\n\251\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/add_timing_signal_1d/get_timing_signal_1d/Maximum/y:0\n\247\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/add_timing_signal_1d/get_timing_signal_1d/Maximum:0\n\243\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/add_timing_signal_1d/get_timing_signal_1d/Neg:0\n\260\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/add_timing_signal_1d/get_timing_signal_1d/Pad/paddings/0_1:0\n\260\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/add_timing_signal_1d/get_timing_signal_1d/Pad/paddings/1/0:0\n\256\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/add_timing_signal_1d/get_timing_signal_1d/Pad/paddings/1:0\n\254\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/add_timing_signal_1d/get_timing_signal_1d/Pad/paddings:0\n\243\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/add_timing_signal_1d/get_timing_signal_1d/Pad:0\n\257\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/add_timing_signal_1d/get_timing_signal_1d/Reshape/shape/0:0\n\257\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/add_timing_signal_1d/get_timing_signal_1d/Reshape/shape/2:0\n\255\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/add_timing_signal_1d/get_timing_signal_1d/Reshape/shape:0\n\247\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/add_timing_signal_1d/get_timing_signal_1d/Reshape:0\n\243\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/add_timing_signal_1d/get_timing_signal_1d/Sin:0\n\247\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/add_timing_signal_1d/get_timing_signal_1d/ToFloat:0\n\253\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/add_timing_signal_1d/get_timing_signal_1d/ToFloat_1/x:0\n\251\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/add_timing_signal_1d/get_timing_signal_1d/ToFloat_1:0\n\251\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/add_timing_signal_1d/get_timing_signal_1d/ToFloat_2:0\n\245\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/add_timing_signal_1d/get_timing_signal_1d/add/y:0\n\243\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/add_timing_signal_1d/get_timing_signal_1d/add:0\n\253\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/add_timing_signal_1d/get_timing_signal_1d/concat/axis:0\n\246\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/add_timing_signal_1d/get_timing_signal_1d/concat:0\n\243\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/add_timing_signal_1d/get_timing_signal_1d/mul:0\n\247\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/add_timing_signal_1d/get_timing_signal_1d/mul_1/x:0\n\245\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/add_timing_signal_1d/get_timing_signal_1d/mul_1:0\n\245\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/add_timing_signal_1d/get_timing_signal_1d/mul_2:0\n\253\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/add_timing_signal_1d/get_timing_signal_1d/range/delta:0\n\253\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/add_timing_signal_1d/get_timing_signal_1d/range/start:0\n\245\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/add_timing_signal_1d/get_timing_signal_1d/range:0\n\255\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/add_timing_signal_1d/get_timing_signal_1d/range_1/delta:0\n\255\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/add_timing_signal_1d/get_timing_signal_1d/range_1/limit:0\n\255\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/add_timing_signal_1d/get_timing_signal_1d/range_1/start:0\n\247\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/add_timing_signal_1d/get_timing_signal_1d/range_1:0\n\245\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/add_timing_signal_1d/get_timing_signal_1d/sub/y:0\n\243\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/add_timing_signal_1d/get_timing_signal_1d/sub:0\n\251\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/add_timing_signal_1d/get_timing_signal_1d/truediv/x:0\n\247\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/add_timing_signal_1d/get_timing_signal_1d/truediv:0\n\236\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/add_timing_signal_1d/strided_slice/stack:0\n\240\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/add_timing_signal_1d/strided_slice/stack_1:0\n\240\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/add_timing_signal_1d/strided_slice/stack_2:0\n\230\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/add_timing_signal_1d/strided_slice:0\n\240\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/add_timing_signal_1d/strided_slice_1/stack:0\n\242\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/add_timing_signal_1d/strided_slice_1/stack_1:0\n\242\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/add_timing_signal_1d/strided_slice_1/stack_2:0\n\232\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/add_timing_signal_1d/strided_slice_1:0\n\240\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/add_timing_signal_1d/strided_slice_2/stack:0\n\242\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/add_timing_signal_1d/strided_slice_2/stack_1:0\n\242\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/add_timing_signal_1d/strided_slice_2/stack_2:0\n\232\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/add_timing_signal_1d/strided_slice_2:0\n\240\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/add_timing_signal_1d/strided_slice_3/stack:0\n\242\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/add_timing_signal_1d/strided_slice_3/stack_1:0\n\242\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/add_timing_signal_1d/strided_slice_3/stack_2:0\n\232\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/add_timing_signal_1d/strided_slice_3:0\n\242\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/attention_bias_ignore_padding/ExpandDims/dim:0\n\236\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/attention_bias_ignore_padding/ExpandDims:0\n\244\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/attention_bias_ignore_padding/ExpandDims_1/dim:0\n\240\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/attention_bias_ignore_padding/ExpandDims_1:0\n\231\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/attention_bias_ignore_padding/mul/y:0\n\227\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/attention_bias_ignore_padding/mul:0\n\216\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/embedding_to_padding/Abs:0\n\222\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/embedding_to_padding/Equal/y:0\n\220\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/embedding_to_padding/Equal:0\n\240\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/embedding_to_padding/Sum/reduction_indices:0\n\216\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/embedding_to_padding/Sum:0\n\222\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/embedding_to_padding/ToFloat:0\n\236\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/attention_bias_to_padding/Less/y:0\n\234\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/attention_bias_to_padding/Less:0\n\237\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/attention_bias_to_padding/Squeeze:0\n\237\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/attention_bias_to_padding/ToFloat:0\n\230\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/ffn/ExpandDims/dim:0\n\224\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/ffn/ExpandDims:0\n\221\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/ffn/Reshape:0\n\233\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/ffn/Reshape_1/shape/2:0\n\231\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/ffn/Reshape_1/shape:0\n\223\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/ffn/Reshape_1:0\n\217\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/ffn/Shape:0\n\221\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/ffn/Squeeze:0\n\225\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/ffn/concat/axis:0\n\231\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/ffn/concat/values_0:0\n\231\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/ffn/concat/values_1:0\n\220\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/ffn/concat:0\n\227\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/ffn/conv1/BiasAdd:0\n\224\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/ffn/conv1/Relu:0\n\236\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/ffn/conv1/Tensordot/Cast:0\n\240\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/ffn/conv1/Tensordot/Cast_1:0\n\237\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/ffn/conv1/Tensordot/Const:0\n\241\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/ffn/conv1/Tensordot/Const_1:0\n\241\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/ffn/conv1/Tensordot/Const_2:0\n\247\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/ffn/conv1/Tensordot/GatherV2/axis:0\n\242\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/ffn/conv1/Tensordot/GatherV2:0\n\251\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/ffn/conv1/Tensordot/GatherV2_1/axis:0\n\244\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/ffn/conv1/Tensordot/GatherV2_1:0\n\250\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/ffn/conv1/Tensordot/GreaterEqual/y:0\n\246\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/ffn/conv1/Tensordot/GreaterEqual:0\n\240\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/ffn/conv1/Tensordot/Less/y:0\n\236\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/ffn/conv1/Tensordot/Less:0\n\242\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/ffn/conv1/Tensordot/ListDiff:0\n\242\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/ffn/conv1/Tensordot/ListDiff:1\n\240\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/ffn/conv1/Tensordot/MatMul:0\n\236\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/ffn/conv1/Tensordot/Prod:0\n\240\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/ffn/conv1/Tensordot/Prod_1:0\n\236\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/ffn/conv1/Tensordot/Rank:0\n\241\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/ffn/conv1/Tensordot/Reshape:0\n\251\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/ffn/conv1/Tensordot/Reshape_1/shape:0\n\243\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/ffn/conv1/Tensordot/Reshape_1:0\n\237\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/ffn/conv1/Tensordot/Shape:0\n\235\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/ffn/conv1/Tensordot/add:0\n\237\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/ffn/conv1/Tensordot/add_1:0\n\236\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/ffn/conv1/Tensordot/axes:0\n\245\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/ffn/conv1/Tensordot/concat/axis:0\n\240\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/ffn/conv1/Tensordot/concat:0\n\247\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/ffn/conv1/Tensordot/concat_1/axis:0\n\242\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/ffn/conv1/Tensordot/concat_1:0\n\247\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/ffn/conv1/Tensordot/concat_2/axis:0\n\242\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/ffn/conv1/Tensordot/concat_2:0\n\235\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/ffn/conv1/Tensordot/mul:0\n\237\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/ffn/conv1/Tensordot/mul_1:0\n\245\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/ffn/conv1/Tensordot/range/delta:0\n\245\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/ffn/conv1/Tensordot/range/start:0\n\237\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/ffn/conv1/Tensordot/range:0\n\237\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/ffn/conv1/Tensordot/stack:0\n\243\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/ffn/conv1/Tensordot/transpose:0\n\252\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/ffn/conv1/Tensordot/transpose_1/perm:0\n\245\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/ffn/conv1/Tensordot/transpose_1:0\n\231\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/ffn/conv1/Tensordot:0\n\227\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/ffn/conv2/BiasAdd:0\n\236\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/ffn/conv2/Tensordot/Cast:0\n\240\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/ffn/conv2/Tensordot/Cast_1:0\n\237\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/ffn/conv2/Tensordot/Const:0\n\241\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/ffn/conv2/Tensordot/Const_1:0\n\241\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/ffn/conv2/Tensordot/Const_2:0\n\247\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/ffn/conv2/Tensordot/GatherV2/axis:0\n\242\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/ffn/conv2/Tensordot/GatherV2:0\n\251\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/ffn/conv2/Tensordot/GatherV2_1/axis:0\n\244\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/ffn/conv2/Tensordot/GatherV2_1:0\n\250\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/ffn/conv2/Tensordot/GreaterEqual/y:0\n\246\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/ffn/conv2/Tensordot/GreaterEqual:0\n\240\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/ffn/conv2/Tensordot/Less/y:0\n\236\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/ffn/conv2/Tensordot/Less:0\n\242\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/ffn/conv2/Tensordot/ListDiff:0\n\242\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/ffn/conv2/Tensordot/ListDiff:1\n\240\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/ffn/conv2/Tensordot/MatMul:0\n\236\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/ffn/conv2/Tensordot/Prod:0\n\240\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/ffn/conv2/Tensordot/Prod_1:0\n\236\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/ffn/conv2/Tensordot/Rank:0\n\241\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/ffn/conv2/Tensordot/Reshape:0\n\251\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/ffn/conv2/Tensordot/Reshape_1/shape:0\n\243\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/ffn/conv2/Tensordot/Reshape_1:0\n\237\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/ffn/conv2/Tensordot/Shape:0\n\235\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/ffn/conv2/Tensordot/add:0\n\237\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/ffn/conv2/Tensordot/add_1:0\n\236\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/ffn/conv2/Tensordot/axes:0\n\245\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/ffn/conv2/Tensordot/concat/axis:0\n\240\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/ffn/conv2/Tensordot/concat:0\n\247\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/ffn/conv2/Tensordot/concat_1/axis:0\n\242\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/ffn/conv2/Tensordot/concat_1:0\n\247\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/ffn/conv2/Tensordot/concat_2/axis:0\n\242\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/ffn/conv2/Tensordot/concat_2:0\n\235\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/ffn/conv2/Tensordot/mul:0\n\237\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/ffn/conv2/Tensordot/mul_1:0\n\245\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/ffn/conv2/Tensordot/range/delta:0\n\245\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/ffn/conv2/Tensordot/range/start:0\n\237\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/ffn/conv2/Tensordot/range:0\n\237\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/ffn/conv2/Tensordot/stack:0\n\243\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/ffn/conv2/Tensordot/transpose:0\n\252\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/ffn/conv2/Tensordot/transpose_1/perm:0\n\245\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/ffn/conv2/Tensordot/transpose_1:0\n\231\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/ffn/conv2/Tensordot:0\n\237\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/ffn/layer_postprocess/add:0\n\244\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/ffn/layer_prepostprocess/Shape:0\n\257\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/ffn/layer_prepostprocess/layer_norm/Const:0\n\300\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/ffn/layer_prepostprocess/layer_norm/Mean/reduction_indices:0\n\256\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/ffn/layer_prepostprocess/layer_norm/Mean:0\n\302\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/ffn/layer_prepostprocess/layer_norm/Mean_1/reduction_indices:0\n\260\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/ffn/layer_prepostprocess/layer_norm/Mean_1:0\n\257\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/ffn/layer_prepostprocess/layer_norm/Rsqrt:0\n\260\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/ffn/layer_prepostprocess/layer_norm/Square:0\n\255\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/ffn/layer_prepostprocess/layer_norm/add:0\n\257\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/ffn/layer_prepostprocess/layer_norm/add_1:0\n\255\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/ffn/layer_prepostprocess/layer_norm/mul:0\n\257\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/ffn/layer_prepostprocess/layer_norm/mul_1:0\n\255\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/ffn/layer_prepostprocess/layer_norm/sub:0\n\257\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/ffn/layer_prepostprocess/layer_norm/sub_1:0\n\262\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/ffn/layer_prepostprocess/strided_slice/stack:0\n\264\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/ffn/layer_prepostprocess/strided_slice/stack_1:0\n\264\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/ffn/layer_prepostprocess/strided_slice/stack_2:0\n\254\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/ffn/layer_prepostprocess/strided_slice:0\n\264\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/ffn/layer_prepostprocess/strided_slice_1/stack:0\n\266\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/ffn/layer_prepostprocess/strided_slice_1/stack_1:0\n\266\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/ffn/layer_prepostprocess/strided_slice_1/stack_2:0\n\256\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/ffn/layer_prepostprocess/strided_slice_1:0\n\244\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/ffn/pad_reduce/remove/GatherNd:0\n\246\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/ffn/pad_reduce/restore/ScatterNd:0\n\242\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/ffn/pad_reduce/restore/Shape:0\n\250\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/ffn/pad_reduce/restore/concat/axis:0\n\243\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/ffn/pad_reduce/restore/concat:0\n\260\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/ffn/pad_reduce/restore/strided_slice/stack:0\n\262\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/ffn/pad_reduce/restore/strided_slice/stack_1:0\n\262\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/ffn/pad_reduce/restore/strided_slice/stack_2:0\n\252\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/ffn/pad_reduce/restore/strided_slice:0\n\235\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/ffn/strided_slice/stack:0\n\237\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/ffn/strided_slice/stack_1:0\n\237\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/ffn/strided_slice/stack_2:0\n\227\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/ffn/strided_slice:0\n\237\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/ffn/strided_slice_1/stack:0\n\241\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/ffn/strided_slice_1/stack_1:0\n\241\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/ffn/strided_slice_1/stack_2:0\n\231\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/ffn/strided_slice_1:0\n\252\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/layer_postprocess/add:0\n\257\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/layer_prepostprocess/Shape:0\n\272\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/layer_prepostprocess/layer_norm/Const:0\n\313\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/layer_prepostprocess/layer_norm/Mean/reduction_indices:0\n\271\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/layer_prepostprocess/layer_norm/Mean:0\n\315\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/layer_prepostprocess/layer_norm/Mean_1/reduction_indices:0\n\273\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/layer_prepostprocess/layer_norm/Mean_1:0\n\272\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/layer_prepostprocess/layer_norm/Rsqrt:0\n\273\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/layer_prepostprocess/layer_norm/Square:0\n\270\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/layer_prepostprocess/layer_norm/add:0\n\272\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/layer_prepostprocess/layer_norm/add_1:0\n\270\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/layer_prepostprocess/layer_norm/mul:0\n\272\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/layer_prepostprocess/layer_norm/mul_1:0\n\270\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/layer_prepostprocess/layer_norm/sub:0\n\272\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/layer_prepostprocess/layer_norm/sub_1:0\n\275\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/layer_prepostprocess/strided_slice/stack:0\n\277\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/layer_prepostprocess/strided_slice/stack_1:0\n\277\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/layer_prepostprocess/strided_slice/stack_2:0\n\267\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/layer_prepostprocess/strided_slice:0\n\277\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/layer_prepostprocess/strided_slice_1/stack:0\n\301\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/layer_prepostprocess/strided_slice_1/stack_1:0\n\301\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/layer_prepostprocess/strided_slice_1/stack_2:0\n\271\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/layer_prepostprocess/strided_slice_1:0\n\342\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/combine_heads/combine_last_two_dimensions/Reshape/shape/2:0\n\340\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/combine_heads/combine_last_two_dimensions/Reshape/shape:0\n\332\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/combine_heads/combine_last_two_dimensions/Reshape:0\n\330\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/combine_heads/combine_last_two_dimensions/Shape:0\n\346\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/combine_heads/combine_last_two_dimensions/strided_slice/stack:0\n\350\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/combine_heads/combine_last_two_dimensions/strided_slice/stack_1:0\n\350\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/combine_heads/combine_last_two_dimensions/strided_slice/stack_2:0\n\340\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/combine_heads/combine_last_two_dimensions/strided_slice:0\n\350\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/combine_heads/combine_last_two_dimensions/strided_slice_1/stack:0\n\352\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/combine_heads/combine_last_two_dimensions/strided_slice_1/stack_1:0\n\352\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/combine_heads/combine_last_two_dimensions/strided_slice_1/stack_2:0\n\342\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/combine_heads/combine_last_two_dimensions/strided_slice_1:0\n\305\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/combine_heads/transpose/perm:0\n\300\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/combine_heads/transpose:0\n\311\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/dot_product_attention/FloorMod/x:0\n\311\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/dot_product_attention/FloorMod/y:0\n\307\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/dot_product_attention/FloorMod:0\n\305\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/dot_product_attention/MatMul:0\n\307\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/dot_product_attention/MatMul_1:0\n\324\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/dot_product_attention/Max/reduction_indices:0\n\302\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/dot_product_attention/Max:0\n\317\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/dot_product_attention/Pad/paddings/0_1:0\n\317\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/dot_product_attention/Pad/paddings/1_1:0\n\317\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/dot_product_attention/Pad/paddings/2_1:0\n\317\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/dot_product_attention/Pad/paddings/3/0:0\n\315\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/dot_product_attention/Pad/paddings/3:0\n\313\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/dot_product_attention/Pad/paddings:0\n\302\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/dot_product_attention/Pad:0\n\304\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/dot_product_attention/Pow/y:0\n\302\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/dot_product_attention/Pow:0\n\304\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/dot_product_attention/Shape:0\n\302\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/dot_product_attention/add:0\n\314\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/dot_product_attention/attention/tag:0\n\310\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/dot_product_attention/attention:0\n\320\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/dot_product_attention/attention_weights:0\n\343\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/dot_product_attention/split_last_dimension/Reshape/shape/3:0\n\343\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/dot_product_attention/split_last_dimension/Reshape/shape/4:0\n\341\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/dot_product_attention/split_last_dimension/Reshape/shape:0\n\333\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/dot_product_attention/split_last_dimension/Reshape:0\n\331\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/dot_product_attention/split_last_dimension/Shape:0\n\347\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/dot_product_attention/split_last_dimension/strided_slice/stack:0\n\351\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/dot_product_attention/split_last_dimension/strided_slice/stack_1:0\n\351\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/dot_product_attention/split_last_dimension/strided_slice/stack_2:0\n\341\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/dot_product_attention/split_last_dimension/strided_slice:0\n\351\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/dot_product_attention/split_last_dimension/strided_slice_1/stack:0\n\353\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/dot_product_attention/split_last_dimension/strided_slice_1/stack_1:0\n\353\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/dot_product_attention/split_last_dimension/strided_slice_1/stack_2:0\n\343\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/dot_product_attention/split_last_dimension/strided_slice_1:0\n\351\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/dot_product_attention/split_last_dimension/strided_slice_2/stack:0\n\353\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/dot_product_attention/split_last_dimension/strided_slice_2/stack_1:0\n\353\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/dot_product_attention/split_last_dimension/strided_slice_2/stack_2:0\n\343\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/dot_product_attention/split_last_dimension/strided_slice_2:0\n\322\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/dot_product_attention/strided_slice/stack:0\n\324\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/dot_product_attention/strided_slice/stack_1:0\n\324\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/dot_product_attention/strided_slice/stack_2:0\n\314\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/dot_product_attention/strided_slice:0\n\324\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/dot_product_attention/strided_slice_1/stack:0\n\326\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/dot_product_attention/strided_slice_1/stack_1:0\n\326\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/dot_product_attention/strided_slice_1/stack_2:0\n\316\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/dot_product_attention/strided_slice_1:0\n\324\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/dot_product_attention/strided_slice_2/stack:0\n\326\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/dot_product_attention/strided_slice_2/stack_1:0\n\326\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/dot_product_attention/strided_slice_2/stack_2:0\n\316\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/dot_product_attention/strided_slice_2:0\n\315\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/dot_product_attention/transpose/perm:0\n\310\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/dot_product_attention/transpose:0\n\271\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/k/Tensordot/Cast:0\n\273\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/k/Tensordot/Cast_1:0\n\272\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/k/Tensordot/Const:0\n\274\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/k/Tensordot/Const_1:0\n\274\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/k/Tensordot/Const_2:0\n\302\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/k/Tensordot/GatherV2/axis:0\n\275\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/k/Tensordot/GatherV2:0\n\304\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/k/Tensordot/GatherV2_1/axis:0\n\277\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/k/Tensordot/GatherV2_1:0\n\303\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/k/Tensordot/GreaterEqual/y:0\n\301\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/k/Tensordot/GreaterEqual:0\n\273\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/k/Tensordot/Less/y:0\n\271\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/k/Tensordot/Less:0\n\275\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/k/Tensordot/ListDiff:0\n\275\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/k/Tensordot/ListDiff:1\n\273\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/k/Tensordot/MatMul:0\n\271\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/k/Tensordot/Prod:0\n\273\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/k/Tensordot/Prod_1:0\n\271\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/k/Tensordot/Rank:0\n\274\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/k/Tensordot/Reshape:0\n\304\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/k/Tensordot/Reshape_1/shape:0\n\276\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/k/Tensordot/Reshape_1:0\n\272\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/k/Tensordot/Shape:0\n\270\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/k/Tensordot/add:0\n\272\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/k/Tensordot/add_1:0\n\271\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/k/Tensordot/axes:0\n\300\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/k/Tensordot/concat/axis:0\n\273\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/k/Tensordot/concat:0\n\302\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/k/Tensordot/concat_1/axis:0\n\275\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/k/Tensordot/concat_1:0\n\302\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/k/Tensordot/concat_2/axis:0\n\275\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/k/Tensordot/concat_2:0\n\270\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/k/Tensordot/mul:0\n\272\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/k/Tensordot/mul_1:0\n\300\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/k/Tensordot/range/delta:0\n\300\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/k/Tensordot/range/start:0\n\272\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/k/Tensordot/range:0\n\272\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/k/Tensordot/stack:0\n\276\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/k/Tensordot/transpose:0\n\305\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/k/Tensordot/transpose_1/perm:0\n\300\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/k/Tensordot/transpose_1:0\n\264\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/k/Tensordot:0\n\256\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/mul/y:0\n\254\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/mul:0\n\310\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/output_transform/Tensordot/Cast:0\n\312\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/output_transform/Tensordot/Cast_1:0\n\311\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/output_transform/Tensordot/Const:0\n\313\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/output_transform/Tensordot/Const_1:0\n\313\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/output_transform/Tensordot/Const_2:0\n\321\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/output_transform/Tensordot/GatherV2/axis:0\n\314\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/output_transform/Tensordot/GatherV2:0\n\323\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/output_transform/Tensordot/GatherV2_1/axis:0\n\316\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/output_transform/Tensordot/GatherV2_1:0\n\322\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/output_transform/Tensordot/GreaterEqual/y:0\n\320\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/output_transform/Tensordot/GreaterEqual:0\n\312\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/output_transform/Tensordot/Less/y:0\n\310\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/output_transform/Tensordot/Less:0\n\314\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/output_transform/Tensordot/ListDiff:0\n\314\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/output_transform/Tensordot/ListDiff:1\n\312\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/output_transform/Tensordot/MatMul:0\n\310\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/output_transform/Tensordot/Prod:0\n\312\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/output_transform/Tensordot/Prod_1:0\n\310\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/output_transform/Tensordot/Rank:0\n\313\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/output_transform/Tensordot/Reshape:0\n\323\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/output_transform/Tensordot/Reshape_1/shape:0\n\315\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/output_transform/Tensordot/Reshape_1:0\n\311\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/output_transform/Tensordot/Shape:0\n\307\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/output_transform/Tensordot/add:0\n\311\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/output_transform/Tensordot/add_1:0\n\310\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/output_transform/Tensordot/axes:0\n\317\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/output_transform/Tensordot/concat/axis:0\n\312\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/output_transform/Tensordot/concat:0\n\321\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/output_transform/Tensordot/concat_1/axis:0\n\314\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/output_transform/Tensordot/concat_1:0\n\321\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/output_transform/Tensordot/concat_2/axis:0\n\314\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/output_transform/Tensordot/concat_2:0\n\307\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/output_transform/Tensordot/mul:0\n\311\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/output_transform/Tensordot/mul_1:0\n\317\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/output_transform/Tensordot/range/delta:0\n\317\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/output_transform/Tensordot/range/start:0\n\311\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/output_transform/Tensordot/range:0\n\311\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/output_transform/Tensordot/stack:0\n\315\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/output_transform/Tensordot/transpose:0\n\324\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/output_transform/Tensordot/transpose_1/perm:0\n\317\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/output_transform/Tensordot/transpose_1:0\n\303\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/output_transform/Tensordot:0\n\271\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/q/Tensordot/Cast:0\n\273\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/q/Tensordot/Cast_1:0\n\272\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/q/Tensordot/Const:0\n\274\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/q/Tensordot/Const_1:0\n\274\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/q/Tensordot/Const_2:0\n\302\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/q/Tensordot/GatherV2/axis:0\n\275\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/q/Tensordot/GatherV2:0\n\304\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/q/Tensordot/GatherV2_1/axis:0\n\277\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/q/Tensordot/GatherV2_1:0\n\303\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/q/Tensordot/GreaterEqual/y:0\n\301\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/q/Tensordot/GreaterEqual:0\n\273\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/q/Tensordot/Less/y:0\n\271\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/q/Tensordot/Less:0\n\275\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/q/Tensordot/ListDiff:0\n\275\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/q/Tensordot/ListDiff:1\n\273\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/q/Tensordot/MatMul:0\n\271\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/q/Tensordot/Prod:0\n\273\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/q/Tensordot/Prod_1:0\n\271\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/q/Tensordot/Rank:0\n\274\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/q/Tensordot/Reshape:0\n\304\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/q/Tensordot/Reshape_1/shape:0\n\276\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/q/Tensordot/Reshape_1:0\n\272\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/q/Tensordot/Shape:0\n\270\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/q/Tensordot/add:0\n\272\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/q/Tensordot/add_1:0\n\271\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/q/Tensordot/axes:0\n\300\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/q/Tensordot/concat/axis:0\n\273\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/q/Tensordot/concat:0\n\302\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/q/Tensordot/concat_1/axis:0\n\275\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/q/Tensordot/concat_1:0\n\302\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/q/Tensordot/concat_2/axis:0\n\275\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/q/Tensordot/concat_2:0\n\270\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/q/Tensordot/mul:0\n\272\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/q/Tensordot/mul_1:0\n\300\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/q/Tensordot/range/delta:0\n\300\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/q/Tensordot/range/start:0\n\272\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/q/Tensordot/range:0\n\272\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/q/Tensordot/stack:0\n\276\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/q/Tensordot/transpose:0\n\305\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/q/Tensordot/transpose_1/perm:0\n\300\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/q/Tensordot/transpose_1:0\n\264\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/q/Tensordot:0\n\331\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/split_heads/split_last_dimension/Reshape/shape/2:0\n\331\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/split_heads/split_last_dimension/Reshape/shape/3:0\n\327\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/split_heads/split_last_dimension/Reshape/shape:0\n\321\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/split_heads/split_last_dimension/Reshape:0\n\317\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/split_heads/split_last_dimension/Shape:0\n\335\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/split_heads/split_last_dimension/strided_slice/stack:0\n\337\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/split_heads/split_last_dimension/strided_slice/stack_1:0\n\337\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/split_heads/split_last_dimension/strided_slice/stack_2:0\n\327\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/split_heads/split_last_dimension/strided_slice:0\n\337\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/split_heads/split_last_dimension/strided_slice_1/stack:0\n\341\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/split_heads/split_last_dimension/strided_slice_1/stack_1:0\n\341\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/split_heads/split_last_dimension/strided_slice_1/stack_2:0\n\331\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/split_heads/split_last_dimension/strided_slice_1:0\n\303\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/split_heads/transpose/perm:0\n\276\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/split_heads/transpose:0\n\333\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/split_heads_1/split_last_dimension/Reshape/shape/2:0\n\333\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/split_heads_1/split_last_dimension/Reshape/shape/3:0\n\331\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/split_heads_1/split_last_dimension/Reshape/shape:0\n\323\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/split_heads_1/split_last_dimension/Reshape:0\n\321\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/split_heads_1/split_last_dimension/Shape:0\n\337\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/split_heads_1/split_last_dimension/strided_slice/stack:0\n\341\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/split_heads_1/split_last_dimension/strided_slice/stack_1:0\n\341\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/split_heads_1/split_last_dimension/strided_slice/stack_2:0\n\331\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/split_heads_1/split_last_dimension/strided_slice:0\n\341\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/split_heads_1/split_last_dimension/strided_slice_1/stack:0\n\343\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/split_heads_1/split_last_dimension/strided_slice_1/stack_1:0\n\343\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/split_heads_1/split_last_dimension/strided_slice_1/stack_2:0\n\333\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/split_heads_1/split_last_dimension/strided_slice_1:0\n\305\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/split_heads_1/transpose/perm:0\n\300\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/split_heads_1/transpose:0\n\333\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/split_heads_2/split_last_dimension/Reshape/shape/2:0\n\333\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/split_heads_2/split_last_dimension/Reshape/shape/3:0\n\331\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/split_heads_2/split_last_dimension/Reshape/shape:0\n\323\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/split_heads_2/split_last_dimension/Reshape:0\n\321\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/split_heads_2/split_last_dimension/Shape:0\n\337\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/split_heads_2/split_last_dimension/strided_slice/stack:0\n\341\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/split_heads_2/split_last_dimension/strided_slice/stack_1:0\n\341\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/split_heads_2/split_last_dimension/strided_slice/stack_2:0\n\331\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/split_heads_2/split_last_dimension/strided_slice:0\n\341\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/split_heads_2/split_last_dimension/strided_slice_1/stack:0\n\343\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/split_heads_2/split_last_dimension/strided_slice_1/stack_1:0\n\343\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/split_heads_2/split_last_dimension/strided_slice_1/stack_2:0\n\333\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/split_heads_2/split_last_dimension/strided_slice_1:0\n\305\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/split_heads_2/transpose/perm:0\n\300\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/split_heads_2/transpose:0\n\271\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/v/Tensordot/Cast:0\n\273\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/v/Tensordot/Cast_1:0\n\272\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/v/Tensordot/Const:0\n\274\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/v/Tensordot/Const_1:0\n\274\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/v/Tensordot/Const_2:0\n\302\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/v/Tensordot/GatherV2/axis:0\n\275\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/v/Tensordot/GatherV2:0\n\304\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/v/Tensordot/GatherV2_1/axis:0\n\277\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/v/Tensordot/GatherV2_1:0\n\303\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/v/Tensordot/GreaterEqual/y:0\n\301\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/v/Tensordot/GreaterEqual:0\n\273\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/v/Tensordot/Less/y:0\n\271\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/v/Tensordot/Less:0\n\275\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/v/Tensordot/ListDiff:0\n\275\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/v/Tensordot/ListDiff:1\n\273\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/v/Tensordot/MatMul:0\n\271\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/v/Tensordot/Prod:0\n\273\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/v/Tensordot/Prod_1:0\n\271\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/v/Tensordot/Rank:0\n\274\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/v/Tensordot/Reshape:0\n\304\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/v/Tensordot/Reshape_1/shape:0\n\276\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/v/Tensordot/Reshape_1:0\n\272\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/v/Tensordot/Shape:0\n\270\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/v/Tensordot/add:0\n\272\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/v/Tensordot/add_1:0\n\271\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/v/Tensordot/axes:0\n\300\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/v/Tensordot/concat/axis:0\n\273\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/v/Tensordot/concat:0\n\302\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/v/Tensordot/concat_1/axis:0\n\275\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/v/Tensordot/concat_1:0\n\302\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/v/Tensordot/concat_2/axis:0\n\275\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/v/Tensordot/concat_2:0\n\270\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/v/Tensordot/mul:0\n\272\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/v/Tensordot/mul_1:0\n\300\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/v/Tensordot/range/delta:0\n\300\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/v/Tensordot/range/start:0\n\272\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/v/Tensordot/range:0\n\272\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/v/Tensordot/stack:0\n\276\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/v/Tensordot/transpose:0\n\305\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/v/Tensordot/transpose_1/perm:0\n\300\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/v/Tensordot/transpose_1:0\n\264\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_0/self_attention/multihead_attention/v/Tensordot:0\n\230\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/ffn/ExpandDims/dim:0\n\224\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/ffn/ExpandDims:0\n\221\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/ffn/Reshape:0\n\233\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/ffn/Reshape_1/shape/2:0\n\231\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/ffn/Reshape_1/shape:0\n\223\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/ffn/Reshape_1:0\n\217\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/ffn/Shape:0\n\221\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/ffn/Squeeze:0\n\225\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/ffn/concat/axis:0\n\231\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/ffn/concat/values_0:0\n\231\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/ffn/concat/values_1:0\n\220\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/ffn/concat:0\n\227\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/ffn/conv1/BiasAdd:0\n\224\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/ffn/conv1/Relu:0\n\236\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/ffn/conv1/Tensordot/Cast:0\n\240\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/ffn/conv1/Tensordot/Cast_1:0\n\237\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/ffn/conv1/Tensordot/Const:0\n\241\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/ffn/conv1/Tensordot/Const_1:0\n\241\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/ffn/conv1/Tensordot/Const_2:0\n\247\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/ffn/conv1/Tensordot/GatherV2/axis:0\n\242\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/ffn/conv1/Tensordot/GatherV2:0\n\251\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/ffn/conv1/Tensordot/GatherV2_1/axis:0\n\244\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/ffn/conv1/Tensordot/GatherV2_1:0\n\250\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/ffn/conv1/Tensordot/GreaterEqual/y:0\n\246\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/ffn/conv1/Tensordot/GreaterEqual:0\n\240\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/ffn/conv1/Tensordot/Less/y:0\n\236\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/ffn/conv1/Tensordot/Less:0\n\242\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/ffn/conv1/Tensordot/ListDiff:0\n\242\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/ffn/conv1/Tensordot/ListDiff:1\n\240\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/ffn/conv1/Tensordot/MatMul:0\n\236\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/ffn/conv1/Tensordot/Prod:0\n\240\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/ffn/conv1/Tensordot/Prod_1:0\n\236\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/ffn/conv1/Tensordot/Rank:0\n\241\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/ffn/conv1/Tensordot/Reshape:0\n\251\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/ffn/conv1/Tensordot/Reshape_1/shape:0\n\243\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/ffn/conv1/Tensordot/Reshape_1:0\n\237\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/ffn/conv1/Tensordot/Shape:0\n\235\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/ffn/conv1/Tensordot/add:0\n\237\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/ffn/conv1/Tensordot/add_1:0\n\236\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/ffn/conv1/Tensordot/axes:0\n\245\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/ffn/conv1/Tensordot/concat/axis:0\n\240\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/ffn/conv1/Tensordot/concat:0\n\247\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/ffn/conv1/Tensordot/concat_1/axis:0\n\242\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/ffn/conv1/Tensordot/concat_1:0\n\247\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/ffn/conv1/Tensordot/concat_2/axis:0\n\242\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/ffn/conv1/Tensordot/concat_2:0\n\235\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/ffn/conv1/Tensordot/mul:0\n\237\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/ffn/conv1/Tensordot/mul_1:0\n\245\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/ffn/conv1/Tensordot/range/delta:0\n\245\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/ffn/conv1/Tensordot/range/start:0\n\237\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/ffn/conv1/Tensordot/range:0\n\237\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/ffn/conv1/Tensordot/stack:0\n\243\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/ffn/conv1/Tensordot/transpose:0\n\252\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/ffn/conv1/Tensordot/transpose_1/perm:0\n\245\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/ffn/conv1/Tensordot/transpose_1:0\n\231\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/ffn/conv1/Tensordot:0\n\227\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/ffn/conv2/BiasAdd:0\n\236\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/ffn/conv2/Tensordot/Cast:0\n\240\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/ffn/conv2/Tensordot/Cast_1:0\n\237\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/ffn/conv2/Tensordot/Const:0\n\241\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/ffn/conv2/Tensordot/Const_1:0\n\241\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/ffn/conv2/Tensordot/Const_2:0\n\247\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/ffn/conv2/Tensordot/GatherV2/axis:0\n\242\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/ffn/conv2/Tensordot/GatherV2:0\n\251\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/ffn/conv2/Tensordot/GatherV2_1/axis:0\n\244\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/ffn/conv2/Tensordot/GatherV2_1:0\n\250\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/ffn/conv2/Tensordot/GreaterEqual/y:0\n\246\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/ffn/conv2/Tensordot/GreaterEqual:0\n\240\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/ffn/conv2/Tensordot/Less/y:0\n\236\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/ffn/conv2/Tensordot/Less:0\n\242\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/ffn/conv2/Tensordot/ListDiff:0\n\242\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/ffn/conv2/Tensordot/ListDiff:1\n\240\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/ffn/conv2/Tensordot/MatMul:0\n\236\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/ffn/conv2/Tensordot/Prod:0\n\240\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/ffn/conv2/Tensordot/Prod_1:0\n\236\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/ffn/conv2/Tensordot/Rank:0\n\241\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/ffn/conv2/Tensordot/Reshape:0\n\251\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/ffn/conv2/Tensordot/Reshape_1/shape:0\n\243\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/ffn/conv2/Tensordot/Reshape_1:0\n\237\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/ffn/conv2/Tensordot/Shape:0\n\235\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/ffn/conv2/Tensordot/add:0\n\237\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/ffn/conv2/Tensordot/add_1:0\n\236\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/ffn/conv2/Tensordot/axes:0\n\245\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/ffn/conv2/Tensordot/concat/axis:0\n\240\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/ffn/conv2/Tensordot/concat:0\n\247\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/ffn/conv2/Tensordot/concat_1/axis:0\n\242\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/ffn/conv2/Tensordot/concat_1:0\n\247\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/ffn/conv2/Tensordot/concat_2/axis:0\n\242\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/ffn/conv2/Tensordot/concat_2:0\n\235\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/ffn/conv2/Tensordot/mul:0\n\237\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/ffn/conv2/Tensordot/mul_1:0\n\245\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/ffn/conv2/Tensordot/range/delta:0\n\245\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/ffn/conv2/Tensordot/range/start:0\n\237\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/ffn/conv2/Tensordot/range:0\n\237\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/ffn/conv2/Tensordot/stack:0\n\243\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/ffn/conv2/Tensordot/transpose:0\n\252\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/ffn/conv2/Tensordot/transpose_1/perm:0\n\245\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/ffn/conv2/Tensordot/transpose_1:0\n\231\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/ffn/conv2/Tensordot:0\n\237\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/ffn/layer_postprocess/add:0\n\244\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/ffn/layer_prepostprocess/Shape:0\n\257\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/ffn/layer_prepostprocess/layer_norm/Const:0\n\300\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/ffn/layer_prepostprocess/layer_norm/Mean/reduction_indices:0\n\256\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/ffn/layer_prepostprocess/layer_norm/Mean:0\n\302\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/ffn/layer_prepostprocess/layer_norm/Mean_1/reduction_indices:0\n\260\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/ffn/layer_prepostprocess/layer_norm/Mean_1:0\n\257\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/ffn/layer_prepostprocess/layer_norm/Rsqrt:0\n\260\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/ffn/layer_prepostprocess/layer_norm/Square:0\n\255\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/ffn/layer_prepostprocess/layer_norm/add:0\n\257\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/ffn/layer_prepostprocess/layer_norm/add_1:0\n\255\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/ffn/layer_prepostprocess/layer_norm/mul:0\n\257\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/ffn/layer_prepostprocess/layer_norm/mul_1:0\n\255\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/ffn/layer_prepostprocess/layer_norm/sub:0\n\257\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/ffn/layer_prepostprocess/layer_norm/sub_1:0\n\262\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/ffn/layer_prepostprocess/strided_slice/stack:0\n\264\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/ffn/layer_prepostprocess/strided_slice/stack_1:0\n\264\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/ffn/layer_prepostprocess/strided_slice/stack_2:0\n\254\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/ffn/layer_prepostprocess/strided_slice:0\n\264\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/ffn/layer_prepostprocess/strided_slice_1/stack:0\n\266\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/ffn/layer_prepostprocess/strided_slice_1/stack_1:0\n\266\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/ffn/layer_prepostprocess/strided_slice_1/stack_2:0\n\256\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/ffn/layer_prepostprocess/strided_slice_1:0\n\244\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/ffn/pad_reduce/remove/GatherNd:0\n\246\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/ffn/pad_reduce/restore/ScatterNd:0\n\242\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/ffn/pad_reduce/restore/Shape:0\n\250\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/ffn/pad_reduce/restore/concat/axis:0\n\243\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/ffn/pad_reduce/restore/concat:0\n\260\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/ffn/pad_reduce/restore/strided_slice/stack:0\n\262\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/ffn/pad_reduce/restore/strided_slice/stack_1:0\n\262\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/ffn/pad_reduce/restore/strided_slice/stack_2:0\n\252\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/ffn/pad_reduce/restore/strided_slice:0\n\235\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/ffn/strided_slice/stack:0\n\237\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/ffn/strided_slice/stack_1:0\n\237\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/ffn/strided_slice/stack_2:0\n\227\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/ffn/strided_slice:0\n\237\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/ffn/strided_slice_1/stack:0\n\241\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/ffn/strided_slice_1/stack_1:0\n\241\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/ffn/strided_slice_1/stack_2:0\n\231\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/ffn/strided_slice_1:0\n\252\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/layer_postprocess/add:0\n\257\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/layer_prepostprocess/Shape:0\n\272\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/layer_prepostprocess/layer_norm/Const:0\n\313\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/layer_prepostprocess/layer_norm/Mean/reduction_indices:0\n\271\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/layer_prepostprocess/layer_norm/Mean:0\n\315\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/layer_prepostprocess/layer_norm/Mean_1/reduction_indices:0\n\273\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/layer_prepostprocess/layer_norm/Mean_1:0\n\272\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/layer_prepostprocess/layer_norm/Rsqrt:0\n\273\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/layer_prepostprocess/layer_norm/Square:0\n\270\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/layer_prepostprocess/layer_norm/add:0\n\272\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/layer_prepostprocess/layer_norm/add_1:0\n\270\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/layer_prepostprocess/layer_norm/mul:0\n\272\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/layer_prepostprocess/layer_norm/mul_1:0\n\270\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/layer_prepostprocess/layer_norm/sub:0\n\272\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/layer_prepostprocess/layer_norm/sub_1:0\n\275\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/layer_prepostprocess/strided_slice/stack:0\n\277\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/layer_prepostprocess/strided_slice/stack_1:0\n\277\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/layer_prepostprocess/strided_slice/stack_2:0\n\267\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/layer_prepostprocess/strided_slice:0\n\277\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/layer_prepostprocess/strided_slice_1/stack:0\n\301\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/layer_prepostprocess/strided_slice_1/stack_1:0\n\301\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/layer_prepostprocess/strided_slice_1/stack_2:0\n\271\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/layer_prepostprocess/strided_slice_1:0\n\342\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/combine_heads/combine_last_two_dimensions/Reshape/shape/2:0\n\340\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/combine_heads/combine_last_two_dimensions/Reshape/shape:0\n\332\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/combine_heads/combine_last_two_dimensions/Reshape:0\n\330\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/combine_heads/combine_last_two_dimensions/Shape:0\n\346\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/combine_heads/combine_last_two_dimensions/strided_slice/stack:0\n\350\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/combine_heads/combine_last_two_dimensions/strided_slice/stack_1:0\n\350\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/combine_heads/combine_last_two_dimensions/strided_slice/stack_2:0\n\340\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/combine_heads/combine_last_two_dimensions/strided_slice:0\n\350\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/combine_heads/combine_last_two_dimensions/strided_slice_1/stack:0\n\352\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/combine_heads/combine_last_two_dimensions/strided_slice_1/stack_1:0\n\352\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/combine_heads/combine_last_two_dimensions/strided_slice_1/stack_2:0\n\342\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/combine_heads/combine_last_two_dimensions/strided_slice_1:0\n\305\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/combine_heads/transpose/perm:0\n\300\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/combine_heads/transpose:0\n\311\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/dot_product_attention/FloorMod/x:0\n\311\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/dot_product_attention/FloorMod/y:0\n\307\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/dot_product_attention/FloorMod:0\n\305\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/dot_product_attention/MatMul:0\n\307\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/dot_product_attention/MatMul_1:0\n\324\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/dot_product_attention/Max/reduction_indices:0\n\302\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/dot_product_attention/Max:0\n\317\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/dot_product_attention/Pad/paddings/0_1:0\n\317\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/dot_product_attention/Pad/paddings/1_1:0\n\317\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/dot_product_attention/Pad/paddings/2_1:0\n\317\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/dot_product_attention/Pad/paddings/3/0:0\n\315\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/dot_product_attention/Pad/paddings/3:0\n\313\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/dot_product_attention/Pad/paddings:0\n\302\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/dot_product_attention/Pad:0\n\304\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/dot_product_attention/Pow/y:0\n\302\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/dot_product_attention/Pow:0\n\304\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/dot_product_attention/Shape:0\n\302\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/dot_product_attention/add:0\n\314\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/dot_product_attention/attention/tag:0\n\310\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/dot_product_attention/attention:0\n\320\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/dot_product_attention/attention_weights:0\n\343\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/dot_product_attention/split_last_dimension/Reshape/shape/3:0\n\343\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/dot_product_attention/split_last_dimension/Reshape/shape/4:0\n\341\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/dot_product_attention/split_last_dimension/Reshape/shape:0\n\333\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/dot_product_attention/split_last_dimension/Reshape:0\n\331\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/dot_product_attention/split_last_dimension/Shape:0\n\347\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/dot_product_attention/split_last_dimension/strided_slice/stack:0\n\351\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/dot_product_attention/split_last_dimension/strided_slice/stack_1:0\n\351\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/dot_product_attention/split_last_dimension/strided_slice/stack_2:0\n\341\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/dot_product_attention/split_last_dimension/strided_slice:0\n\351\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/dot_product_attention/split_last_dimension/strided_slice_1/stack:0\n\353\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/dot_product_attention/split_last_dimension/strided_slice_1/stack_1:0\n\353\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/dot_product_attention/split_last_dimension/strided_slice_1/stack_2:0\n\343\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/dot_product_attention/split_last_dimension/strided_slice_1:0\n\351\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/dot_product_attention/split_last_dimension/strided_slice_2/stack:0\n\353\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/dot_product_attention/split_last_dimension/strided_slice_2/stack_1:0\n\353\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/dot_product_attention/split_last_dimension/strided_slice_2/stack_2:0\n\343\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/dot_product_attention/split_last_dimension/strided_slice_2:0\n\322\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/dot_product_attention/strided_slice/stack:0\n\324\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/dot_product_attention/strided_slice/stack_1:0\n\324\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/dot_product_attention/strided_slice/stack_2:0\n\314\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/dot_product_attention/strided_slice:0\n\324\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/dot_product_attention/strided_slice_1/stack:0\n\326\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/dot_product_attention/strided_slice_1/stack_1:0\n\326\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/dot_product_attention/strided_slice_1/stack_2:0\n\316\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/dot_product_attention/strided_slice_1:0\n\324\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/dot_product_attention/strided_slice_2/stack:0\n\326\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/dot_product_attention/strided_slice_2/stack_1:0\n\326\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/dot_product_attention/strided_slice_2/stack_2:0\n\316\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/dot_product_attention/strided_slice_2:0\n\315\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/dot_product_attention/transpose/perm:0\n\310\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/dot_product_attention/transpose:0\n\271\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/k/Tensordot/Cast:0\n\273\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/k/Tensordot/Cast_1:0\n\272\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/k/Tensordot/Const:0\n\274\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/k/Tensordot/Const_1:0\n\274\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/k/Tensordot/Const_2:0\n\302\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/k/Tensordot/GatherV2/axis:0\n\275\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/k/Tensordot/GatherV2:0\n\304\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/k/Tensordot/GatherV2_1/axis:0\n\277\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/k/Tensordot/GatherV2_1:0\n\303\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/k/Tensordot/GreaterEqual/y:0\n\301\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/k/Tensordot/GreaterEqual:0\n\273\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/k/Tensordot/Less/y:0\n\271\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/k/Tensordot/Less:0\n\275\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/k/Tensordot/ListDiff:0\n\275\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/k/Tensordot/ListDiff:1\n\273\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/k/Tensordot/MatMul:0\n\271\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/k/Tensordot/Prod:0\n\273\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/k/Tensordot/Prod_1:0\n\271\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/k/Tensordot/Rank:0\n\274\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/k/Tensordot/Reshape:0\n\304\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/k/Tensordot/Reshape_1/shape:0\n\276\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/k/Tensordot/Reshape_1:0\n\272\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/k/Tensordot/Shape:0\n\270\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/k/Tensordot/add:0\n\272\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/k/Tensordot/add_1:0\n\271\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/k/Tensordot/axes:0\n\300\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/k/Tensordot/concat/axis:0\n\273\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/k/Tensordot/concat:0\n\302\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/k/Tensordot/concat_1/axis:0\n\275\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/k/Tensordot/concat_1:0\n\302\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/k/Tensordot/concat_2/axis:0\n\275\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/k/Tensordot/concat_2:0\n\270\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/k/Tensordot/mul:0\n\272\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/k/Tensordot/mul_1:0\n\300\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/k/Tensordot/range/delta:0\n\300\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/k/Tensordot/range/start:0\n\272\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/k/Tensordot/range:0\n\272\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/k/Tensordot/stack:0\n\276\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/k/Tensordot/transpose:0\n\305\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/k/Tensordot/transpose_1/perm:0\n\300\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/k/Tensordot/transpose_1:0\n\264\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/k/Tensordot:0\n\256\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/mul/y:0\n\254\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/mul:0\n\310\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/output_transform/Tensordot/Cast:0\n\312\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/output_transform/Tensordot/Cast_1:0\n\311\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/output_transform/Tensordot/Const:0\n\313\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/output_transform/Tensordot/Const_1:0\n\313\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/output_transform/Tensordot/Const_2:0\n\321\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/output_transform/Tensordot/GatherV2/axis:0\n\314\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/output_transform/Tensordot/GatherV2:0\n\323\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/output_transform/Tensordot/GatherV2_1/axis:0\n\316\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/output_transform/Tensordot/GatherV2_1:0\n\322\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/output_transform/Tensordot/GreaterEqual/y:0\n\320\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/output_transform/Tensordot/GreaterEqual:0\n\312\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/output_transform/Tensordot/Less/y:0\n\310\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/output_transform/Tensordot/Less:0\n\314\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/output_transform/Tensordot/ListDiff:0\n\314\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/output_transform/Tensordot/ListDiff:1\n\312\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/output_transform/Tensordot/MatMul:0\n\310\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/output_transform/Tensordot/Prod:0\n\312\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/output_transform/Tensordot/Prod_1:0\n\310\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/output_transform/Tensordot/Rank:0\n\313\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/output_transform/Tensordot/Reshape:0\n\323\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/output_transform/Tensordot/Reshape_1/shape:0\n\315\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/output_transform/Tensordot/Reshape_1:0\n\311\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/output_transform/Tensordot/Shape:0\n\307\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/output_transform/Tensordot/add:0\n\311\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/output_transform/Tensordot/add_1:0\n\310\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/output_transform/Tensordot/axes:0\n\317\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/output_transform/Tensordot/concat/axis:0\n\312\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/output_transform/Tensordot/concat:0\n\321\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/output_transform/Tensordot/concat_1/axis:0\n\314\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/output_transform/Tensordot/concat_1:0\n\321\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/output_transform/Tensordot/concat_2/axis:0\n\314\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/output_transform/Tensordot/concat_2:0\n\307\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/output_transform/Tensordot/mul:0\n\311\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/output_transform/Tensordot/mul_1:0\n\317\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/output_transform/Tensordot/range/delta:0\n\317\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/output_transform/Tensordot/range/start:0\n\311\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/output_transform/Tensordot/range:0\n\311\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/output_transform/Tensordot/stack:0\n\315\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/output_transform/Tensordot/transpose:0\n\324\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/output_transform/Tensordot/transpose_1/perm:0\n\317\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/output_transform/Tensordot/transpose_1:0\n\303\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/output_transform/Tensordot:0\n\271\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/q/Tensordot/Cast:0\n\273\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/q/Tensordot/Cast_1:0\n\272\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/q/Tensordot/Const:0\n\274\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/q/Tensordot/Const_1:0\n\274\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/q/Tensordot/Const_2:0\n\302\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/q/Tensordot/GatherV2/axis:0\n\275\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/q/Tensordot/GatherV2:0\n\304\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/q/Tensordot/GatherV2_1/axis:0\n\277\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/q/Tensordot/GatherV2_1:0\n\303\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/q/Tensordot/GreaterEqual/y:0\n\301\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/q/Tensordot/GreaterEqual:0\n\273\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/q/Tensordot/Less/y:0\n\271\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/q/Tensordot/Less:0\n\275\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/q/Tensordot/ListDiff:0\n\275\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/q/Tensordot/ListDiff:1\n\273\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/q/Tensordot/MatMul:0\n\271\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/q/Tensordot/Prod:0\n\273\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/q/Tensordot/Prod_1:0\n\271\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/q/Tensordot/Rank:0\n\274\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/q/Tensordot/Reshape:0\n\304\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/q/Tensordot/Reshape_1/shape:0\n\276\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/q/Tensordot/Reshape_1:0\n\272\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/q/Tensordot/Shape:0\n\270\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/q/Tensordot/add:0\n\272\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/q/Tensordot/add_1:0\n\271\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/q/Tensordot/axes:0\n\300\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/q/Tensordot/concat/axis:0\n\273\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/q/Tensordot/concat:0\n\302\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/q/Tensordot/concat_1/axis:0\n\275\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/q/Tensordot/concat_1:0\n\302\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/q/Tensordot/concat_2/axis:0\n\275\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/q/Tensordot/concat_2:0\n\270\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/q/Tensordot/mul:0\n\272\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/q/Tensordot/mul_1:0\n\300\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/q/Tensordot/range/delta:0\n\300\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/q/Tensordot/range/start:0\n\272\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/q/Tensordot/range:0\n\272\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/q/Tensordot/stack:0\n\276\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/q/Tensordot/transpose:0\n\305\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/q/Tensordot/transpose_1/perm:0\n\300\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/q/Tensordot/transpose_1:0\n\264\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/q/Tensordot:0\n\331\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/split_heads/split_last_dimension/Reshape/shape/2:0\n\331\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/split_heads/split_last_dimension/Reshape/shape/3:0\n\327\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/split_heads/split_last_dimension/Reshape/shape:0\n\321\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/split_heads/split_last_dimension/Reshape:0\n\317\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/split_heads/split_last_dimension/Shape:0\n\335\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/split_heads/split_last_dimension/strided_slice/stack:0\n\337\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/split_heads/split_last_dimension/strided_slice/stack_1:0\n\337\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/split_heads/split_last_dimension/strided_slice/stack_2:0\n\327\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/split_heads/split_last_dimension/strided_slice:0\n\337\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/split_heads/split_last_dimension/strided_slice_1/stack:0\n\341\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/split_heads/split_last_dimension/strided_slice_1/stack_1:0\n\341\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/split_heads/split_last_dimension/strided_slice_1/stack_2:0\n\331\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/split_heads/split_last_dimension/strided_slice_1:0\n\303\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/split_heads/transpose/perm:0\n\276\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/split_heads/transpose:0\n\333\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/split_heads_1/split_last_dimension/Reshape/shape/2:0\n\333\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/split_heads_1/split_last_dimension/Reshape/shape/3:0\n\331\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/split_heads_1/split_last_dimension/Reshape/shape:0\n\323\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/split_heads_1/split_last_dimension/Reshape:0\n\321\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/split_heads_1/split_last_dimension/Shape:0\n\337\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/split_heads_1/split_last_dimension/strided_slice/stack:0\n\341\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/split_heads_1/split_last_dimension/strided_slice/stack_1:0\n\341\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/split_heads_1/split_last_dimension/strided_slice/stack_2:0\n\331\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/split_heads_1/split_last_dimension/strided_slice:0\n\341\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/split_heads_1/split_last_dimension/strided_slice_1/stack:0\n\343\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/split_heads_1/split_last_dimension/strided_slice_1/stack_1:0\n\343\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/split_heads_1/split_last_dimension/strided_slice_1/stack_2:0\n\333\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/split_heads_1/split_last_dimension/strided_slice_1:0\n\305\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/split_heads_1/transpose/perm:0\n\300\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/split_heads_1/transpose:0\n\333\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/split_heads_2/split_last_dimension/Reshape/shape/2:0\n\333\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/split_heads_2/split_last_dimension/Reshape/shape/3:0\n\331\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/split_heads_2/split_last_dimension/Reshape/shape:0\n\323\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/split_heads_2/split_last_dimension/Reshape:0\n\321\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/split_heads_2/split_last_dimension/Shape:0\n\337\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/split_heads_2/split_last_dimension/strided_slice/stack:0\n\341\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/split_heads_2/split_last_dimension/strided_slice/stack_1:0\n\341\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/split_heads_2/split_last_dimension/strided_slice/stack_2:0\n\331\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/split_heads_2/split_last_dimension/strided_slice:0\n\341\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/split_heads_2/split_last_dimension/strided_slice_1/stack:0\n\343\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/split_heads_2/split_last_dimension/strided_slice_1/stack_1:0\n\343\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/split_heads_2/split_last_dimension/strided_slice_1/stack_2:0\n\333\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/split_heads_2/split_last_dimension/strided_slice_1:0\n\305\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/split_heads_2/transpose/perm:0\n\300\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/split_heads_2/transpose:0\n\271\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/v/Tensordot/Cast:0\n\273\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/v/Tensordot/Cast_1:0\n\272\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/v/Tensordot/Const:0\n\274\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/v/Tensordot/Const_1:0\n\274\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/v/Tensordot/Const_2:0\n\302\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/v/Tensordot/GatherV2/axis:0\n\275\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/v/Tensordot/GatherV2:0\n\304\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/v/Tensordot/GatherV2_1/axis:0\n\277\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/v/Tensordot/GatherV2_1:0\n\303\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/v/Tensordot/GreaterEqual/y:0\n\301\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/v/Tensordot/GreaterEqual:0\n\273\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/v/Tensordot/Less/y:0\n\271\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/v/Tensordot/Less:0\n\275\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/v/Tensordot/ListDiff:0\n\275\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/v/Tensordot/ListDiff:1\n\273\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/v/Tensordot/MatMul:0\n\271\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/v/Tensordot/Prod:0\n\273\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/v/Tensordot/Prod_1:0\n\271\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/v/Tensordot/Rank:0\n\274\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/v/Tensordot/Reshape:0\n\304\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/v/Tensordot/Reshape_1/shape:0\n\276\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/v/Tensordot/Reshape_1:0\n\272\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/v/Tensordot/Shape:0\n\270\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/v/Tensordot/add:0\n\272\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/v/Tensordot/add_1:0\n\271\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/v/Tensordot/axes:0\n\300\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/v/Tensordot/concat/axis:0\n\273\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/v/Tensordot/concat:0\n\302\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/v/Tensordot/concat_1/axis:0\n\275\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/v/Tensordot/concat_1:0\n\302\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/v/Tensordot/concat_2/axis:0\n\275\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/v/Tensordot/concat_2:0\n\270\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/v/Tensordot/mul:0\n\272\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/v/Tensordot/mul_1:0\n\300\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/v/Tensordot/range/delta:0\n\300\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/v/Tensordot/range/start:0\n\272\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/v/Tensordot/range:0\n\272\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/v/Tensordot/stack:0\n\276\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/v/Tensordot/transpose:0\n\305\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/v/Tensordot/transpose_1/perm:0\n\300\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/v/Tensordot/transpose_1:0\n\264\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_1/self_attention/multihead_attention/v/Tensordot:0\n\230\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_prepostprocess/Shape:0\n\243\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_prepostprocess/layer_norm/Const:0\n\264\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_prepostprocess/layer_norm/Mean/reduction_indices:0\n\242\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_prepostprocess/layer_norm/Mean:0\n\266\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_prepostprocess/layer_norm/Mean_1/reduction_indices:0\n\244\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_prepostprocess/layer_norm/Mean_1:0\n\243\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_prepostprocess/layer_norm/Rsqrt:0\n\244\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_prepostprocess/layer_norm/Square:0\n\241\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_prepostprocess/layer_norm/add:0\n\243\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_prepostprocess/layer_norm/add_1:0\n\241\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_prepostprocess/layer_norm/mul:0\n\243\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_prepostprocess/layer_norm/mul_1:0\n\241\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_prepostprocess/layer_norm/sub:0\n\243\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_prepostprocess/layer_norm/sub_1:0\n\246\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_prepostprocess/strided_slice/stack:0\n\250\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_prepostprocess/strided_slice/stack_1:0\n\250\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_prepostprocess/strided_slice/stack_2:0\n\240\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_prepostprocess/strided_slice:0\n\250\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_prepostprocess/strided_slice_1/stack:0\n\252\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_prepostprocess/strided_slice_1/stack_1:0\n\252\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_prepostprocess/strided_slice_1/stack_2:0\n\242\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/layer_prepostprocess/strided_slice_1:0\n\227\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/pad_reduce/get_ids/Less/y:0\n\225\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/pad_reduce/get_ids/Less:0\n\236\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/pad_reduce/get_ids/Reshape/shape:0\n\230\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/pad_reduce/get_ids/Reshape:0\n\226\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/pad_reduce/get_ids/Shape:0\n\230\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/pad_reduce/get_ids/ToInt32:0\n\226\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/pad_reduce/get_ids/Where:0\n\244\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/pad_reduce/get_ids/strided_slice/stack:0\n\246\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/pad_reduce/get_ids/strided_slice/stack_1:0\n\246\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/pad_reduce/get_ids/strided_slice/stack_2:0\n\236\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/pad_reduce/get_ids/strided_slice:0\n\203\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/sub/x:0\n\201\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/encoder/sub:0\n{cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/mul/y:0\nycs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/mul:0\n\211\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/strided_slice/stack:0\n\213\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/strided_slice/stack_1:0\n\213\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/strided_slice/stack_2:0\n\203\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/strided_slice:0\n\213\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/strided_slice_1/stack:0\n\215\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/strided_slice_1/stack_1:0\n\215\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/strided_slice_1/stack_2:0\n\205\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/strided_slice_1:0\n\232\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/target_space_embedding/GatherV2/axis:0\n\235\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/target_space_embedding/GatherV2/indices:0\n\225\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/target_space_embedding/GatherV2:0\n\263\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/target_space_embedding/convert_gradient_to_tensor_HBc3xYw22Mw:0\nncs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/pred_id:0\nocs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_t:0\n\202\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/symbol_modality_8164_128/shared/mul_1:0\022\212\002\n\202\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/symbol_modality_8164_128/shared/mul_1:0\022\202\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/code_embedding/Shape/Switch:1\022\235\001\nzcs_similarity_transformer/body/code_embedding/encoder/layer_0/self_attention/multihead_attention/output_transform/kernel:0\022\037Read_22/ReadVariableOp/Switch:1\022\242\001\n\177cs_similarity_transformer/body/code_embedding/encoder/layer_0/self_attention/layer_prepostprocess/layer_norm/layer_norm_scale:0\022\037Read_17/ReadVariableOp/Switch:1\022s\nPcs_similarity_transformer/body/code_embedding/encoder/layer_1/ffn/conv1/kernel:0\022\037Read_37/ReadVariableOp/Switch:1\022\212\001\ngcs_similarity_transformer/body/code_embedding/encoder/layer_prepostprocess/layer_norm/layer_norm_bias:0\022\037Read_42/ReadVariableOp/Switch:1\022\216\001\nkcs_similarity_transformer/body/code_embedding/encoder/layer_0/self_attention/multihead_attention/v/kernel:0\022\037Read_21/ReadVariableOp/Switch:1\022q\nNcs_similarity_transformer/body/code_embedding/encoder/layer_0/ffn/conv2/bias:0\022\037Read_28/ReadVariableOp/Switch:1\022s\nPcs_similarity_transformer/body/code_embedding/encoder/layer_0/ffn/conv1/kernel:0\022\037Read_25/ReadVariableOp/Switch:1\022q\nNcs_similarity_transformer/body/code_embedding/encoder/layer_1/ffn/conv2/bias:0\022\037Read_40/ReadVariableOp/Switch:1\022\216\001\nkcs_similarity_transformer/body/code_embedding/encoder/layer_0/self_attention/multihead_attention/q/kernel:0\022\037Read_19/ReadVariableOp/Switch:1\022\235\001\nzcs_similarity_transformer/body/code_embedding/encoder/layer_1/self_attention/multihead_attention/output_transform/kernel:0\022\037Read_34/ReadVariableOp/Switch:1\022\227\001\ntcs_similarity_transformer/body/code_embedding/encoder/layer_1/ffn/layer_prepostprocess/layer_norm/layer_norm_scale:0\022\037Read_35/ReadVariableOp/Switch:1\022\226\001\nscs_similarity_transformer/body/code_embedding/encoder/layer_0/ffn/layer_prepostprocess/layer_norm/layer_norm_bias:0\022\037Read_24/ReadVariableOp/Switch:1\022\213\001\nhcs_similarity_transformer/body/code_embedding/encoder/layer_prepostprocess/layer_norm/layer_norm_scale:0\022\037Read_41/ReadVariableOp/Switch:1\022\216\001\nkcs_similarity_transformer/body/code_embedding/encoder/layer_1/self_attention/multihead_attention/k/kernel:0\022\037Read_32/ReadVariableOp/Switch:1\022\242\001\n\177cs_similarity_transformer/body/code_embedding/encoder/layer_1/self_attention/layer_prepostprocess/layer_norm/layer_norm_scale:0\022\037Read_29/ReadVariableOp/Switch:1\022\340\001\nncs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/pred_id:0\022ncs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/pred_id:0\022\241\001\n~cs_similarity_transformer/body/code_embedding/encoder/layer_0/self_attention/layer_prepostprocess/layer_norm/layer_norm_bias:0\022\037Read_18/ReadVariableOp/Switch:1\022q\nNcs_similarity_transformer/body/code_embedding/encoder/layer_0/ffn/conv1/bias:0\022\037Read_26/ReadVariableOp/Switch:1\022\226\001\nscs_similarity_transformer/body/code_embedding/encoder/layer_1/ffn/layer_prepostprocess/layer_norm/layer_norm_bias:0\022\037Read_36/ReadVariableOp/Switch:1\022\241\001\n~cs_similarity_transformer/body/code_embedding/encoder/layer_1/self_attention/layer_prepostprocess/layer_norm/layer_norm_bias:0\022\037Read_30/ReadVariableOp/Switch:1\022q\nNcs_similarity_transformer/body/code_embedding/encoder/layer_1/ffn/conv1/bias:0\022\037Read_38/ReadVariableOp/Switch:1\022\227\001\ntcs_similarity_transformer/body/code_embedding/encoder/layer_0/ffn/layer_prepostprocess/layer_norm/layer_norm_scale:0\022\037Read_23/ReadVariableOp/Switch:1\022p\nMcs_similarity_transformer/body/code_embedding/target_space_embedding/kernel:0\022\037Read_16/ReadVariableOp/Switch:1\022s\nPcs_similarity_transformer/body/code_embedding/encoder/layer_1/ffn/conv2/kernel:0\022\037Read_39/ReadVariableOp/Switch:1\022s\nPcs_similarity_transformer/body/code_embedding/encoder/layer_0/ffn/conv2/kernel:0\022\037Read_27/ReadVariableOp/Switch:1\022\216\001\nkcs_similarity_transformer/body/code_embedding/encoder/layer_1/self_attention/multihead_attention/v/kernel:0\022\037Read_33/ReadVariableOp/Switch:1\022\216\001\nkcs_similarity_transformer/body/code_embedding/encoder/layer_0/self_attention/multihead_attention/k/kernel:0\022\037Read_20/ReadVariableOp/Switch:1\022\216\001\nkcs_similarity_transformer/body/code_embedding/encoder/layer_1/self_attention/multihead_attention/q/kernel:0\022\037Read_31/ReadVariableOp/Switch:1"
        value: "\npcs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/cond_text_1\022ncs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/pred_id:0\032ocs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_f:0*\201\270\014\n\rIdentity_43:0\n\rIdentity_44:0\n\rIdentity_45:0\n\rIdentity_46:0\n\rIdentity_47:0\n\rIdentity_48:0\n\rIdentity_49:0\n\rIdentity_50:0\n\rIdentity_51:0\n\rIdentity_52:0\n\rIdentity_53:0\n\rIdentity_54:0\n\rIdentity_55:0\n\rIdentity_56:0\n\rIdentity_57:0\n\rIdentity_58:0\n\rIdentity_59:0\n\rIdentity_60:0\n\rIdentity_61:0\n\rIdentity_62:0\n\rIdentity_63:0\n\rIdentity_64:0\n\rIdentity_65:0\n\rIdentity_66:0\n\rIdentity_67:0\n\rIdentity_68:0\n\rIdentity_69:0\n\037Read_43/ReadVariableOp/Switch:0\n\030Read_43/ReadVariableOp:0\n\037Read_44/ReadVariableOp/Switch:0\n\030Read_44/ReadVariableOp:0\n\037Read_45/ReadVariableOp/Switch:0\n\030Read_45/ReadVariableOp:0\n\037Read_46/ReadVariableOp/Switch:0\n\030Read_46/ReadVariableOp:0\n\037Read_47/ReadVariableOp/Switch:0\n\030Read_47/ReadVariableOp:0\n\037Read_48/ReadVariableOp/Switch:0\n\030Read_48/ReadVariableOp:0\n\037Read_49/ReadVariableOp/Switch:0\n\030Read_49/ReadVariableOp:0\n\037Read_50/ReadVariableOp/Switch:0\n\030Read_50/ReadVariableOp:0\n\037Read_51/ReadVariableOp/Switch:0\n\030Read_51/ReadVariableOp:0\n\037Read_52/ReadVariableOp/Switch:0\n\030Read_52/ReadVariableOp:0\n\037Read_53/ReadVariableOp/Switch:0\n\030Read_53/ReadVariableOp:0\n\037Read_54/ReadVariableOp/Switch:0\n\030Read_54/ReadVariableOp:0\n\037Read_55/ReadVariableOp/Switch:0\n\030Read_55/ReadVariableOp:0\n\037Read_56/ReadVariableOp/Switch:0\n\030Read_56/ReadVariableOp:0\n\037Read_57/ReadVariableOp/Switch:0\n\030Read_57/ReadVariableOp:0\n\037Read_58/ReadVariableOp/Switch:0\n\030Read_58/ReadVariableOp:0\n\037Read_59/ReadVariableOp/Switch:0\n\030Read_59/ReadVariableOp:0\n\037Read_60/ReadVariableOp/Switch:0\n\030Read_60/ReadVariableOp:0\n\037Read_61/ReadVariableOp/Switch:0\n\030Read_61/ReadVariableOp:0\n\037Read_62/ReadVariableOp/Switch:0\n\030Read_62/ReadVariableOp:0\n\037Read_63/ReadVariableOp/Switch:0\n\030Read_63/ReadVariableOp:0\n\037Read_64/ReadVariableOp/Switch:0\n\030Read_64/ReadVariableOp:0\n\037Read_65/ReadVariableOp/Switch:0\n\030Read_65/ReadVariableOp:0\n\037Read_66/ReadVariableOp/Switch:0\n\030Read_66/ReadVariableOp:0\n\037Read_67/ReadVariableOp/Switch:0\n\030Read_67/ReadVariableOp:0\n\037Read_68/ReadVariableOp/Switch:0\n\030Read_68/ReadVariableOp:0\n\037Read_69/ReadVariableOp/Switch:0\n\030Read_69/ReadVariableOp:0\nPcs_similarity_transformer/body/string_embedding/encoder/layer_0/ffn/conv1/bias:0\nRcs_similarity_transformer/body/string_embedding/encoder/layer_0/ffn/conv1/kernel:0\nPcs_similarity_transformer/body/string_embedding/encoder/layer_0/ffn/conv2/bias:0\nRcs_similarity_transformer/body/string_embedding/encoder/layer_0/ffn/conv2/kernel:0\nucs_similarity_transformer/body/string_embedding/encoder/layer_0/ffn/layer_prepostprocess/layer_norm/layer_norm_bias:0\nvcs_similarity_transformer/body/string_embedding/encoder/layer_0/ffn/layer_prepostprocess/layer_norm/layer_norm_scale:0\n\200\001cs_similarity_transformer/body/string_embedding/encoder/layer_0/self_attention/layer_prepostprocess/layer_norm/layer_norm_bias:0\n\201\001cs_similarity_transformer/body/string_embedding/encoder/layer_0/self_attention/layer_prepostprocess/layer_norm/layer_norm_scale:0\nmcs_similarity_transformer/body/string_embedding/encoder/layer_0/self_attention/multihead_attention/k/kernel:0\n|cs_similarity_transformer/body/string_embedding/encoder/layer_0/self_attention/multihead_attention/output_transform/kernel:0\nmcs_similarity_transformer/body/string_embedding/encoder/layer_0/self_attention/multihead_attention/q/kernel:0\nmcs_similarity_transformer/body/string_embedding/encoder/layer_0/self_attention/multihead_attention/v/kernel:0\nPcs_similarity_transformer/body/string_embedding/encoder/layer_1/ffn/conv1/bias:0\nRcs_similarity_transformer/body/string_embedding/encoder/layer_1/ffn/conv1/kernel:0\nPcs_similarity_transformer/body/string_embedding/encoder/layer_1/ffn/conv2/bias:0\nRcs_similarity_transformer/body/string_embedding/encoder/layer_1/ffn/conv2/kernel:0\nucs_similarity_transformer/body/string_embedding/encoder/layer_1/ffn/layer_prepostprocess/layer_norm/layer_norm_bias:0\nvcs_similarity_transformer/body/string_embedding/encoder/layer_1/ffn/layer_prepostprocess/layer_norm/layer_norm_scale:0\n\200\001cs_similarity_transformer/body/string_embedding/encoder/layer_1/self_attention/layer_prepostprocess/layer_norm/layer_norm_bias:0\n\201\001cs_similarity_transformer/body/string_embedding/encoder/layer_1/self_attention/layer_prepostprocess/layer_norm/layer_norm_scale:0\nmcs_similarity_transformer/body/string_embedding/encoder/layer_1/self_attention/multihead_attention/k/kernel:0\n|cs_similarity_transformer/body/string_embedding/encoder/layer_1/self_attention/multihead_attention/output_transform/kernel:0\nmcs_similarity_transformer/body/string_embedding/encoder/layer_1/self_attention/multihead_attention/q/kernel:0\nmcs_similarity_transformer/body/string_embedding/encoder/layer_1/self_attention/multihead_attention/v/kernel:0\nics_similarity_transformer/body/string_embedding/encoder/layer_prepostprocess/layer_norm/layer_norm_bias:0\njcs_similarity_transformer/body/string_embedding/encoder/layer_prepostprocess/layer_norm/layer_norm_scale:0\nOcs_similarity_transformer/body/string_embedding/target_space_embedding/kernel:0\nncs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/pred_id:0\n\216\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/Mean/reduction_indices:0\n|cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/Mean:0\n\207\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/Reshape/shape/2:0\n\205\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/Reshape/shape:0\n\177cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/Reshape:0\n\207\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/Reshape_1/shape:0\n\201\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/Reshape_1:0\n\204\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/Shape/Switch:0\n}cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/Shape:0\n{cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/add:0\n\222\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/add_timing_signal_1d/Shape:0\n\224\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/add_timing_signal_1d/Shape_1:0\n\220\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/add_timing_signal_1d/add:0\n\245\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/add_timing_signal_1d/get_timing_signal_1d/Cos:0\n\245\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/add_timing_signal_1d/get_timing_signal_1d/Exp:0\n\260\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/add_timing_signal_1d/get_timing_signal_1d/ExpandDims/dim:0\n\254\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/add_timing_signal_1d/get_timing_signal_1d/ExpandDims:0\n\262\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/add_timing_signal_1d/get_timing_signal_1d/ExpandDims_1/dim:0\n\256\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/add_timing_signal_1d/get_timing_signal_1d/ExpandDims_1:0\n\254\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/add_timing_signal_1d/get_timing_signal_1d/FloorMod/x:0\n\254\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/add_timing_signal_1d/get_timing_signal_1d/FloorMod/y:0\n\252\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/add_timing_signal_1d/get_timing_signal_1d/FloorMod:0\n\253\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/add_timing_signal_1d/get_timing_signal_1d/Maximum/y:0\n\251\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/add_timing_signal_1d/get_timing_signal_1d/Maximum:0\n\245\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/add_timing_signal_1d/get_timing_signal_1d/Neg:0\n\262\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/add_timing_signal_1d/get_timing_signal_1d/Pad/paddings/0_1:0\n\262\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/add_timing_signal_1d/get_timing_signal_1d/Pad/paddings/1/0:0\n\260\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/add_timing_signal_1d/get_timing_signal_1d/Pad/paddings/1:0\n\256\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/add_timing_signal_1d/get_timing_signal_1d/Pad/paddings:0\n\245\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/add_timing_signal_1d/get_timing_signal_1d/Pad:0\n\261\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/add_timing_signal_1d/get_timing_signal_1d/Reshape/shape/0:0\n\261\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/add_timing_signal_1d/get_timing_signal_1d/Reshape/shape/2:0\n\257\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/add_timing_signal_1d/get_timing_signal_1d/Reshape/shape:0\n\251\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/add_timing_signal_1d/get_timing_signal_1d/Reshape:0\n\245\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/add_timing_signal_1d/get_timing_signal_1d/Sin:0\n\251\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/add_timing_signal_1d/get_timing_signal_1d/ToFloat:0\n\255\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/add_timing_signal_1d/get_timing_signal_1d/ToFloat_1/x:0\n\253\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/add_timing_signal_1d/get_timing_signal_1d/ToFloat_1:0\n\253\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/add_timing_signal_1d/get_timing_signal_1d/ToFloat_2:0\n\247\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/add_timing_signal_1d/get_timing_signal_1d/add/y:0\n\245\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/add_timing_signal_1d/get_timing_signal_1d/add:0\n\255\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/add_timing_signal_1d/get_timing_signal_1d/concat/axis:0\n\250\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/add_timing_signal_1d/get_timing_signal_1d/concat:0\n\245\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/add_timing_signal_1d/get_timing_signal_1d/mul:0\n\251\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/add_timing_signal_1d/get_timing_signal_1d/mul_1/x:0\n\247\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/add_timing_signal_1d/get_timing_signal_1d/mul_1:0\n\247\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/add_timing_signal_1d/get_timing_signal_1d/mul_2:0\n\255\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/add_timing_signal_1d/get_timing_signal_1d/range/delta:0\n\255\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/add_timing_signal_1d/get_timing_signal_1d/range/start:0\n\247\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/add_timing_signal_1d/get_timing_signal_1d/range:0\n\257\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/add_timing_signal_1d/get_timing_signal_1d/range_1/delta:0\n\257\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/add_timing_signal_1d/get_timing_signal_1d/range_1/limit:0\n\257\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/add_timing_signal_1d/get_timing_signal_1d/range_1/start:0\n\251\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/add_timing_signal_1d/get_timing_signal_1d/range_1:0\n\247\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/add_timing_signal_1d/get_timing_signal_1d/sub/y:0\n\245\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/add_timing_signal_1d/get_timing_signal_1d/sub:0\n\253\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/add_timing_signal_1d/get_timing_signal_1d/truediv/x:0\n\251\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/add_timing_signal_1d/get_timing_signal_1d/truediv:0\n\240\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/add_timing_signal_1d/strided_slice/stack:0\n\242\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/add_timing_signal_1d/strided_slice/stack_1:0\n\242\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/add_timing_signal_1d/strided_slice/stack_2:0\n\232\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/add_timing_signal_1d/strided_slice:0\n\242\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/add_timing_signal_1d/strided_slice_1/stack:0\n\244\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/add_timing_signal_1d/strided_slice_1/stack_1:0\n\244\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/add_timing_signal_1d/strided_slice_1/stack_2:0\n\234\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/add_timing_signal_1d/strided_slice_1:0\n\242\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/add_timing_signal_1d/strided_slice_2/stack:0\n\244\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/add_timing_signal_1d/strided_slice_2/stack_1:0\n\244\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/add_timing_signal_1d/strided_slice_2/stack_2:0\n\234\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/add_timing_signal_1d/strided_slice_2:0\n\242\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/add_timing_signal_1d/strided_slice_3/stack:0\n\244\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/add_timing_signal_1d/strided_slice_3/stack_1:0\n\244\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/add_timing_signal_1d/strided_slice_3/stack_2:0\n\234\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/add_timing_signal_1d/strided_slice_3:0\n\244\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/attention_bias_ignore_padding/ExpandDims/dim:0\n\240\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/attention_bias_ignore_padding/ExpandDims:0\n\246\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/attention_bias_ignore_padding/ExpandDims_1/dim:0\n\242\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/attention_bias_ignore_padding/ExpandDims_1:0\n\233\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/attention_bias_ignore_padding/mul/y:0\n\231\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/attention_bias_ignore_padding/mul:0\n\220\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/embedding_to_padding/Abs:0\n\224\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/embedding_to_padding/Equal/y:0\n\222\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/embedding_to_padding/Equal:0\n\242\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/embedding_to_padding/Sum/reduction_indices:0\n\220\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/embedding_to_padding/Sum:0\n\224\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/embedding_to_padding/ToFloat:0\n\240\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/attention_bias_to_padding/Less/y:0\n\236\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/attention_bias_to_padding/Less:0\n\241\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/attention_bias_to_padding/Squeeze:0\n\241\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/attention_bias_to_padding/ToFloat:0\n\232\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/ffn/ExpandDims/dim:0\n\226\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/ffn/ExpandDims:0\n\223\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/ffn/Reshape:0\n\235\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/ffn/Reshape_1/shape/2:0\n\233\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/ffn/Reshape_1/shape:0\n\225\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/ffn/Reshape_1:0\n\221\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/ffn/Shape:0\n\223\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/ffn/Squeeze:0\n\227\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/ffn/concat/axis:0\n\233\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/ffn/concat/values_0:0\n\233\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/ffn/concat/values_1:0\n\222\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/ffn/concat:0\n\231\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/ffn/conv1/BiasAdd:0\n\226\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/ffn/conv1/Relu:0\n\240\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/ffn/conv1/Tensordot/Cast:0\n\242\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/ffn/conv1/Tensordot/Cast_1:0\n\241\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/ffn/conv1/Tensordot/Const:0\n\243\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/ffn/conv1/Tensordot/Const_1:0\n\243\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/ffn/conv1/Tensordot/Const_2:0\n\251\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/ffn/conv1/Tensordot/GatherV2/axis:0\n\244\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/ffn/conv1/Tensordot/GatherV2:0\n\253\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/ffn/conv1/Tensordot/GatherV2_1/axis:0\n\246\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/ffn/conv1/Tensordot/GatherV2_1:0\n\252\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/ffn/conv1/Tensordot/GreaterEqual/y:0\n\250\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/ffn/conv1/Tensordot/GreaterEqual:0\n\242\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/ffn/conv1/Tensordot/Less/y:0\n\240\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/ffn/conv1/Tensordot/Less:0\n\244\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/ffn/conv1/Tensordot/ListDiff:0\n\244\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/ffn/conv1/Tensordot/ListDiff:1\n\242\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/ffn/conv1/Tensordot/MatMul:0\n\240\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/ffn/conv1/Tensordot/Prod:0\n\242\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/ffn/conv1/Tensordot/Prod_1:0\n\240\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/ffn/conv1/Tensordot/Rank:0\n\243\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/ffn/conv1/Tensordot/Reshape:0\n\253\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/ffn/conv1/Tensordot/Reshape_1/shape:0\n\245\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/ffn/conv1/Tensordot/Reshape_1:0\n\241\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/ffn/conv1/Tensordot/Shape:0\n\237\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/ffn/conv1/Tensordot/add:0\n\241\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/ffn/conv1/Tensordot/add_1:0\n\240\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/ffn/conv1/Tensordot/axes:0\n\247\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/ffn/conv1/Tensordot/concat/axis:0\n\242\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/ffn/conv1/Tensordot/concat:0\n\251\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/ffn/conv1/Tensordot/concat_1/axis:0\n\244\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/ffn/conv1/Tensordot/concat_1:0\n\251\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/ffn/conv1/Tensordot/concat_2/axis:0\n\244\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/ffn/conv1/Tensordot/concat_2:0\n\237\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/ffn/conv1/Tensordot/mul:0\n\241\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/ffn/conv1/Tensordot/mul_1:0\n\247\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/ffn/conv1/Tensordot/range/delta:0\n\247\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/ffn/conv1/Tensordot/range/start:0\n\241\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/ffn/conv1/Tensordot/range:0\n\241\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/ffn/conv1/Tensordot/stack:0\n\245\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/ffn/conv1/Tensordot/transpose:0\n\254\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/ffn/conv1/Tensordot/transpose_1/perm:0\n\247\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/ffn/conv1/Tensordot/transpose_1:0\n\233\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/ffn/conv1/Tensordot:0\n\231\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/ffn/conv2/BiasAdd:0\n\240\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/ffn/conv2/Tensordot/Cast:0\n\242\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/ffn/conv2/Tensordot/Cast_1:0\n\241\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/ffn/conv2/Tensordot/Const:0\n\243\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/ffn/conv2/Tensordot/Const_1:0\n\243\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/ffn/conv2/Tensordot/Const_2:0\n\251\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/ffn/conv2/Tensordot/GatherV2/axis:0\n\244\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/ffn/conv2/Tensordot/GatherV2:0\n\253\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/ffn/conv2/Tensordot/GatherV2_1/axis:0\n\246\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/ffn/conv2/Tensordot/GatherV2_1:0\n\252\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/ffn/conv2/Tensordot/GreaterEqual/y:0\n\250\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/ffn/conv2/Tensordot/GreaterEqual:0\n\242\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/ffn/conv2/Tensordot/Less/y:0\n\240\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/ffn/conv2/Tensordot/Less:0\n\244\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/ffn/conv2/Tensordot/ListDiff:0\n\244\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/ffn/conv2/Tensordot/ListDiff:1\n\242\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/ffn/conv2/Tensordot/MatMul:0\n\240\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/ffn/conv2/Tensordot/Prod:0\n\242\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/ffn/conv2/Tensordot/Prod_1:0\n\240\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/ffn/conv2/Tensordot/Rank:0\n\243\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/ffn/conv2/Tensordot/Reshape:0\n\253\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/ffn/conv2/Tensordot/Reshape_1/shape:0\n\245\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/ffn/conv2/Tensordot/Reshape_1:0\n\241\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/ffn/conv2/Tensordot/Shape:0\n\237\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/ffn/conv2/Tensordot/add:0\n\241\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/ffn/conv2/Tensordot/add_1:0\n\240\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/ffn/conv2/Tensordot/axes:0\n\247\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/ffn/conv2/Tensordot/concat/axis:0\n\242\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/ffn/conv2/Tensordot/concat:0\n\251\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/ffn/conv2/Tensordot/concat_1/axis:0\n\244\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/ffn/conv2/Tensordot/concat_1:0\n\251\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/ffn/conv2/Tensordot/concat_2/axis:0\n\244\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/ffn/conv2/Tensordot/concat_2:0\n\237\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/ffn/conv2/Tensordot/mul:0\n\241\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/ffn/conv2/Tensordot/mul_1:0\n\247\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/ffn/conv2/Tensordot/range/delta:0\n\247\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/ffn/conv2/Tensordot/range/start:0\n\241\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/ffn/conv2/Tensordot/range:0\n\241\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/ffn/conv2/Tensordot/stack:0\n\245\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/ffn/conv2/Tensordot/transpose:0\n\254\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/ffn/conv2/Tensordot/transpose_1/perm:0\n\247\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/ffn/conv2/Tensordot/transpose_1:0\n\233\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/ffn/conv2/Tensordot:0\n\241\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/ffn/layer_postprocess/add:0\n\246\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/ffn/layer_prepostprocess/Shape:0\n\261\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/ffn/layer_prepostprocess/layer_norm/Const:0\n\302\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/ffn/layer_prepostprocess/layer_norm/Mean/reduction_indices:0\n\260\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/ffn/layer_prepostprocess/layer_norm/Mean:0\n\304\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/ffn/layer_prepostprocess/layer_norm/Mean_1/reduction_indices:0\n\262\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/ffn/layer_prepostprocess/layer_norm/Mean_1:0\n\261\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/ffn/layer_prepostprocess/layer_norm/Rsqrt:0\n\262\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/ffn/layer_prepostprocess/layer_norm/Square:0\n\257\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/ffn/layer_prepostprocess/layer_norm/add:0\n\261\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/ffn/layer_prepostprocess/layer_norm/add_1:0\n\257\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/ffn/layer_prepostprocess/layer_norm/mul:0\n\261\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/ffn/layer_prepostprocess/layer_norm/mul_1:0\n\257\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/ffn/layer_prepostprocess/layer_norm/sub:0\n\261\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/ffn/layer_prepostprocess/layer_norm/sub_1:0\n\264\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/ffn/layer_prepostprocess/strided_slice/stack:0\n\266\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/ffn/layer_prepostprocess/strided_slice/stack_1:0\n\266\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/ffn/layer_prepostprocess/strided_slice/stack_2:0\n\256\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/ffn/layer_prepostprocess/strided_slice:0\n\266\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/ffn/layer_prepostprocess/strided_slice_1/stack:0\n\270\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/ffn/layer_prepostprocess/strided_slice_1/stack_1:0\n\270\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/ffn/layer_prepostprocess/strided_slice_1/stack_2:0\n\260\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/ffn/layer_prepostprocess/strided_slice_1:0\n\246\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/ffn/pad_reduce/remove/GatherNd:0\n\250\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/ffn/pad_reduce/restore/ScatterNd:0\n\244\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/ffn/pad_reduce/restore/Shape:0\n\252\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/ffn/pad_reduce/restore/concat/axis:0\n\245\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/ffn/pad_reduce/restore/concat:0\n\262\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/ffn/pad_reduce/restore/strided_slice/stack:0\n\264\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/ffn/pad_reduce/restore/strided_slice/stack_1:0\n\264\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/ffn/pad_reduce/restore/strided_slice/stack_2:0\n\254\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/ffn/pad_reduce/restore/strided_slice:0\n\237\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/ffn/strided_slice/stack:0\n\241\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/ffn/strided_slice/stack_1:0\n\241\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/ffn/strided_slice/stack_2:0\n\231\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/ffn/strided_slice:0\n\241\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/ffn/strided_slice_1/stack:0\n\243\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/ffn/strided_slice_1/stack_1:0\n\243\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/ffn/strided_slice_1/stack_2:0\n\233\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/ffn/strided_slice_1:0\n\254\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/layer_postprocess/add:0\n\261\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/layer_prepostprocess/Shape:0\n\274\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/layer_prepostprocess/layer_norm/Const:0\n\315\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/layer_prepostprocess/layer_norm/Mean/reduction_indices:0\n\273\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/layer_prepostprocess/layer_norm/Mean:0\n\317\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/layer_prepostprocess/layer_norm/Mean_1/reduction_indices:0\n\275\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/layer_prepostprocess/layer_norm/Mean_1:0\n\274\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/layer_prepostprocess/layer_norm/Rsqrt:0\n\275\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/layer_prepostprocess/layer_norm/Square:0\n\272\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/layer_prepostprocess/layer_norm/add:0\n\274\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/layer_prepostprocess/layer_norm/add_1:0\n\272\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/layer_prepostprocess/layer_norm/mul:0\n\274\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/layer_prepostprocess/layer_norm/mul_1:0\n\272\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/layer_prepostprocess/layer_norm/sub:0\n\274\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/layer_prepostprocess/layer_norm/sub_1:0\n\277\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/layer_prepostprocess/strided_slice/stack:0\n\301\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/layer_prepostprocess/strided_slice/stack_1:0\n\301\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/layer_prepostprocess/strided_slice/stack_2:0\n\271\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/layer_prepostprocess/strided_slice:0\n\301\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/layer_prepostprocess/strided_slice_1/stack:0\n\303\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/layer_prepostprocess/strided_slice_1/stack_1:0\n\303\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/layer_prepostprocess/strided_slice_1/stack_2:0\n\273\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/layer_prepostprocess/strided_slice_1:0\n\344\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/combine_heads/combine_last_two_dimensions/Reshape/shape/2:0\n\342\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/combine_heads/combine_last_two_dimensions/Reshape/shape:0\n\334\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/combine_heads/combine_last_two_dimensions/Reshape:0\n\332\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/combine_heads/combine_last_two_dimensions/Shape:0\n\350\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/combine_heads/combine_last_two_dimensions/strided_slice/stack:0\n\352\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/combine_heads/combine_last_two_dimensions/strided_slice/stack_1:0\n\352\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/combine_heads/combine_last_two_dimensions/strided_slice/stack_2:0\n\342\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/combine_heads/combine_last_two_dimensions/strided_slice:0\n\352\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/combine_heads/combine_last_two_dimensions/strided_slice_1/stack:0\n\354\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/combine_heads/combine_last_two_dimensions/strided_slice_1/stack_1:0\n\354\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/combine_heads/combine_last_two_dimensions/strided_slice_1/stack_2:0\n\344\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/combine_heads/combine_last_two_dimensions/strided_slice_1:0\n\307\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/combine_heads/transpose/perm:0\n\302\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/combine_heads/transpose:0\n\313\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/dot_product_attention/FloorMod/x:0\n\313\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/dot_product_attention/FloorMod/y:0\n\311\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/dot_product_attention/FloorMod:0\n\307\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/dot_product_attention/MatMul:0\n\311\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/dot_product_attention/MatMul_1:0\n\326\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/dot_product_attention/Max/reduction_indices:0\n\304\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/dot_product_attention/Max:0\n\321\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/dot_product_attention/Pad/paddings/0_1:0\n\321\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/dot_product_attention/Pad/paddings/1_1:0\n\321\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/dot_product_attention/Pad/paddings/2_1:0\n\321\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/dot_product_attention/Pad/paddings/3/0:0\n\317\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/dot_product_attention/Pad/paddings/3:0\n\315\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/dot_product_attention/Pad/paddings:0\n\304\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/dot_product_attention/Pad:0\n\306\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/dot_product_attention/Pow/y:0\n\304\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/dot_product_attention/Pow:0\n\306\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/dot_product_attention/Shape:0\n\304\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/dot_product_attention/add:0\n\316\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/dot_product_attention/attention/tag:0\n\312\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/dot_product_attention/attention:0\n\322\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/dot_product_attention/attention_weights:0\n\345\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/dot_product_attention/split_last_dimension/Reshape/shape/3:0\n\345\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/dot_product_attention/split_last_dimension/Reshape/shape/4:0\n\343\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/dot_product_attention/split_last_dimension/Reshape/shape:0\n\335\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/dot_product_attention/split_last_dimension/Reshape:0\n\333\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/dot_product_attention/split_last_dimension/Shape:0\n\351\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/dot_product_attention/split_last_dimension/strided_slice/stack:0\n\353\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/dot_product_attention/split_last_dimension/strided_slice/stack_1:0\n\353\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/dot_product_attention/split_last_dimension/strided_slice/stack_2:0\n\343\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/dot_product_attention/split_last_dimension/strided_slice:0\n\353\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/dot_product_attention/split_last_dimension/strided_slice_1/stack:0\n\355\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/dot_product_attention/split_last_dimension/strided_slice_1/stack_1:0\n\355\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/dot_product_attention/split_last_dimension/strided_slice_1/stack_2:0\n\345\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/dot_product_attention/split_last_dimension/strided_slice_1:0\n\353\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/dot_product_attention/split_last_dimension/strided_slice_2/stack:0\n\355\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/dot_product_attention/split_last_dimension/strided_slice_2/stack_1:0\n\355\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/dot_product_attention/split_last_dimension/strided_slice_2/stack_2:0\n\345\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/dot_product_attention/split_last_dimension/strided_slice_2:0\n\324\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/dot_product_attention/strided_slice/stack:0\n\326\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/dot_product_attention/strided_slice/stack_1:0\n\326\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/dot_product_attention/strided_slice/stack_2:0\n\316\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/dot_product_attention/strided_slice:0\n\326\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/dot_product_attention/strided_slice_1/stack:0\n\330\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/dot_product_attention/strided_slice_1/stack_1:0\n\330\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/dot_product_attention/strided_slice_1/stack_2:0\n\320\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/dot_product_attention/strided_slice_1:0\n\326\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/dot_product_attention/strided_slice_2/stack:0\n\330\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/dot_product_attention/strided_slice_2/stack_1:0\n\330\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/dot_product_attention/strided_slice_2/stack_2:0\n\320\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/dot_product_attention/strided_slice_2:0\n\317\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/dot_product_attention/transpose/perm:0\n\312\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/dot_product_attention/transpose:0\n\273\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/k/Tensordot/Cast:0\n\275\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/k/Tensordot/Cast_1:0\n\274\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/k/Tensordot/Const:0\n\276\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/k/Tensordot/Const_1:0\n\276\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/k/Tensordot/Const_2:0\n\304\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/k/Tensordot/GatherV2/axis:0\n\277\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/k/Tensordot/GatherV2:0\n\306\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/k/Tensordot/GatherV2_1/axis:0\n\301\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/k/Tensordot/GatherV2_1:0\n\305\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/k/Tensordot/GreaterEqual/y:0\n\303\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/k/Tensordot/GreaterEqual:0\n\275\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/k/Tensordot/Less/y:0\n\273\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/k/Tensordot/Less:0\n\277\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/k/Tensordot/ListDiff:0\n\277\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/k/Tensordot/ListDiff:1\n\275\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/k/Tensordot/MatMul:0\n\273\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/k/Tensordot/Prod:0\n\275\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/k/Tensordot/Prod_1:0\n\273\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/k/Tensordot/Rank:0\n\276\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/k/Tensordot/Reshape:0\n\306\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/k/Tensordot/Reshape_1/shape:0\n\300\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/k/Tensordot/Reshape_1:0\n\274\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/k/Tensordot/Shape:0\n\272\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/k/Tensordot/add:0\n\274\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/k/Tensordot/add_1:0\n\273\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/k/Tensordot/axes:0\n\302\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/k/Tensordot/concat/axis:0\n\275\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/k/Tensordot/concat:0\n\304\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/k/Tensordot/concat_1/axis:0\n\277\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/k/Tensordot/concat_1:0\n\304\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/k/Tensordot/concat_2/axis:0\n\277\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/k/Tensordot/concat_2:0\n\272\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/k/Tensordot/mul:0\n\274\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/k/Tensordot/mul_1:0\n\302\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/k/Tensordot/range/delta:0\n\302\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/k/Tensordot/range/start:0\n\274\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/k/Tensordot/range:0\n\274\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/k/Tensordot/stack:0\n\300\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/k/Tensordot/transpose:0\n\307\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/k/Tensordot/transpose_1/perm:0\n\302\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/k/Tensordot/transpose_1:0\n\266\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/k/Tensordot:0\n\260\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/mul/y:0\n\256\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/mul:0\n\312\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/output_transform/Tensordot/Cast:0\n\314\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/output_transform/Tensordot/Cast_1:0\n\313\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/output_transform/Tensordot/Const:0\n\315\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/output_transform/Tensordot/Const_1:0\n\315\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/output_transform/Tensordot/Const_2:0\n\323\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/output_transform/Tensordot/GatherV2/axis:0\n\316\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/output_transform/Tensordot/GatherV2:0\n\325\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/output_transform/Tensordot/GatherV2_1/axis:0\n\320\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/output_transform/Tensordot/GatherV2_1:0\n\324\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/output_transform/Tensordot/GreaterEqual/y:0\n\322\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/output_transform/Tensordot/GreaterEqual:0\n\314\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/output_transform/Tensordot/Less/y:0\n\312\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/output_transform/Tensordot/Less:0\n\316\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/output_transform/Tensordot/ListDiff:0\n\316\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/output_transform/Tensordot/ListDiff:1\n\314\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/output_transform/Tensordot/MatMul:0\n\312\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/output_transform/Tensordot/Prod:0\n\314\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/output_transform/Tensordot/Prod_1:0\n\312\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/output_transform/Tensordot/Rank:0\n\315\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/output_transform/Tensordot/Reshape:0\n\325\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/output_transform/Tensordot/Reshape_1/shape:0\n\317\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/output_transform/Tensordot/Reshape_1:0\n\313\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/output_transform/Tensordot/Shape:0\n\311\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/output_transform/Tensordot/add:0\n\313\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/output_transform/Tensordot/add_1:0\n\312\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/output_transform/Tensordot/axes:0\n\321\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/output_transform/Tensordot/concat/axis:0\n\314\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/output_transform/Tensordot/concat:0\n\323\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/output_transform/Tensordot/concat_1/axis:0\n\316\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/output_transform/Tensordot/concat_1:0\n\323\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/output_transform/Tensordot/concat_2/axis:0\n\316\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/output_transform/Tensordot/concat_2:0\n\311\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/output_transform/Tensordot/mul:0\n\313\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/output_transform/Tensordot/mul_1:0\n\321\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/output_transform/Tensordot/range/delta:0\n\321\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/output_transform/Tensordot/range/start:0\n\313\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/output_transform/Tensordot/range:0\n\313\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/output_transform/Tensordot/stack:0\n\317\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/output_transform/Tensordot/transpose:0\n\326\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/output_transform/Tensordot/transpose_1/perm:0\n\321\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/output_transform/Tensordot/transpose_1:0\n\305\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/output_transform/Tensordot:0\n\273\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/q/Tensordot/Cast:0\n\275\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/q/Tensordot/Cast_1:0\n\274\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/q/Tensordot/Const:0\n\276\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/q/Tensordot/Const_1:0\n\276\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/q/Tensordot/Const_2:0\n\304\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/q/Tensordot/GatherV2/axis:0\n\277\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/q/Tensordot/GatherV2:0\n\306\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/q/Tensordot/GatherV2_1/axis:0\n\301\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/q/Tensordot/GatherV2_1:0\n\305\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/q/Tensordot/GreaterEqual/y:0\n\303\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/q/Tensordot/GreaterEqual:0\n\275\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/q/Tensordot/Less/y:0\n\273\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/q/Tensordot/Less:0\n\277\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/q/Tensordot/ListDiff:0\n\277\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/q/Tensordot/ListDiff:1\n\275\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/q/Tensordot/MatMul:0\n\273\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/q/Tensordot/Prod:0\n\275\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/q/Tensordot/Prod_1:0\n\273\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/q/Tensordot/Rank:0\n\276\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/q/Tensordot/Reshape:0\n\306\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/q/Tensordot/Reshape_1/shape:0\n\300\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/q/Tensordot/Reshape_1:0\n\274\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/q/Tensordot/Shape:0\n\272\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/q/Tensordot/add:0\n\274\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/q/Tensordot/add_1:0\n\273\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/q/Tensordot/axes:0\n\302\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/q/Tensordot/concat/axis:0\n\275\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/q/Tensordot/concat:0\n\304\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/q/Tensordot/concat_1/axis:0\n\277\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/q/Tensordot/concat_1:0\n\304\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/q/Tensordot/concat_2/axis:0\n\277\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/q/Tensordot/concat_2:0\n\272\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/q/Tensordot/mul:0\n\274\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/q/Tensordot/mul_1:0\n\302\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/q/Tensordot/range/delta:0\n\302\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/q/Tensordot/range/start:0\n\274\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/q/Tensordot/range:0\n\274\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/q/Tensordot/stack:0\n\300\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/q/Tensordot/transpose:0\n\307\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/q/Tensordot/transpose_1/perm:0\n\302\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/q/Tensordot/transpose_1:0\n\266\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/q/Tensordot:0\n\333\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/split_heads/split_last_dimension/Reshape/shape/2:0\n\333\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/split_heads/split_last_dimension/Reshape/shape/3:0\n\331\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/split_heads/split_last_dimension/Reshape/shape:0\n\323\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/split_heads/split_last_dimension/Reshape:0\n\321\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/split_heads/split_last_dimension/Shape:0\n\337\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/split_heads/split_last_dimension/strided_slice/stack:0\n\341\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/split_heads/split_last_dimension/strided_slice/stack_1:0\n\341\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/split_heads/split_last_dimension/strided_slice/stack_2:0\n\331\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/split_heads/split_last_dimension/strided_slice:0\n\341\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/split_heads/split_last_dimension/strided_slice_1/stack:0\n\343\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/split_heads/split_last_dimension/strided_slice_1/stack_1:0\n\343\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/split_heads/split_last_dimension/strided_slice_1/stack_2:0\n\333\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/split_heads/split_last_dimension/strided_slice_1:0\n\305\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/split_heads/transpose/perm:0\n\300\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/split_heads/transpose:0\n\335\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/split_heads_1/split_last_dimension/Reshape/shape/2:0\n\335\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/split_heads_1/split_last_dimension/Reshape/shape/3:0\n\333\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/split_heads_1/split_last_dimension/Reshape/shape:0\n\325\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/split_heads_1/split_last_dimension/Reshape:0\n\323\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/split_heads_1/split_last_dimension/Shape:0\n\341\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/split_heads_1/split_last_dimension/strided_slice/stack:0\n\343\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/split_heads_1/split_last_dimension/strided_slice/stack_1:0\n\343\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/split_heads_1/split_last_dimension/strided_slice/stack_2:0\n\333\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/split_heads_1/split_last_dimension/strided_slice:0\n\343\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/split_heads_1/split_last_dimension/strided_slice_1/stack:0\n\345\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/split_heads_1/split_last_dimension/strided_slice_1/stack_1:0\n\345\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/split_heads_1/split_last_dimension/strided_slice_1/stack_2:0\n\335\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/split_heads_1/split_last_dimension/strided_slice_1:0\n\307\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/split_heads_1/transpose/perm:0\n\302\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/split_heads_1/transpose:0\n\335\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/split_heads_2/split_last_dimension/Reshape/shape/2:0\n\335\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/split_heads_2/split_last_dimension/Reshape/shape/3:0\n\333\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/split_heads_2/split_last_dimension/Reshape/shape:0\n\325\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/split_heads_2/split_last_dimension/Reshape:0\n\323\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/split_heads_2/split_last_dimension/Shape:0\n\341\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/split_heads_2/split_last_dimension/strided_slice/stack:0\n\343\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/split_heads_2/split_last_dimension/strided_slice/stack_1:0\n\343\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/split_heads_2/split_last_dimension/strided_slice/stack_2:0\n\333\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/split_heads_2/split_last_dimension/strided_slice:0\n\343\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/split_heads_2/split_last_dimension/strided_slice_1/stack:0\n\345\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/split_heads_2/split_last_dimension/strided_slice_1/stack_1:0\n\345\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/split_heads_2/split_last_dimension/strided_slice_1/stack_2:0\n\335\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/split_heads_2/split_last_dimension/strided_slice_1:0\n\307\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/split_heads_2/transpose/perm:0\n\302\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/split_heads_2/transpose:0\n\273\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/v/Tensordot/Cast:0\n\275\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/v/Tensordot/Cast_1:0\n\274\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/v/Tensordot/Const:0\n\276\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/v/Tensordot/Const_1:0\n\276\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/v/Tensordot/Const_2:0\n\304\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/v/Tensordot/GatherV2/axis:0\n\277\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/v/Tensordot/GatherV2:0\n\306\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/v/Tensordot/GatherV2_1/axis:0\n\301\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/v/Tensordot/GatherV2_1:0\n\305\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/v/Tensordot/GreaterEqual/y:0\n\303\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/v/Tensordot/GreaterEqual:0\n\275\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/v/Tensordot/Less/y:0\n\273\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/v/Tensordot/Less:0\n\277\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/v/Tensordot/ListDiff:0\n\277\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/v/Tensordot/ListDiff:1\n\275\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/v/Tensordot/MatMul:0\n\273\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/v/Tensordot/Prod:0\n\275\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/v/Tensordot/Prod_1:0\n\273\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/v/Tensordot/Rank:0\n\276\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/v/Tensordot/Reshape:0\n\306\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/v/Tensordot/Reshape_1/shape:0\n\300\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/v/Tensordot/Reshape_1:0\n\274\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/v/Tensordot/Shape:0\n\272\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/v/Tensordot/add:0\n\274\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/v/Tensordot/add_1:0\n\273\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/v/Tensordot/axes:0\n\302\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/v/Tensordot/concat/axis:0\n\275\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/v/Tensordot/concat:0\n\304\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/v/Tensordot/concat_1/axis:0\n\277\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/v/Tensordot/concat_1:0\n\304\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/v/Tensordot/concat_2/axis:0\n\277\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/v/Tensordot/concat_2:0\n\272\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/v/Tensordot/mul:0\n\274\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/v/Tensordot/mul_1:0\n\302\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/v/Tensordot/range/delta:0\n\302\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/v/Tensordot/range/start:0\n\274\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/v/Tensordot/range:0\n\274\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/v/Tensordot/stack:0\n\300\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/v/Tensordot/transpose:0\n\307\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/v/Tensordot/transpose_1/perm:0\n\302\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/v/Tensordot/transpose_1:0\n\266\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_0/self_attention/multihead_attention/v/Tensordot:0\n\232\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/ffn/ExpandDims/dim:0\n\226\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/ffn/ExpandDims:0\n\223\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/ffn/Reshape:0\n\235\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/ffn/Reshape_1/shape/2:0\n\233\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/ffn/Reshape_1/shape:0\n\225\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/ffn/Reshape_1:0\n\221\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/ffn/Shape:0\n\223\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/ffn/Squeeze:0\n\227\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/ffn/concat/axis:0\n\233\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/ffn/concat/values_0:0\n\233\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/ffn/concat/values_1:0\n\222\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/ffn/concat:0\n\231\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/ffn/conv1/BiasAdd:0\n\226\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/ffn/conv1/Relu:0\n\240\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/ffn/conv1/Tensordot/Cast:0\n\242\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/ffn/conv1/Tensordot/Cast_1:0\n\241\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/ffn/conv1/Tensordot/Const:0\n\243\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/ffn/conv1/Tensordot/Const_1:0\n\243\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/ffn/conv1/Tensordot/Const_2:0\n\251\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/ffn/conv1/Tensordot/GatherV2/axis:0\n\244\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/ffn/conv1/Tensordot/GatherV2:0\n\253\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/ffn/conv1/Tensordot/GatherV2_1/axis:0\n\246\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/ffn/conv1/Tensordot/GatherV2_1:0\n\252\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/ffn/conv1/Tensordot/GreaterEqual/y:0\n\250\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/ffn/conv1/Tensordot/GreaterEqual:0\n\242\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/ffn/conv1/Tensordot/Less/y:0\n\240\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/ffn/conv1/Tensordot/Less:0\n\244\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/ffn/conv1/Tensordot/ListDiff:0\n\244\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/ffn/conv1/Tensordot/ListDiff:1\n\242\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/ffn/conv1/Tensordot/MatMul:0\n\240\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/ffn/conv1/Tensordot/Prod:0\n\242\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/ffn/conv1/Tensordot/Prod_1:0\n\240\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/ffn/conv1/Tensordot/Rank:0\n\243\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/ffn/conv1/Tensordot/Reshape:0\n\253\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/ffn/conv1/Tensordot/Reshape_1/shape:0\n\245\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/ffn/conv1/Tensordot/Reshape_1:0\n\241\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/ffn/conv1/Tensordot/Shape:0\n\237\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/ffn/conv1/Tensordot/add:0\n\241\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/ffn/conv1/Tensordot/add_1:0\n\240\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/ffn/conv1/Tensordot/axes:0\n\247\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/ffn/conv1/Tensordot/concat/axis:0\n\242\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/ffn/conv1/Tensordot/concat:0\n\251\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/ffn/conv1/Tensordot/concat_1/axis:0\n\244\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/ffn/conv1/Tensordot/concat_1:0\n\251\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/ffn/conv1/Tensordot/concat_2/axis:0\n\244\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/ffn/conv1/Tensordot/concat_2:0\n\237\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/ffn/conv1/Tensordot/mul:0\n\241\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/ffn/conv1/Tensordot/mul_1:0\n\247\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/ffn/conv1/Tensordot/range/delta:0\n\247\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/ffn/conv1/Tensordot/range/start:0\n\241\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/ffn/conv1/Tensordot/range:0\n\241\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/ffn/conv1/Tensordot/stack:0\n\245\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/ffn/conv1/Tensordot/transpose:0\n\254\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/ffn/conv1/Tensordot/transpose_1/perm:0\n\247\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/ffn/conv1/Tensordot/transpose_1:0\n\233\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/ffn/conv1/Tensordot:0\n\231\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/ffn/conv2/BiasAdd:0\n\240\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/ffn/conv2/Tensordot/Cast:0\n\242\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/ffn/conv2/Tensordot/Cast_1:0\n\241\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/ffn/conv2/Tensordot/Const:0\n\243\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/ffn/conv2/Tensordot/Const_1:0\n\243\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/ffn/conv2/Tensordot/Const_2:0\n\251\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/ffn/conv2/Tensordot/GatherV2/axis:0\n\244\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/ffn/conv2/Tensordot/GatherV2:0\n\253\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/ffn/conv2/Tensordot/GatherV2_1/axis:0\n\246\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/ffn/conv2/Tensordot/GatherV2_1:0\n\252\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/ffn/conv2/Tensordot/GreaterEqual/y:0\n\250\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/ffn/conv2/Tensordot/GreaterEqual:0\n\242\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/ffn/conv2/Tensordot/Less/y:0\n\240\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/ffn/conv2/Tensordot/Less:0\n\244\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/ffn/conv2/Tensordot/ListDiff:0\n\244\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/ffn/conv2/Tensordot/ListDiff:1\n\242\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/ffn/conv2/Tensordot/MatMul:0\n\240\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/ffn/conv2/Tensordot/Prod:0\n\242\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/ffn/conv2/Tensordot/Prod_1:0\n\240\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/ffn/conv2/Tensordot/Rank:0\n\243\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/ffn/conv2/Tensordot/Reshape:0\n\253\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/ffn/conv2/Tensordot/Reshape_1/shape:0\n\245\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/ffn/conv2/Tensordot/Reshape_1:0\n\241\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/ffn/conv2/Tensordot/Shape:0\n\237\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/ffn/conv2/Tensordot/add:0\n\241\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/ffn/conv2/Tensordot/add_1:0\n\240\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/ffn/conv2/Tensordot/axes:0\n\247\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/ffn/conv2/Tensordot/concat/axis:0\n\242\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/ffn/conv2/Tensordot/concat:0\n\251\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/ffn/conv2/Tensordot/concat_1/axis:0\n\244\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/ffn/conv2/Tensordot/concat_1:0\n\251\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/ffn/conv2/Tensordot/concat_2/axis:0\n\244\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/ffn/conv2/Tensordot/concat_2:0\n\237\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/ffn/conv2/Tensordot/mul:0\n\241\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/ffn/conv2/Tensordot/mul_1:0\n\247\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/ffn/conv2/Tensordot/range/delta:0\n\247\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/ffn/conv2/Tensordot/range/start:0\n\241\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/ffn/conv2/Tensordot/range:0\n\241\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/ffn/conv2/Tensordot/stack:0\n\245\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/ffn/conv2/Tensordot/transpose:0\n\254\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/ffn/conv2/Tensordot/transpose_1/perm:0\n\247\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/ffn/conv2/Tensordot/transpose_1:0\n\233\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/ffn/conv2/Tensordot:0\n\241\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/ffn/layer_postprocess/add:0\n\246\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/ffn/layer_prepostprocess/Shape:0\n\261\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/ffn/layer_prepostprocess/layer_norm/Const:0\n\302\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/ffn/layer_prepostprocess/layer_norm/Mean/reduction_indices:0\n\260\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/ffn/layer_prepostprocess/layer_norm/Mean:0\n\304\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/ffn/layer_prepostprocess/layer_norm/Mean_1/reduction_indices:0\n\262\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/ffn/layer_prepostprocess/layer_norm/Mean_1:0\n\261\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/ffn/layer_prepostprocess/layer_norm/Rsqrt:0\n\262\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/ffn/layer_prepostprocess/layer_norm/Square:0\n\257\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/ffn/layer_prepostprocess/layer_norm/add:0\n\261\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/ffn/layer_prepostprocess/layer_norm/add_1:0\n\257\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/ffn/layer_prepostprocess/layer_norm/mul:0\n\261\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/ffn/layer_prepostprocess/layer_norm/mul_1:0\n\257\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/ffn/layer_prepostprocess/layer_norm/sub:0\n\261\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/ffn/layer_prepostprocess/layer_norm/sub_1:0\n\264\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/ffn/layer_prepostprocess/strided_slice/stack:0\n\266\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/ffn/layer_prepostprocess/strided_slice/stack_1:0\n\266\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/ffn/layer_prepostprocess/strided_slice/stack_2:0\n\256\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/ffn/layer_prepostprocess/strided_slice:0\n\266\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/ffn/layer_prepostprocess/strided_slice_1/stack:0\n\270\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/ffn/layer_prepostprocess/strided_slice_1/stack_1:0\n\270\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/ffn/layer_prepostprocess/strided_slice_1/stack_2:0\n\260\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/ffn/layer_prepostprocess/strided_slice_1:0\n\246\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/ffn/pad_reduce/remove/GatherNd:0\n\250\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/ffn/pad_reduce/restore/ScatterNd:0\n\244\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/ffn/pad_reduce/restore/Shape:0\n\252\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/ffn/pad_reduce/restore/concat/axis:0\n\245\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/ffn/pad_reduce/restore/concat:0\n\262\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/ffn/pad_reduce/restore/strided_slice/stack:0\n\264\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/ffn/pad_reduce/restore/strided_slice/stack_1:0\n\264\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/ffn/pad_reduce/restore/strided_slice/stack_2:0\n\254\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/ffn/pad_reduce/restore/strided_slice:0\n\237\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/ffn/strided_slice/stack:0\n\241\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/ffn/strided_slice/stack_1:0\n\241\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/ffn/strided_slice/stack_2:0\n\231\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/ffn/strided_slice:0\n\241\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/ffn/strided_slice_1/stack:0\n\243\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/ffn/strided_slice_1/stack_1:0\n\243\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/ffn/strided_slice_1/stack_2:0\n\233\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/ffn/strided_slice_1:0\n\254\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/layer_postprocess/add:0\n\261\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/layer_prepostprocess/Shape:0\n\274\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/layer_prepostprocess/layer_norm/Const:0\n\315\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/layer_prepostprocess/layer_norm/Mean/reduction_indices:0\n\273\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/layer_prepostprocess/layer_norm/Mean:0\n\317\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/layer_prepostprocess/layer_norm/Mean_1/reduction_indices:0\n\275\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/layer_prepostprocess/layer_norm/Mean_1:0\n\274\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/layer_prepostprocess/layer_norm/Rsqrt:0\n\275\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/layer_prepostprocess/layer_norm/Square:0\n\272\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/layer_prepostprocess/layer_norm/add:0\n\274\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/layer_prepostprocess/layer_norm/add_1:0\n\272\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/layer_prepostprocess/layer_norm/mul:0\n\274\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/layer_prepostprocess/layer_norm/mul_1:0\n\272\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/layer_prepostprocess/layer_norm/sub:0\n\274\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/layer_prepostprocess/layer_norm/sub_1:0\n\277\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/layer_prepostprocess/strided_slice/stack:0\n\301\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/layer_prepostprocess/strided_slice/stack_1:0\n\301\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/layer_prepostprocess/strided_slice/stack_2:0\n\271\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/layer_prepostprocess/strided_slice:0\n\301\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/layer_prepostprocess/strided_slice_1/stack:0\n\303\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/layer_prepostprocess/strided_slice_1/stack_1:0\n\303\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/layer_prepostprocess/strided_slice_1/stack_2:0\n\273\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/layer_prepostprocess/strided_slice_1:0\n\344\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/combine_heads/combine_last_two_dimensions/Reshape/shape/2:0\n\342\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/combine_heads/combine_last_two_dimensions/Reshape/shape:0\n\334\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/combine_heads/combine_last_two_dimensions/Reshape:0\n\332\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/combine_heads/combine_last_two_dimensions/Shape:0\n\350\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/combine_heads/combine_last_two_dimensions/strided_slice/stack:0\n\352\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/combine_heads/combine_last_two_dimensions/strided_slice/stack_1:0\n\352\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/combine_heads/combine_last_two_dimensions/strided_slice/stack_2:0\n\342\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/combine_heads/combine_last_two_dimensions/strided_slice:0\n\352\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/combine_heads/combine_last_two_dimensions/strided_slice_1/stack:0\n\354\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/combine_heads/combine_last_two_dimensions/strided_slice_1/stack_1:0\n\354\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/combine_heads/combine_last_two_dimensions/strided_slice_1/stack_2:0\n\344\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/combine_heads/combine_last_two_dimensions/strided_slice_1:0\n\307\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/combine_heads/transpose/perm:0\n\302\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/combine_heads/transpose:0\n\313\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/dot_product_attention/FloorMod/x:0\n\313\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/dot_product_attention/FloorMod/y:0\n\311\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/dot_product_attention/FloorMod:0\n\307\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/dot_product_attention/MatMul:0\n\311\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/dot_product_attention/MatMul_1:0\n\326\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/dot_product_attention/Max/reduction_indices:0\n\304\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/dot_product_attention/Max:0\n\321\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/dot_product_attention/Pad/paddings/0_1:0\n\321\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/dot_product_attention/Pad/paddings/1_1:0\n\321\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/dot_product_attention/Pad/paddings/2_1:0\n\321\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/dot_product_attention/Pad/paddings/3/0:0\n\317\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/dot_product_attention/Pad/paddings/3:0\n\315\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/dot_product_attention/Pad/paddings:0\n\304\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/dot_product_attention/Pad:0\n\306\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/dot_product_attention/Pow/y:0\n\304\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/dot_product_attention/Pow:0\n\306\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/dot_product_attention/Shape:0\n\304\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/dot_product_attention/add:0\n\316\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/dot_product_attention/attention/tag:0\n\312\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/dot_product_attention/attention:0\n\322\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/dot_product_attention/attention_weights:0\n\345\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/dot_product_attention/split_last_dimension/Reshape/shape/3:0\n\345\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/dot_product_attention/split_last_dimension/Reshape/shape/4:0\n\343\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/dot_product_attention/split_last_dimension/Reshape/shape:0\n\335\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/dot_product_attention/split_last_dimension/Reshape:0\n\333\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/dot_product_attention/split_last_dimension/Shape:0\n\351\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/dot_product_attention/split_last_dimension/strided_slice/stack:0\n\353\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/dot_product_attention/split_last_dimension/strided_slice/stack_1:0\n\353\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/dot_product_attention/split_last_dimension/strided_slice/stack_2:0\n\343\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/dot_product_attention/split_last_dimension/strided_slice:0\n\353\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/dot_product_attention/split_last_dimension/strided_slice_1/stack:0\n\355\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/dot_product_attention/split_last_dimension/strided_slice_1/stack_1:0\n\355\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/dot_product_attention/split_last_dimension/strided_slice_1/stack_2:0\n\345\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/dot_product_attention/split_last_dimension/strided_slice_1:0\n\353\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/dot_product_attention/split_last_dimension/strided_slice_2/stack:0\n\355\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/dot_product_attention/split_last_dimension/strided_slice_2/stack_1:0\n\355\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/dot_product_attention/split_last_dimension/strided_slice_2/stack_2:0\n\345\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/dot_product_attention/split_last_dimension/strided_slice_2:0\n\324\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/dot_product_attention/strided_slice/stack:0\n\326\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/dot_product_attention/strided_slice/stack_1:0\n\326\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/dot_product_attention/strided_slice/stack_2:0\n\316\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/dot_product_attention/strided_slice:0\n\326\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/dot_product_attention/strided_slice_1/stack:0\n\330\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/dot_product_attention/strided_slice_1/stack_1:0\n\330\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/dot_product_attention/strided_slice_1/stack_2:0\n\320\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/dot_product_attention/strided_slice_1:0\n\326\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/dot_product_attention/strided_slice_2/stack:0\n\330\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/dot_product_attention/strided_slice_2/stack_1:0\n\330\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/dot_product_attention/strided_slice_2/stack_2:0\n\320\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/dot_product_attention/strided_slice_2:0\n\317\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/dot_product_attention/transpose/perm:0\n\312\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/dot_product_attention/transpose:0\n\273\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/k/Tensordot/Cast:0\n\275\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/k/Tensordot/Cast_1:0\n\274\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/k/Tensordot/Const:0\n\276\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/k/Tensordot/Const_1:0\n\276\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/k/Tensordot/Const_2:0\n\304\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/k/Tensordot/GatherV2/axis:0\n\277\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/k/Tensordot/GatherV2:0\n\306\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/k/Tensordot/GatherV2_1/axis:0\n\301\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/k/Tensordot/GatherV2_1:0\n\305\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/k/Tensordot/GreaterEqual/y:0\n\303\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/k/Tensordot/GreaterEqual:0\n\275\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/k/Tensordot/Less/y:0\n\273\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/k/Tensordot/Less:0\n\277\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/k/Tensordot/ListDiff:0\n\277\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/k/Tensordot/ListDiff:1\n\275\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/k/Tensordot/MatMul:0\n\273\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/k/Tensordot/Prod:0\n\275\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/k/Tensordot/Prod_1:0\n\273\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/k/Tensordot/Rank:0\n\276\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/k/Tensordot/Reshape:0\n\306\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/k/Tensordot/Reshape_1/shape:0\n\300\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/k/Tensordot/Reshape_1:0\n\274\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/k/Tensordot/Shape:0\n\272\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/k/Tensordot/add:0\n\274\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/k/Tensordot/add_1:0\n\273\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/k/Tensordot/axes:0\n\302\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/k/Tensordot/concat/axis:0\n\275\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/k/Tensordot/concat:0\n\304\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/k/Tensordot/concat_1/axis:0\n\277\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/k/Tensordot/concat_1:0\n\304\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/k/Tensordot/concat_2/axis:0\n\277\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/k/Tensordot/concat_2:0\n\272\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/k/Tensordot/mul:0\n\274\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/k/Tensordot/mul_1:0\n\302\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/k/Tensordot/range/delta:0\n\302\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/k/Tensordot/range/start:0\n\274\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/k/Tensordot/range:0\n\274\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/k/Tensordot/stack:0\n\300\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/k/Tensordot/transpose:0\n\307\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/k/Tensordot/transpose_1/perm:0\n\302\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/k/Tensordot/transpose_1:0\n\266\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/k/Tensordot:0\n\260\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/mul/y:0\n\256\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/mul:0\n\312\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/output_transform/Tensordot/Cast:0\n\314\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/output_transform/Tensordot/Cast_1:0\n\313\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/output_transform/Tensordot/Const:0\n\315\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/output_transform/Tensordot/Const_1:0\n\315\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/output_transform/Tensordot/Const_2:0\n\323\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/output_transform/Tensordot/GatherV2/axis:0\n\316\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/output_transform/Tensordot/GatherV2:0\n\325\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/output_transform/Tensordot/GatherV2_1/axis:0\n\320\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/output_transform/Tensordot/GatherV2_1:0\n\324\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/output_transform/Tensordot/GreaterEqual/y:0\n\322\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/output_transform/Tensordot/GreaterEqual:0\n\314\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/output_transform/Tensordot/Less/y:0\n\312\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/output_transform/Tensordot/Less:0\n\316\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/output_transform/Tensordot/ListDiff:0\n\316\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/output_transform/Tensordot/ListDiff:1\n\314\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/output_transform/Tensordot/MatMul:0\n\312\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/output_transform/Tensordot/Prod:0\n\314\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/output_transform/Tensordot/Prod_1:0\n\312\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/output_transform/Tensordot/Rank:0\n\315\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/output_transform/Tensordot/Reshape:0\n\325\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/output_transform/Tensordot/Reshape_1/shape:0\n\317\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/output_transform/Tensordot/Reshape_1:0\n\313\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/output_transform/Tensordot/Shape:0\n\311\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/output_transform/Tensordot/add:0\n\313\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/output_transform/Tensordot/add_1:0\n\312\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/output_transform/Tensordot/axes:0\n\321\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/output_transform/Tensordot/concat/axis:0\n\314\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/output_transform/Tensordot/concat:0\n\323\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/output_transform/Tensordot/concat_1/axis:0\n\316\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/output_transform/Tensordot/concat_1:0\n\323\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/output_transform/Tensordot/concat_2/axis:0\n\316\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/output_transform/Tensordot/concat_2:0\n\311\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/output_transform/Tensordot/mul:0\n\313\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/output_transform/Tensordot/mul_1:0\n\321\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/output_transform/Tensordot/range/delta:0\n\321\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/output_transform/Tensordot/range/start:0\n\313\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/output_transform/Tensordot/range:0\n\313\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/output_transform/Tensordot/stack:0\n\317\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/output_transform/Tensordot/transpose:0\n\326\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/output_transform/Tensordot/transpose_1/perm:0\n\321\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/output_transform/Tensordot/transpose_1:0\n\305\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/output_transform/Tensordot:0\n\273\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/q/Tensordot/Cast:0\n\275\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/q/Tensordot/Cast_1:0\n\274\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/q/Tensordot/Const:0\n\276\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/q/Tensordot/Const_1:0\n\276\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/q/Tensordot/Const_2:0\n\304\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/q/Tensordot/GatherV2/axis:0\n\277\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/q/Tensordot/GatherV2:0\n\306\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/q/Tensordot/GatherV2_1/axis:0\n\301\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/q/Tensordot/GatherV2_1:0\n\305\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/q/Tensordot/GreaterEqual/y:0\n\303\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/q/Tensordot/GreaterEqual:0\n\275\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/q/Tensordot/Less/y:0\n\273\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/q/Tensordot/Less:0\n\277\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/q/Tensordot/ListDiff:0\n\277\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/q/Tensordot/ListDiff:1\n\275\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/q/Tensordot/MatMul:0\n\273\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/q/Tensordot/Prod:0\n\275\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/q/Tensordot/Prod_1:0\n\273\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/q/Tensordot/Rank:0\n\276\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/q/Tensordot/Reshape:0\n\306\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/q/Tensordot/Reshape_1/shape:0\n\300\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/q/Tensordot/Reshape_1:0\n\274\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/q/Tensordot/Shape:0\n\272\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/q/Tensordot/add:0\n\274\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/q/Tensordot/add_1:0\n\273\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/q/Tensordot/axes:0\n\302\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/q/Tensordot/concat/axis:0\n\275\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/q/Tensordot/concat:0\n\304\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/q/Tensordot/concat_1/axis:0\n\277\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/q/Tensordot/concat_1:0\n\304\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/q/Tensordot/concat_2/axis:0\n\277\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/q/Tensordot/concat_2:0\n\272\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/q/Tensordot/mul:0\n\274\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/q/Tensordot/mul_1:0\n\302\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/q/Tensordot/range/delta:0\n\302\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/q/Tensordot/range/start:0\n\274\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/q/Tensordot/range:0\n\274\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/q/Tensordot/stack:0\n\300\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/q/Tensordot/transpose:0\n\307\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/q/Tensordot/transpose_1/perm:0\n\302\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/q/Tensordot/transpose_1:0\n\266\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/q/Tensordot:0\n\333\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/split_heads/split_last_dimension/Reshape/shape/2:0\n\333\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/split_heads/split_last_dimension/Reshape/shape/3:0\n\331\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/split_heads/split_last_dimension/Reshape/shape:0\n\323\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/split_heads/split_last_dimension/Reshape:0\n\321\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/split_heads/split_last_dimension/Shape:0\n\337\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/split_heads/split_last_dimension/strided_slice/stack:0\n\341\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/split_heads/split_last_dimension/strided_slice/stack_1:0\n\341\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/split_heads/split_last_dimension/strided_slice/stack_2:0\n\331\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/split_heads/split_last_dimension/strided_slice:0\n\341\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/split_heads/split_last_dimension/strided_slice_1/stack:0\n\343\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/split_heads/split_last_dimension/strided_slice_1/stack_1:0\n\343\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/split_heads/split_last_dimension/strided_slice_1/stack_2:0\n\333\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/split_heads/split_last_dimension/strided_slice_1:0\n\305\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/split_heads/transpose/perm:0\n\300\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/split_heads/transpose:0\n\335\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/split_heads_1/split_last_dimension/Reshape/shape/2:0\n\335\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/split_heads_1/split_last_dimension/Reshape/shape/3:0\n\333\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/split_heads_1/split_last_dimension/Reshape/shape:0\n\325\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/split_heads_1/split_last_dimension/Reshape:0\n\323\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/split_heads_1/split_last_dimension/Shape:0\n\341\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/split_heads_1/split_last_dimension/strided_slice/stack:0\n\343\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/split_heads_1/split_last_dimension/strided_slice/stack_1:0\n\343\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/split_heads_1/split_last_dimension/strided_slice/stack_2:0\n\333\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/split_heads_1/split_last_dimension/strided_slice:0\n\343\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/split_heads_1/split_last_dimension/strided_slice_1/stack:0\n\345\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/split_heads_1/split_last_dimension/strided_slice_1/stack_1:0\n\345\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/split_heads_1/split_last_dimension/strided_slice_1/stack_2:0\n\335\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/split_heads_1/split_last_dimension/strided_slice_1:0\n\307\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/split_heads_1/transpose/perm:0\n\302\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/split_heads_1/transpose:0\n\335\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/split_heads_2/split_last_dimension/Reshape/shape/2:0\n\335\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/split_heads_2/split_last_dimension/Reshape/shape/3:0\n\333\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/split_heads_2/split_last_dimension/Reshape/shape:0\n\325\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/split_heads_2/split_last_dimension/Reshape:0\n\323\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/split_heads_2/split_last_dimension/Shape:0\n\341\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/split_heads_2/split_last_dimension/strided_slice/stack:0\n\343\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/split_heads_2/split_last_dimension/strided_slice/stack_1:0\n\343\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/split_heads_2/split_last_dimension/strided_slice/stack_2:0\n\333\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/split_heads_2/split_last_dimension/strided_slice:0\n\343\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/split_heads_2/split_last_dimension/strided_slice_1/stack:0\n\345\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/split_heads_2/split_last_dimension/strided_slice_1/stack_1:0\n\345\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/split_heads_2/split_last_dimension/strided_slice_1/stack_2:0\n\335\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/split_heads_2/split_last_dimension/strided_slice_1:0\n\307\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/split_heads_2/transpose/perm:0\n\302\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/split_heads_2/transpose:0\n\273\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/v/Tensordot/Cast:0\n\275\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/v/Tensordot/Cast_1:0\n\274\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/v/Tensordot/Const:0\n\276\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/v/Tensordot/Const_1:0\n\276\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/v/Tensordot/Const_2:0\n\304\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/v/Tensordot/GatherV2/axis:0\n\277\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/v/Tensordot/GatherV2:0\n\306\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/v/Tensordot/GatherV2_1/axis:0\n\301\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/v/Tensordot/GatherV2_1:0\n\305\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/v/Tensordot/GreaterEqual/y:0\n\303\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/v/Tensordot/GreaterEqual:0\n\275\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/v/Tensordot/Less/y:0\n\273\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/v/Tensordot/Less:0\n\277\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/v/Tensordot/ListDiff:0\n\277\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/v/Tensordot/ListDiff:1\n\275\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/v/Tensordot/MatMul:0\n\273\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/v/Tensordot/Prod:0\n\275\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/v/Tensordot/Prod_1:0\n\273\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/v/Tensordot/Rank:0\n\276\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/v/Tensordot/Reshape:0\n\306\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/v/Tensordot/Reshape_1/shape:0\n\300\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/v/Tensordot/Reshape_1:0\n\274\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/v/Tensordot/Shape:0\n\272\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/v/Tensordot/add:0\n\274\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/v/Tensordot/add_1:0\n\273\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/v/Tensordot/axes:0\n\302\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/v/Tensordot/concat/axis:0\n\275\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/v/Tensordot/concat:0\n\304\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/v/Tensordot/concat_1/axis:0\n\277\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/v/Tensordot/concat_1:0\n\304\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/v/Tensordot/concat_2/axis:0\n\277\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/v/Tensordot/concat_2:0\n\272\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/v/Tensordot/mul:0\n\274\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/v/Tensordot/mul_1:0\n\302\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/v/Tensordot/range/delta:0\n\302\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/v/Tensordot/range/start:0\n\274\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/v/Tensordot/range:0\n\274\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/v/Tensordot/stack:0\n\300\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/v/Tensordot/transpose:0\n\307\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/v/Tensordot/transpose_1/perm:0\n\302\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/v/Tensordot/transpose_1:0\n\266\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_1/self_attention/multihead_attention/v/Tensordot:0\n\232\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_prepostprocess/Shape:0\n\245\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_prepostprocess/layer_norm/Const:0\n\266\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_prepostprocess/layer_norm/Mean/reduction_indices:0\n\244\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_prepostprocess/layer_norm/Mean:0\n\270\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_prepostprocess/layer_norm/Mean_1/reduction_indices:0\n\246\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_prepostprocess/layer_norm/Mean_1:0\n\245\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_prepostprocess/layer_norm/Rsqrt:0\n\246\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_prepostprocess/layer_norm/Square:0\n\243\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_prepostprocess/layer_norm/add:0\n\245\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_prepostprocess/layer_norm/add_1:0\n\243\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_prepostprocess/layer_norm/mul:0\n\245\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_prepostprocess/layer_norm/mul_1:0\n\243\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_prepostprocess/layer_norm/sub:0\n\245\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_prepostprocess/layer_norm/sub_1:0\n\250\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_prepostprocess/strided_slice/stack:0\n\252\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_prepostprocess/strided_slice/stack_1:0\n\252\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_prepostprocess/strided_slice/stack_2:0\n\242\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_prepostprocess/strided_slice:0\n\252\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_prepostprocess/strided_slice_1/stack:0\n\254\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_prepostprocess/strided_slice_1/stack_1:0\n\254\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_prepostprocess/strided_slice_1/stack_2:0\n\244\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/layer_prepostprocess/strided_slice_1:0\n\231\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/pad_reduce/get_ids/Less/y:0\n\227\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/pad_reduce/get_ids/Less:0\n\240\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/pad_reduce/get_ids/Reshape/shape:0\n\232\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/pad_reduce/get_ids/Reshape:0\n\230\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/pad_reduce/get_ids/Shape:0\n\232\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/pad_reduce/get_ids/ToInt32:0\n\230\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/pad_reduce/get_ids/Where:0\n\246\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/pad_reduce/get_ids/strided_slice/stack:0\n\250\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/pad_reduce/get_ids/strided_slice/stack_1:0\n\250\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/pad_reduce/get_ids/strided_slice/stack_2:0\n\240\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/pad_reduce/get_ids/strided_slice:0\n\205\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/sub/x:0\n\203\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/encoder/sub:0\n}cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/mul/y:0\n{cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/mul:0\n\213\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/strided_slice/stack:0\n\215\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/strided_slice/stack_1:0\n\215\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/strided_slice/stack_2:0\n\205\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/strided_slice:0\n\215\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/strided_slice_1/stack:0\n\217\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/strided_slice_1/stack_1:0\n\217\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/strided_slice_1/stack_2:0\n\207\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/strided_slice_1:0\n\234\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/target_space_embedding/GatherV2/axis:0\n\237\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/target_space_embedding/GatherV2/indices:0\n\227\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/target_space_embedding/GatherV2:0\n\265\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/target_space_embedding/convert_gradient_to_tensor_HBc3xYw22Mw:0\nocs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/switch_f:0\n\202\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/symbol_modality_8164_128/shared/mul_1:0\022s\nPcs_similarity_transformer/body/string_embedding/encoder/layer_0/ffn/conv2/bias:0\022\037Read_55/ReadVariableOp/Switch:0\022u\nRcs_similarity_transformer/body/string_embedding/encoder/layer_1/ffn/conv2/kernel:0\022\037Read_66/ReadVariableOp/Switch:0\022s\nPcs_similarity_transformer/body/string_embedding/encoder/layer_1/ffn/conv2/bias:0\022\037Read_67/ReadVariableOp/Switch:0\022u\nRcs_similarity_transformer/body/string_embedding/encoder/layer_0/ffn/conv2/kernel:0\022\037Read_54/ReadVariableOp/Switch:0\022\245\001\n\201\001cs_similarity_transformer/body/string_embedding/encoder/layer_0/self_attention/layer_prepostprocess/layer_norm/layer_norm_scale:0\022\037Read_44/ReadVariableOp/Switch:0\022\237\001\n|cs_similarity_transformer/body/string_embedding/encoder/layer_1/self_attention/multihead_attention/output_transform/kernel:0\022\037Read_61/ReadVariableOp/Switch:0\022\214\001\nics_similarity_transformer/body/string_embedding/encoder/layer_prepostprocess/layer_norm/layer_norm_bias:0\022\037Read_69/ReadVariableOp/Switch:0\022\220\001\nmcs_similarity_transformer/body/string_embedding/encoder/layer_0/self_attention/multihead_attention/v/kernel:0\022\037Read_48/ReadVariableOp/Switch:0\022\244\001\n\200\001cs_similarity_transformer/body/string_embedding/encoder/layer_0/self_attention/layer_prepostprocess/layer_norm/layer_norm_bias:0\022\037Read_45/ReadVariableOp/Switch:0\022s\nPcs_similarity_transformer/body/string_embedding/encoder/layer_0/ffn/conv1/bias:0\022\037Read_53/ReadVariableOp/Switch:0\022r\nOcs_similarity_transformer/body/string_embedding/target_space_embedding/kernel:0\022\037Read_43/ReadVariableOp/Switch:0\022\220\001\nmcs_similarity_transformer/body/string_embedding/encoder/layer_0/self_attention/multihead_attention/q/kernel:0\022\037Read_46/ReadVariableOp/Switch:0\022s\nPcs_similarity_transformer/body/string_embedding/encoder/layer_1/ffn/conv1/bias:0\022\037Read_65/ReadVariableOp/Switch:0\022\244\001\n\200\001cs_similarity_transformer/body/string_embedding/encoder/layer_1/self_attention/layer_prepostprocess/layer_norm/layer_norm_bias:0\022\037Read_57/ReadVariableOp/Switch:0\022\230\001\nucs_similarity_transformer/body/string_embedding/encoder/layer_0/ffn/layer_prepostprocess/layer_norm/layer_norm_bias:0\022\037Read_51/ReadVariableOp/Switch:0\022\214\002\n\202\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/symbol_modality_8164_128/shared/mul_1:0\022\204\001cs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/string_embedding/Shape/Switch:0\022u\nRcs_similarity_transformer/body/string_embedding/encoder/layer_1/ffn/conv1/kernel:0\022\037Read_64/ReadVariableOp/Switch:0\022\220\001\nmcs_similarity_transformer/body/string_embedding/encoder/layer_1/self_attention/multihead_attention/k/kernel:0\022\037Read_59/ReadVariableOp/Switch:0\022u\nRcs_similarity_transformer/body/string_embedding/encoder/layer_0/ffn/conv1/kernel:0\022\037Read_52/ReadVariableOp/Switch:0\022\245\001\n\201\001cs_similarity_transformer/body/string_embedding/encoder/layer_1/self_attention/layer_prepostprocess/layer_norm/layer_norm_scale:0\022\037Read_56/ReadVariableOp/Switch:0\022\230\001\nucs_similarity_transformer/body/string_embedding/encoder/layer_1/ffn/layer_prepostprocess/layer_norm/layer_norm_bias:0\022\037Read_63/ReadVariableOp/Switch:0\022\231\001\nvcs_similarity_transformer/body/string_embedding/encoder/layer_1/ffn/layer_prepostprocess/layer_norm/layer_norm_scale:0\022\037Read_62/ReadVariableOp/Switch:0\022\215\001\njcs_similarity_transformer/body/string_embedding/encoder/layer_prepostprocess/layer_norm/layer_norm_scale:0\022\037Read_68/ReadVariableOp/Switch:0\022\237\001\n|cs_similarity_transformer/body/string_embedding/encoder/layer_0/self_attention/multihead_attention/output_transform/kernel:0\022\037Read_49/ReadVariableOp/Switch:0\022\220\001\nmcs_similarity_transformer/body/string_embedding/encoder/layer_0/self_attention/multihead_attention/k/kernel:0\022\037Read_47/ReadVariableOp/Switch:0\022\220\001\nmcs_similarity_transformer/body/string_embedding/encoder/layer_1/self_attention/multihead_attention/v/kernel:0\022\037Read_60/ReadVariableOp/Switch:0\022\220\001\nmcs_similarity_transformer/body/string_embedding/encoder/layer_1/self_attention/multihead_attention/q/kernel:0\022\037Read_58/ReadVariableOp/Switch:0\022\340\001\nncs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/pred_id:0\022ncs_similarity_transformer/parallel_0_5/cs_similarity_transformer/cs_similarity_transformer/body/cond/pred_id:0\022\231\001\nvcs_similarity_transformer/body/string_embedding/encoder/layer_0/ffn/layer_prepostprocess/layer_norm/layer_norm_scale:0\022\037Read_50/ReadVariableOp/Switch:0"
      }
    }
  }
  collection_def {
    key: "global_step"
    value {
      bytes_list {
        value: "\n\rglobal_step:0\022\022global_step/Assign\032\022global_step/read:02\037global_step/Initializer/zeros:0"
      }
    }
  }
  collection_def {
    key: "saved_model_main_op"
    value {
      node_list {
        value: "group_deps"
      }
    }
  }
  collection_def {
    key: "trainable_variables"
    value {
      bytes_list {
        value: "\nEcs_similarity_transformer/symbol_modality_8164_128/shared/weights_0:0\022Jcs_similarity_transformer/symbol_modality_8164_128/shared/weights_0/Assign\032Ycs_similarity_transformer/symbol_modality_8164_128/shared/weights_0/Read/ReadVariableOp:0(\0012_cs_similarity_transformer/symbol_modality_8164_128/shared/weights_0/Initializer/random_normal:08\001"
        value: "\nEcs_similarity_transformer/symbol_modality_8164_128/shared/weights_1:0\022Jcs_similarity_transformer/symbol_modality_8164_128/shared/weights_1/Assign\032Ycs_similarity_transformer/symbol_modality_8164_128/shared/weights_1/Read/ReadVariableOp:0(\0012_cs_similarity_transformer/symbol_modality_8164_128/shared/weights_1/Initializer/random_normal:08\001"
        value: "\nEcs_similarity_transformer/symbol_modality_8164_128/shared/weights_2:0\022Jcs_similarity_transformer/symbol_modality_8164_128/shared/weights_2/Assign\032Ycs_similarity_transformer/symbol_modality_8164_128/shared/weights_2/Read/ReadVariableOp:0(\0012_cs_similarity_transformer/symbol_modality_8164_128/shared/weights_2/Initializer/random_normal:08\001"
        value: "\nEcs_similarity_transformer/symbol_modality_8164_128/shared/weights_3:0\022Jcs_similarity_transformer/symbol_modality_8164_128/shared/weights_3/Assign\032Ycs_similarity_transformer/symbol_modality_8164_128/shared/weights_3/Read/ReadVariableOp:0(\0012_cs_similarity_transformer/symbol_modality_8164_128/shared/weights_3/Initializer/random_normal:08\001"
        value: "\nEcs_similarity_transformer/symbol_modality_8164_128/shared/weights_4:0\022Jcs_similarity_transformer/symbol_modality_8164_128/shared/weights_4/Assign\032Ycs_similarity_transformer/symbol_modality_8164_128/shared/weights_4/Read/ReadVariableOp:0(\0012_cs_similarity_transformer/symbol_modality_8164_128/shared/weights_4/Initializer/random_normal:08\001"
        value: "\nEcs_similarity_transformer/symbol_modality_8164_128/shared/weights_5:0\022Jcs_similarity_transformer/symbol_modality_8164_128/shared/weights_5/Assign\032Ycs_similarity_transformer/symbol_modality_8164_128/shared/weights_5/Read/ReadVariableOp:0(\0012_cs_similarity_transformer/symbol_modality_8164_128/shared/weights_5/Initializer/random_normal:08\001"
        value: "\nEcs_similarity_transformer/symbol_modality_8164_128/shared/weights_6:0\022Jcs_similarity_transformer/symbol_modality_8164_128/shared/weights_6/Assign\032Ycs_similarity_transformer/symbol_modality_8164_128/shared/weights_6/Read/ReadVariableOp:0(\0012_cs_similarity_transformer/symbol_modality_8164_128/shared/weights_6/Initializer/random_normal:08\001"
        value: "\nEcs_similarity_transformer/symbol_modality_8164_128/shared/weights_7:0\022Jcs_similarity_transformer/symbol_modality_8164_128/shared/weights_7/Assign\032Ycs_similarity_transformer/symbol_modality_8164_128/shared/weights_7/Read/ReadVariableOp:0(\0012_cs_similarity_transformer/symbol_modality_8164_128/shared/weights_7/Initializer/random_normal:08\001"
        value: "\nEcs_similarity_transformer/symbol_modality_8164_128/shared/weights_8:0\022Jcs_similarity_transformer/symbol_modality_8164_128/shared/weights_8/Assign\032Ycs_similarity_transformer/symbol_modality_8164_128/shared/weights_8/Read/ReadVariableOp:0(\0012_cs_similarity_transformer/symbol_modality_8164_128/shared/weights_8/Initializer/random_normal:08\001"
        value: "\nEcs_similarity_transformer/symbol_modality_8164_128/shared/weights_9:0\022Jcs_similarity_transformer/symbol_modality_8164_128/shared/weights_9/Assign\032Ycs_similarity_transformer/symbol_modality_8164_128/shared/weights_9/Read/ReadVariableOp:0(\0012_cs_similarity_transformer/symbol_modality_8164_128/shared/weights_9/Initializer/random_normal:08\001"
        value: "\nFcs_similarity_transformer/symbol_modality_8164_128/shared/weights_10:0\022Kcs_similarity_transformer/symbol_modality_8164_128/shared/weights_10/Assign\032Zcs_similarity_transformer/symbol_modality_8164_128/shared/weights_10/Read/ReadVariableOp:0(\0012`cs_similarity_transformer/symbol_modality_8164_128/shared/weights_10/Initializer/random_normal:08\001"
        value: "\nFcs_similarity_transformer/symbol_modality_8164_128/shared/weights_11:0\022Kcs_similarity_transformer/symbol_modality_8164_128/shared/weights_11/Assign\032Zcs_similarity_transformer/symbol_modality_8164_128/shared/weights_11/Read/ReadVariableOp:0(\0012`cs_similarity_transformer/symbol_modality_8164_128/shared/weights_11/Initializer/random_normal:08\001"
        value: "\nFcs_similarity_transformer/symbol_modality_8164_128/shared/weights_12:0\022Kcs_similarity_transformer/symbol_modality_8164_128/shared/weights_12/Assign\032Zcs_similarity_transformer/symbol_modality_8164_128/shared/weights_12/Read/ReadVariableOp:0(\0012`cs_similarity_transformer/symbol_modality_8164_128/shared/weights_12/Initializer/random_normal:08\001"
        value: "\nFcs_similarity_transformer/symbol_modality_8164_128/shared/weights_13:0\022Kcs_similarity_transformer/symbol_modality_8164_128/shared/weights_13/Assign\032Zcs_similarity_transformer/symbol_modality_8164_128/shared/weights_13/Read/ReadVariableOp:0(\0012`cs_similarity_transformer/symbol_modality_8164_128/shared/weights_13/Initializer/random_normal:08\001"
        value: "\nFcs_similarity_transformer/symbol_modality_8164_128/shared/weights_14:0\022Kcs_similarity_transformer/symbol_modality_8164_128/shared/weights_14/Assign\032Zcs_similarity_transformer/symbol_modality_8164_128/shared/weights_14/Read/ReadVariableOp:0(\0012`cs_similarity_transformer/symbol_modality_8164_128/shared/weights_14/Initializer/random_normal:08\001"
        value: "\nFcs_similarity_transformer/symbol_modality_8164_128/shared/weights_15:0\022Kcs_similarity_transformer/symbol_modality_8164_128/shared/weights_15/Assign\032Zcs_similarity_transformer/symbol_modality_8164_128/shared/weights_15/Read/ReadVariableOp:0(\0012`cs_similarity_transformer/symbol_modality_8164_128/shared/weights_15/Initializer/random_normal:08\001"
        value: "\nMcs_similarity_transformer/body/code_embedding/target_space_embedding/kernel:0\022Rcs_similarity_transformer/body/code_embedding/target_space_embedding/kernel/Assign\032acs_similarity_transformer/body/code_embedding/target_space_embedding/kernel/Read/ReadVariableOp:0(\0012hcs_similarity_transformer/body/code_embedding/target_space_embedding/kernel/Initializer/random_uniform:08\001"
        value: "\n\177cs_similarity_transformer/body/code_embedding/encoder/layer_0/self_attention/layer_prepostprocess/layer_norm/layer_norm_scale:0\022\204\001cs_similarity_transformer/body/code_embedding/encoder/layer_0/self_attention/layer_prepostprocess/layer_norm/layer_norm_scale/Assign\032\223\001cs_similarity_transformer/body/code_embedding/encoder/layer_0/self_attention/layer_prepostprocess/layer_norm/layer_norm_scale/Read/ReadVariableOp:0(\0012\220\001cs_similarity_transformer/body/code_embedding/encoder/layer_0/self_attention/layer_prepostprocess/layer_norm/layer_norm_scale/Initializer/ones:08\001"
        value: "\n~cs_similarity_transformer/body/code_embedding/encoder/layer_0/self_attention/layer_prepostprocess/layer_norm/layer_norm_bias:0\022\203\001cs_similarity_transformer/body/code_embedding/encoder/layer_0/self_attention/layer_prepostprocess/layer_norm/layer_norm_bias/Assign\032\222\001cs_similarity_transformer/body/code_embedding/encoder/layer_0/self_attention/layer_prepostprocess/layer_norm/layer_norm_bias/Read/ReadVariableOp:0(\0012\220\001cs_similarity_transformer/body/code_embedding/encoder/layer_0/self_attention/layer_prepostprocess/layer_norm/layer_norm_bias/Initializer/zeros:08\001"
        value: "\nkcs_similarity_transformer/body/code_embedding/encoder/layer_0/self_attention/multihead_attention/q/kernel:0\022pcs_similarity_transformer/body/code_embedding/encoder/layer_0/self_attention/multihead_attention/q/kernel/Assign\032\177cs_similarity_transformer/body/code_embedding/encoder/layer_0/self_attention/multihead_attention/q/kernel/Read/ReadVariableOp:0(\0012\206\001cs_similarity_transformer/body/code_embedding/encoder/layer_0/self_attention/multihead_attention/q/kernel/Initializer/random_uniform:08\001"
        value: "\nkcs_similarity_transformer/body/code_embedding/encoder/layer_0/self_attention/multihead_attention/k/kernel:0\022pcs_similarity_transformer/body/code_embedding/encoder/layer_0/self_attention/multihead_attention/k/kernel/Assign\032\177cs_similarity_transformer/body/code_embedding/encoder/layer_0/self_attention/multihead_attention/k/kernel/Read/ReadVariableOp:0(\0012\206\001cs_similarity_transformer/body/code_embedding/encoder/layer_0/self_attention/multihead_attention/k/kernel/Initializer/random_uniform:08\001"
        value: "\nkcs_similarity_transformer/body/code_embedding/encoder/layer_0/self_attention/multihead_attention/v/kernel:0\022pcs_similarity_transformer/body/code_embedding/encoder/layer_0/self_attention/multihead_attention/v/kernel/Assign\032\177cs_similarity_transformer/body/code_embedding/encoder/layer_0/self_attention/multihead_attention/v/kernel/Read/ReadVariableOp:0(\0012\206\001cs_similarity_transformer/body/code_embedding/encoder/layer_0/self_attention/multihead_attention/v/kernel/Initializer/random_uniform:08\001"
        value: "\nzcs_similarity_transformer/body/code_embedding/encoder/layer_0/self_attention/multihead_attention/output_transform/kernel:0\022\177cs_similarity_transformer/body/code_embedding/encoder/layer_0/self_attention/multihead_attention/output_transform/kernel/Assign\032\216\001cs_similarity_transformer/body/code_embedding/encoder/layer_0/self_attention/multihead_attention/output_transform/kernel/Read/ReadVariableOp:0(\0012\225\001cs_similarity_transformer/body/code_embedding/encoder/layer_0/self_attention/multihead_attention/output_transform/kernel/Initializer/random_uniform:08\001"
        value: "\ntcs_similarity_transformer/body/code_embedding/encoder/layer_0/ffn/layer_prepostprocess/layer_norm/layer_norm_scale:0\022ycs_similarity_transformer/body/code_embedding/encoder/layer_0/ffn/layer_prepostprocess/layer_norm/layer_norm_scale/Assign\032\210\001cs_similarity_transformer/body/code_embedding/encoder/layer_0/ffn/layer_prepostprocess/layer_norm/layer_norm_scale/Read/ReadVariableOp:0(\0012\205\001cs_similarity_transformer/body/code_embedding/encoder/layer_0/ffn/layer_prepostprocess/layer_norm/layer_norm_scale/Initializer/ones:08\001"
        value: "\nscs_similarity_transformer/body/code_embedding/encoder/layer_0/ffn/layer_prepostprocess/layer_norm/layer_norm_bias:0\022xcs_similarity_transformer/body/code_embedding/encoder/layer_0/ffn/layer_prepostprocess/layer_norm/layer_norm_bias/Assign\032\207\001cs_similarity_transformer/body/code_embedding/encoder/layer_0/ffn/layer_prepostprocess/layer_norm/layer_norm_bias/Read/ReadVariableOp:0(\0012\205\001cs_similarity_transformer/body/code_embedding/encoder/layer_0/ffn/layer_prepostprocess/layer_norm/layer_norm_bias/Initializer/zeros:08\001"
        value: "\nPcs_similarity_transformer/body/code_embedding/encoder/layer_0/ffn/conv1/kernel:0\022Ucs_similarity_transformer/body/code_embedding/encoder/layer_0/ffn/conv1/kernel/Assign\032dcs_similarity_transformer/body/code_embedding/encoder/layer_0/ffn/conv1/kernel/Read/ReadVariableOp:0(\0012kcs_similarity_transformer/body/code_embedding/encoder/layer_0/ffn/conv1/kernel/Initializer/random_uniform:08\001"
        value: "\nNcs_similarity_transformer/body/code_embedding/encoder/layer_0/ffn/conv1/bias:0\022Scs_similarity_transformer/body/code_embedding/encoder/layer_0/ffn/conv1/bias/Assign\032bcs_similarity_transformer/body/code_embedding/encoder/layer_0/ffn/conv1/bias/Read/ReadVariableOp:0(\0012`cs_similarity_transformer/body/code_embedding/encoder/layer_0/ffn/conv1/bias/Initializer/zeros:08\001"
        value: "\nPcs_similarity_transformer/body/code_embedding/encoder/layer_0/ffn/conv2/kernel:0\022Ucs_similarity_transformer/body/code_embedding/encoder/layer_0/ffn/conv2/kernel/Assign\032dcs_similarity_transformer/body/code_embedding/encoder/layer_0/ffn/conv2/kernel/Read/ReadVariableOp:0(\0012kcs_similarity_transformer/body/code_embedding/encoder/layer_0/ffn/conv2/kernel/Initializer/random_uniform:08\001"
        value: "\nNcs_similarity_transformer/body/code_embedding/encoder/layer_0/ffn/conv2/bias:0\022Scs_similarity_transformer/body/code_embedding/encoder/layer_0/ffn/conv2/bias/Assign\032bcs_similarity_transformer/body/code_embedding/encoder/layer_0/ffn/conv2/bias/Read/ReadVariableOp:0(\0012`cs_similarity_transformer/body/code_embedding/encoder/layer_0/ffn/conv2/bias/Initializer/zeros:08\001"
        value: "\n\177cs_similarity_transformer/body/code_embedding/encoder/layer_1/self_attention/layer_prepostprocess/layer_norm/layer_norm_scale:0\022\204\001cs_similarity_transformer/body/code_embedding/encoder/layer_1/self_attention/layer_prepostprocess/layer_norm/layer_norm_scale/Assign\032\223\001cs_similarity_transformer/body/code_embedding/encoder/layer_1/self_attention/layer_prepostprocess/layer_norm/layer_norm_scale/Read/ReadVariableOp:0(\0012\220\001cs_similarity_transformer/body/code_embedding/encoder/layer_1/self_attention/layer_prepostprocess/layer_norm/layer_norm_scale/Initializer/ones:08\001"
        value: "\n~cs_similarity_transformer/body/code_embedding/encoder/layer_1/self_attention/layer_prepostprocess/layer_norm/layer_norm_bias:0\022\203\001cs_similarity_transformer/body/code_embedding/encoder/layer_1/self_attention/layer_prepostprocess/layer_norm/layer_norm_bias/Assign\032\222\001cs_similarity_transformer/body/code_embedding/encoder/layer_1/self_attention/layer_prepostprocess/layer_norm/layer_norm_bias/Read/ReadVariableOp:0(\0012\220\001cs_similarity_transformer/body/code_embedding/encoder/layer_1/self_attention/layer_prepostprocess/layer_norm/layer_norm_bias/Initializer/zeros:08\001"
        value: "\nkcs_similarity_transformer/body/code_embedding/encoder/layer_1/self_attention/multihead_attention/q/kernel:0\022pcs_similarity_transformer/body/code_embedding/encoder/layer_1/self_attention/multihead_attention/q/kernel/Assign\032\177cs_similarity_transformer/body/code_embedding/encoder/layer_1/self_attention/multihead_attention/q/kernel/Read/ReadVariableOp:0(\0012\206\001cs_similarity_transformer/body/code_embedding/encoder/layer_1/self_attention/multihead_attention/q/kernel/Initializer/random_uniform:08\001"
        value: "\nkcs_similarity_transformer/body/code_embedding/encoder/layer_1/self_attention/multihead_attention/k/kernel:0\022pcs_similarity_transformer/body/code_embedding/encoder/layer_1/self_attention/multihead_attention/k/kernel/Assign\032\177cs_similarity_transformer/body/code_embedding/encoder/layer_1/self_attention/multihead_attention/k/kernel/Read/ReadVariableOp:0(\0012\206\001cs_similarity_transformer/body/code_embedding/encoder/layer_1/self_attention/multihead_attention/k/kernel/Initializer/random_uniform:08\001"
        value: "\nkcs_similarity_transformer/body/code_embedding/encoder/layer_1/self_attention/multihead_attention/v/kernel:0\022pcs_similarity_transformer/body/code_embedding/encoder/layer_1/self_attention/multihead_attention/v/kernel/Assign\032\177cs_similarity_transformer/body/code_embedding/encoder/layer_1/self_attention/multihead_attention/v/kernel/Read/ReadVariableOp:0(\0012\206\001cs_similarity_transformer/body/code_embedding/encoder/layer_1/self_attention/multihead_attention/v/kernel/Initializer/random_uniform:08\001"
        value: "\nzcs_similarity_transformer/body/code_embedding/encoder/layer_1/self_attention/multihead_attention/output_transform/kernel:0\022\177cs_similarity_transformer/body/code_embedding/encoder/layer_1/self_attention/multihead_attention/output_transform/kernel/Assign\032\216\001cs_similarity_transformer/body/code_embedding/encoder/layer_1/self_attention/multihead_attention/output_transform/kernel/Read/ReadVariableOp:0(\0012\225\001cs_similarity_transformer/body/code_embedding/encoder/layer_1/self_attention/multihead_attention/output_transform/kernel/Initializer/random_uniform:08\001"
        value: "\ntcs_similarity_transformer/body/code_embedding/encoder/layer_1/ffn/layer_prepostprocess/layer_norm/layer_norm_scale:0\022ycs_similarity_transformer/body/code_embedding/encoder/layer_1/ffn/layer_prepostprocess/layer_norm/layer_norm_scale/Assign\032\210\001cs_similarity_transformer/body/code_embedding/encoder/layer_1/ffn/layer_prepostprocess/layer_norm/layer_norm_scale/Read/ReadVariableOp:0(\0012\205\001cs_similarity_transformer/body/code_embedding/encoder/layer_1/ffn/layer_prepostprocess/layer_norm/layer_norm_scale/Initializer/ones:08\001"
        value: "\nscs_similarity_transformer/body/code_embedding/encoder/layer_1/ffn/layer_prepostprocess/layer_norm/layer_norm_bias:0\022xcs_similarity_transformer/body/code_embedding/encoder/layer_1/ffn/layer_prepostprocess/layer_norm/layer_norm_bias/Assign\032\207\001cs_similarity_transformer/body/code_embedding/encoder/layer_1/ffn/layer_prepostprocess/layer_norm/layer_norm_bias/Read/ReadVariableOp:0(\0012\205\001cs_similarity_transformer/body/code_embedding/encoder/layer_1/ffn/layer_prepostprocess/layer_norm/layer_norm_bias/Initializer/zeros:08\001"
        value: "\nPcs_similarity_transformer/body/code_embedding/encoder/layer_1/ffn/conv1/kernel:0\022Ucs_similarity_transformer/body/code_embedding/encoder/layer_1/ffn/conv1/kernel/Assign\032dcs_similarity_transformer/body/code_embedding/encoder/layer_1/ffn/conv1/kernel/Read/ReadVariableOp:0(\0012kcs_similarity_transformer/body/code_embedding/encoder/layer_1/ffn/conv1/kernel/Initializer/random_uniform:08\001"
        value: "\nNcs_similarity_transformer/body/code_embedding/encoder/layer_1/ffn/conv1/bias:0\022Scs_similarity_transformer/body/code_embedding/encoder/layer_1/ffn/conv1/bias/Assign\032bcs_similarity_transformer/body/code_embedding/encoder/layer_1/ffn/conv1/bias/Read/ReadVariableOp:0(\0012`cs_similarity_transformer/body/code_embedding/encoder/layer_1/ffn/conv1/bias/Initializer/zeros:08\001"
        value: "\nPcs_similarity_transformer/body/code_embedding/encoder/layer_1/ffn/conv2/kernel:0\022Ucs_similarity_transformer/body/code_embedding/encoder/layer_1/ffn/conv2/kernel/Assign\032dcs_similarity_transformer/body/code_embedding/encoder/layer_1/ffn/conv2/kernel/Read/ReadVariableOp:0(\0012kcs_similarity_transformer/body/code_embedding/encoder/layer_1/ffn/conv2/kernel/Initializer/random_uniform:08\001"
        value: "\nNcs_similarity_transformer/body/code_embedding/encoder/layer_1/ffn/conv2/bias:0\022Scs_similarity_transformer/body/code_embedding/encoder/layer_1/ffn/conv2/bias/Assign\032bcs_similarity_transformer/body/code_embedding/encoder/layer_1/ffn/conv2/bias/Read/ReadVariableOp:0(\0012`cs_similarity_transformer/body/code_embedding/encoder/layer_1/ffn/conv2/bias/Initializer/zeros:08\001"
        value: "\nhcs_similarity_transformer/body/code_embedding/encoder/layer_prepostprocess/layer_norm/layer_norm_scale:0\022mcs_similarity_transformer/body/code_embedding/encoder/layer_prepostprocess/layer_norm/layer_norm_scale/Assign\032|cs_similarity_transformer/body/code_embedding/encoder/layer_prepostprocess/layer_norm/layer_norm_scale/Read/ReadVariableOp:0(\0012ycs_similarity_transformer/body/code_embedding/encoder/layer_prepostprocess/layer_norm/layer_norm_scale/Initializer/ones:08\001"
        value: "\ngcs_similarity_transformer/body/code_embedding/encoder/layer_prepostprocess/layer_norm/layer_norm_bias:0\022lcs_similarity_transformer/body/code_embedding/encoder/layer_prepostprocess/layer_norm/layer_norm_bias/Assign\032{cs_similarity_transformer/body/code_embedding/encoder/layer_prepostprocess/layer_norm/layer_norm_bias/Read/ReadVariableOp:0(\0012ycs_similarity_transformer/body/code_embedding/encoder/layer_prepostprocess/layer_norm/layer_norm_bias/Initializer/zeros:08\001"
        value: "\nOcs_similarity_transformer/body/string_embedding/target_space_embedding/kernel:0\022Tcs_similarity_transformer/body/string_embedding/target_space_embedding/kernel/Assign\032ccs_similarity_transformer/body/string_embedding/target_space_embedding/kernel/Read/ReadVariableOp:0(\0012jcs_similarity_transformer/body/string_embedding/target_space_embedding/kernel/Initializer/random_uniform:08\001"
        value: "\n\201\001cs_similarity_transformer/body/string_embedding/encoder/layer_0/self_attention/layer_prepostprocess/layer_norm/layer_norm_scale:0\022\206\001cs_similarity_transformer/body/string_embedding/encoder/layer_0/self_attention/layer_prepostprocess/layer_norm/layer_norm_scale/Assign\032\225\001cs_similarity_transformer/body/string_embedding/encoder/layer_0/self_attention/layer_prepostprocess/layer_norm/layer_norm_scale/Read/ReadVariableOp:0(\0012\222\001cs_similarity_transformer/body/string_embedding/encoder/layer_0/self_attention/layer_prepostprocess/layer_norm/layer_norm_scale/Initializer/ones:08\001"
        value: "\n\200\001cs_similarity_transformer/body/string_embedding/encoder/layer_0/self_attention/layer_prepostprocess/layer_norm/layer_norm_bias:0\022\205\001cs_similarity_transformer/body/string_embedding/encoder/layer_0/self_attention/layer_prepostprocess/layer_norm/layer_norm_bias/Assign\032\224\001cs_similarity_transformer/body/string_embedding/encoder/layer_0/self_attention/layer_prepostprocess/layer_norm/layer_norm_bias/Read/ReadVariableOp:0(\0012\222\001cs_similarity_transformer/body/string_embedding/encoder/layer_0/self_attention/layer_prepostprocess/layer_norm/layer_norm_bias/Initializer/zeros:08\001"
        value: "\nmcs_similarity_transformer/body/string_embedding/encoder/layer_0/self_attention/multihead_attention/q/kernel:0\022rcs_similarity_transformer/body/string_embedding/encoder/layer_0/self_attention/multihead_attention/q/kernel/Assign\032\201\001cs_similarity_transformer/body/string_embedding/encoder/layer_0/self_attention/multihead_attention/q/kernel/Read/ReadVariableOp:0(\0012\210\001cs_similarity_transformer/body/string_embedding/encoder/layer_0/self_attention/multihead_attention/q/kernel/Initializer/random_uniform:08\001"
        value: "\nmcs_similarity_transformer/body/string_embedding/encoder/layer_0/self_attention/multihead_attention/k/kernel:0\022rcs_similarity_transformer/body/string_embedding/encoder/layer_0/self_attention/multihead_attention/k/kernel/Assign\032\201\001cs_similarity_transformer/body/string_embedding/encoder/layer_0/self_attention/multihead_attention/k/kernel/Read/ReadVariableOp:0(\0012\210\001cs_similarity_transformer/body/string_embedding/encoder/layer_0/self_attention/multihead_attention/k/kernel/Initializer/random_uniform:08\001"
        value: "\nmcs_similarity_transformer/body/string_embedding/encoder/layer_0/self_attention/multihead_attention/v/kernel:0\022rcs_similarity_transformer/body/string_embedding/encoder/layer_0/self_attention/multihead_attention/v/kernel/Assign\032\201\001cs_similarity_transformer/body/string_embedding/encoder/layer_0/self_attention/multihead_attention/v/kernel/Read/ReadVariableOp:0(\0012\210\001cs_similarity_transformer/body/string_embedding/encoder/layer_0/self_attention/multihead_attention/v/kernel/Initializer/random_uniform:08\001"
        value: "\n|cs_similarity_transformer/body/string_embedding/encoder/layer_0/self_attention/multihead_attention/output_transform/kernel:0\022\201\001cs_similarity_transformer/body/string_embedding/encoder/layer_0/self_attention/multihead_attention/output_transform/kernel/Assign\032\220\001cs_similarity_transformer/body/string_embedding/encoder/layer_0/self_attention/multihead_attention/output_transform/kernel/Read/ReadVariableOp:0(\0012\227\001cs_similarity_transformer/body/string_embedding/encoder/layer_0/self_attention/multihead_attention/output_transform/kernel/Initializer/random_uniform:08\001"
        value: "\nvcs_similarity_transformer/body/string_embedding/encoder/layer_0/ffn/layer_prepostprocess/layer_norm/layer_norm_scale:0\022{cs_similarity_transformer/body/string_embedding/encoder/layer_0/ffn/layer_prepostprocess/layer_norm/layer_norm_scale/Assign\032\212\001cs_similarity_transformer/body/string_embedding/encoder/layer_0/ffn/layer_prepostprocess/layer_norm/layer_norm_scale/Read/ReadVariableOp:0(\0012\207\001cs_similarity_transformer/body/string_embedding/encoder/layer_0/ffn/layer_prepostprocess/layer_norm/layer_norm_scale/Initializer/ones:08\001"
        value: "\nucs_similarity_transformer/body/string_embedding/encoder/layer_0/ffn/layer_prepostprocess/layer_norm/layer_norm_bias:0\022zcs_similarity_transformer/body/string_embedding/encoder/layer_0/ffn/layer_prepostprocess/layer_norm/layer_norm_bias/Assign\032\211\001cs_similarity_transformer/body/string_embedding/encoder/layer_0/ffn/layer_prepostprocess/layer_norm/layer_norm_bias/Read/ReadVariableOp:0(\0012\207\001cs_similarity_transformer/body/string_embedding/encoder/layer_0/ffn/layer_prepostprocess/layer_norm/layer_norm_bias/Initializer/zeros:08\001"
        value: "\nRcs_similarity_transformer/body/string_embedding/encoder/layer_0/ffn/conv1/kernel:0\022Wcs_similarity_transformer/body/string_embedding/encoder/layer_0/ffn/conv1/kernel/Assign\032fcs_similarity_transformer/body/string_embedding/encoder/layer_0/ffn/conv1/kernel/Read/ReadVariableOp:0(\0012mcs_similarity_transformer/body/string_embedding/encoder/layer_0/ffn/conv1/kernel/Initializer/random_uniform:08\001"
        value: "\nPcs_similarity_transformer/body/string_embedding/encoder/layer_0/ffn/conv1/bias:0\022Ucs_similarity_transformer/body/string_embedding/encoder/layer_0/ffn/conv1/bias/Assign\032dcs_similarity_transformer/body/string_embedding/encoder/layer_0/ffn/conv1/bias/Read/ReadVariableOp:0(\0012bcs_similarity_transformer/body/string_embedding/encoder/layer_0/ffn/conv1/bias/Initializer/zeros:08\001"
        value: "\nRcs_similarity_transformer/body/string_embedding/encoder/layer_0/ffn/conv2/kernel:0\022Wcs_similarity_transformer/body/string_embedding/encoder/layer_0/ffn/conv2/kernel/Assign\032fcs_similarity_transformer/body/string_embedding/encoder/layer_0/ffn/conv2/kernel/Read/ReadVariableOp:0(\0012mcs_similarity_transformer/body/string_embedding/encoder/layer_0/ffn/conv2/kernel/Initializer/random_uniform:08\001"
        value: "\nPcs_similarity_transformer/body/string_embedding/encoder/layer_0/ffn/conv2/bias:0\022Ucs_similarity_transformer/body/string_embedding/encoder/layer_0/ffn/conv2/bias/Assign\032dcs_similarity_transformer/body/string_embedding/encoder/layer_0/ffn/conv2/bias/Read/ReadVariableOp:0(\0012bcs_similarity_transformer/body/string_embedding/encoder/layer_0/ffn/conv2/bias/Initializer/zeros:08\001"
        value: "\n\201\001cs_similarity_transformer/body/string_embedding/encoder/layer_1/self_attention/layer_prepostprocess/layer_norm/layer_norm_scale:0\022\206\001cs_similarity_transformer/body/string_embedding/encoder/layer_1/self_attention/layer_prepostprocess/layer_norm/layer_norm_scale/Assign\032\225\001cs_similarity_transformer/body/string_embedding/encoder/layer_1/self_attention/layer_prepostprocess/layer_norm/layer_norm_scale/Read/ReadVariableOp:0(\0012\222\001cs_similarity_transformer/body/string_embedding/encoder/layer_1/self_attention/layer_prepostprocess/layer_norm/layer_norm_scale/Initializer/ones:08\001"
        value: "\n\200\001cs_similarity_transformer/body/string_embedding/encoder/layer_1/self_attention/layer_prepostprocess/layer_norm/layer_norm_bias:0\022\205\001cs_similarity_transformer/body/string_embedding/encoder/layer_1/self_attention/layer_prepostprocess/layer_norm/layer_norm_bias/Assign\032\224\001cs_similarity_transformer/body/string_embedding/encoder/layer_1/self_attention/layer_prepostprocess/layer_norm/layer_norm_bias/Read/ReadVariableOp:0(\0012\222\001cs_similarity_transformer/body/string_embedding/encoder/layer_1/self_attention/layer_prepostprocess/layer_norm/layer_norm_bias/Initializer/zeros:08\001"
        value: "\nmcs_similarity_transformer/body/string_embedding/encoder/layer_1/self_attention/multihead_attention/q/kernel:0\022rcs_similarity_transformer/body/string_embedding/encoder/layer_1/self_attention/multihead_attention/q/kernel/Assign\032\201\001cs_similarity_transformer/body/string_embedding/encoder/layer_1/self_attention/multihead_attention/q/kernel/Read/ReadVariableOp:0(\0012\210\001cs_similarity_transformer/body/string_embedding/encoder/layer_1/self_attention/multihead_attention/q/kernel/Initializer/random_uniform:08\001"
        value: "\nmcs_similarity_transformer/body/string_embedding/encoder/layer_1/self_attention/multihead_attention/k/kernel:0\022rcs_similarity_transformer/body/string_embedding/encoder/layer_1/self_attention/multihead_attention/k/kernel/Assign\032\201\001cs_similarity_transformer/body/string_embedding/encoder/layer_1/self_attention/multihead_attention/k/kernel/Read/ReadVariableOp:0(\0012\210\001cs_similarity_transformer/body/string_embedding/encoder/layer_1/self_attention/multihead_attention/k/kernel/Initializer/random_uniform:08\001"
        value: "\nmcs_similarity_transformer/body/string_embedding/encoder/layer_1/self_attention/multihead_attention/v/kernel:0\022rcs_similarity_transformer/body/string_embedding/encoder/layer_1/self_attention/multihead_attention/v/kernel/Assign\032\201\001cs_similarity_transformer/body/string_embedding/encoder/layer_1/self_attention/multihead_attention/v/kernel/Read/ReadVariableOp:0(\0012\210\001cs_similarity_transformer/body/string_embedding/encoder/layer_1/self_attention/multihead_attention/v/kernel/Initializer/random_uniform:08\001"
        value: "\n|cs_similarity_transformer/body/string_embedding/encoder/layer_1/self_attention/multihead_attention/output_transform/kernel:0\022\201\001cs_similarity_transformer/body/string_embedding/encoder/layer_1/self_attention/multihead_attention/output_transform/kernel/Assign\032\220\001cs_similarity_transformer/body/string_embedding/encoder/layer_1/self_attention/multihead_attention/output_transform/kernel/Read/ReadVariableOp:0(\0012\227\001cs_similarity_transformer/body/string_embedding/encoder/layer_1/self_attention/multihead_attention/output_transform/kernel/Initializer/random_uniform:08\001"
        value: "\nvcs_similarity_transformer/body/string_embedding/encoder/layer_1/ffn/layer_prepostprocess/layer_norm/layer_norm_scale:0\022{cs_similarity_transformer/body/string_embedding/encoder/layer_1/ffn/layer_prepostprocess/layer_norm/layer_norm_scale/Assign\032\212\001cs_similarity_transformer/body/string_embedding/encoder/layer_1/ffn/layer_prepostprocess/layer_norm/layer_norm_scale/Read/ReadVariableOp:0(\0012\207\001cs_similarity_transformer/body/string_embedding/encoder/layer_1/ffn/layer_prepostprocess/layer_norm/layer_norm_scale/Initializer/ones:08\001"
        value: "\nucs_similarity_transformer/body/string_embedding/encoder/layer_1/ffn/layer_prepostprocess/layer_norm/layer_norm_bias:0\022zcs_similarity_transformer/body/string_embedding/encoder/layer_1/ffn/layer_prepostprocess/layer_norm/layer_norm_bias/Assign\032\211\001cs_similarity_transformer/body/string_embedding/encoder/layer_1/ffn/layer_prepostprocess/layer_norm/layer_norm_bias/Read/ReadVariableOp:0(\0012\207\001cs_similarity_transformer/body/string_embedding/encoder/layer_1/ffn/layer_prepostprocess/layer_norm/layer_norm_bias/Initializer/zeros:08\001"
        value: "\nRcs_similarity_transformer/body/string_embedding/encoder/layer_1/ffn/conv1/kernel:0\022Wcs_similarity_transformer/body/string_embedding/encoder/layer_1/ffn/conv1/kernel/Assign\032fcs_similarity_transformer/body/string_embedding/encoder/layer_1/ffn/conv1/kernel/Read/ReadVariableOp:0(\0012mcs_similarity_transformer/body/string_embedding/encoder/layer_1/ffn/conv1/kernel/Initializer/random_uniform:08\001"
        value: "\nPcs_similarity_transformer/body/string_embedding/encoder/layer_1/ffn/conv1/bias:0\022Ucs_similarity_transformer/body/string_embedding/encoder/layer_1/ffn/conv1/bias/Assign\032dcs_similarity_transformer/body/string_embedding/encoder/layer_1/ffn/conv1/bias/Read/ReadVariableOp:0(\0012bcs_similarity_transformer/body/string_embedding/encoder/layer_1/ffn/conv1/bias/Initializer/zeros:08\001"
        value: "\nRcs_similarity_transformer/body/string_embedding/encoder/layer_1/ffn/conv2/kernel:0\022Wcs_similarity_transformer/body/string_embedding/encoder/layer_1/ffn/conv2/kernel/Assign\032fcs_similarity_transformer/body/string_embedding/encoder/layer_1/ffn/conv2/kernel/Read/ReadVariableOp:0(\0012mcs_similarity_transformer/body/string_embedding/encoder/layer_1/ffn/conv2/kernel/Initializer/random_uniform:08\001"
        value: "\nPcs_similarity_transformer/body/string_embedding/encoder/layer_1/ffn/conv2/bias:0\022Ucs_similarity_transformer/body/string_embedding/encoder/layer_1/ffn/conv2/bias/Assign\032dcs_similarity_transformer/body/string_embedding/encoder/layer_1/ffn/conv2/bias/Read/ReadVariableOp:0(\0012bcs_similarity_transformer/body/string_embedding/encoder/layer_1/ffn/conv2/bias/Initializer/zeros:08\001"
        value: "\njcs_similarity_transformer/body/string_embedding/encoder/layer_prepostprocess/layer_norm/layer_norm_scale:0\022ocs_similarity_transformer/body/string_embedding/encoder/layer_prepostprocess/layer_norm/layer_norm_scale/Assign\032~cs_similarity_transformer/body/string_embedding/encoder/layer_prepostprocess/layer_norm/layer_norm_scale/Read/ReadVariableOp:0(\0012{cs_similarity_transformer/body/string_embedding/encoder/layer_prepostprocess/layer_norm/layer_norm_scale/Initializer/ones:08\001"
        value: "\nics_similarity_transformer/body/string_embedding/encoder/layer_prepostprocess/layer_norm/layer_norm_bias:0\022ncs_similarity_transformer/body/string_embedding/encoder/layer_prepostprocess/layer_norm/layer_norm_bias/Assign\032}cs_similarity_transformer/body/string_embedding/encoder/layer_prepostprocess/layer_norm/layer_norm_bias/Read/ReadVariableOp:0(\0012{cs_similarity_transformer/body/string_embedding/encoder/layer_prepostprocess/layer_norm/layer_norm_bias/Initializer/zeros:08\001"
      }
    }
  }
  collection_def {
    key: "variables"
    value {
      bytes_list {
        value: "\n\rglobal_step:0\022\022global_step/Assign\032\022global_step/read:02\037global_step/Initializer/zeros:0"
        value: "\nEcs_similarity_transformer/symbol_modality_8164_128/shared/weights_0:0\022Jcs_similarity_transformer/symbol_modality_8164_128/shared/weights_0/Assign\032Ycs_similarity_transformer/symbol_modality_8164_128/shared/weights_0/Read/ReadVariableOp:0(\0012_cs_similarity_transformer/symbol_modality_8164_128/shared/weights_0/Initializer/random_normal:08\001"
        value: "\nEcs_similarity_transformer/symbol_modality_8164_128/shared/weights_1:0\022Jcs_similarity_transformer/symbol_modality_8164_128/shared/weights_1/Assign\032Ycs_similarity_transformer/symbol_modality_8164_128/shared/weights_1/Read/ReadVariableOp:0(\0012_cs_similarity_transformer/symbol_modality_8164_128/shared/weights_1/Initializer/random_normal:08\001"
        value: "\nEcs_similarity_transformer/symbol_modality_8164_128/shared/weights_2:0\022Jcs_similarity_transformer/symbol_modality_8164_128/shared/weights_2/Assign\032Ycs_similarity_transformer/symbol_modality_8164_128/shared/weights_2/Read/ReadVariableOp:0(\0012_cs_similarity_transformer/symbol_modality_8164_128/shared/weights_2/Initializer/random_normal:08\001"
        value: "\nEcs_similarity_transformer/symbol_modality_8164_128/shared/weights_3:0\022Jcs_similarity_transformer/symbol_modality_8164_128/shared/weights_3/Assign\032Ycs_similarity_transformer/symbol_modality_8164_128/shared/weights_3/Read/ReadVariableOp:0(\0012_cs_similarity_transformer/symbol_modality_8164_128/shared/weights_3/Initializer/random_normal:08\001"
        value: "\nEcs_similarity_transformer/symbol_modality_8164_128/shared/weights_4:0\022Jcs_similarity_transformer/symbol_modality_8164_128/shared/weights_4/Assign\032Ycs_similarity_transformer/symbol_modality_8164_128/shared/weights_4/Read/ReadVariableOp:0(\0012_cs_similarity_transformer/symbol_modality_8164_128/shared/weights_4/Initializer/random_normal:08\001"
        value: "\nEcs_similarity_transformer/symbol_modality_8164_128/shared/weights_5:0\022Jcs_similarity_transformer/symbol_modality_8164_128/shared/weights_5/Assign\032Ycs_similarity_transformer/symbol_modality_8164_128/shared/weights_5/Read/ReadVariableOp:0(\0012_cs_similarity_transformer/symbol_modality_8164_128/shared/weights_5/Initializer/random_normal:08\001"
        value: "\nEcs_similarity_transformer/symbol_modality_8164_128/shared/weights_6:0\022Jcs_similarity_transformer/symbol_modality_8164_128/shared/weights_6/Assign\032Ycs_similarity_transformer/symbol_modality_8164_128/shared/weights_6/Read/ReadVariableOp:0(\0012_cs_similarity_transformer/symbol_modality_8164_128/shared/weights_6/Initializer/random_normal:08\001"
        value: "\nEcs_similarity_transformer/symbol_modality_8164_128/shared/weights_7:0\022Jcs_similarity_transformer/symbol_modality_8164_128/shared/weights_7/Assign\032Ycs_similarity_transformer/symbol_modality_8164_128/shared/weights_7/Read/ReadVariableOp:0(\0012_cs_similarity_transformer/symbol_modality_8164_128/shared/weights_7/Initializer/random_normal:08\001"
        value: "\nEcs_similarity_transformer/symbol_modality_8164_128/shared/weights_8:0\022Jcs_similarity_transformer/symbol_modality_8164_128/shared/weights_8/Assign\032Ycs_similarity_transformer/symbol_modality_8164_128/shared/weights_8/Read/ReadVariableOp:0(\0012_cs_similarity_transformer/symbol_modality_8164_128/shared/weights_8/Initializer/random_normal:08\001"
        value: "\nEcs_similarity_transformer/symbol_modality_8164_128/shared/weights_9:0\022Jcs_similarity_transformer/symbol_modality_8164_128/shared/weights_9/Assign\032Ycs_similarity_transformer/symbol_modality_8164_128/shared/weights_9/Read/ReadVariableOp:0(\0012_cs_similarity_transformer/symbol_modality_8164_128/shared/weights_9/Initializer/random_normal:08\001"
        value: "\nFcs_similarity_transformer/symbol_modality_8164_128/shared/weights_10:0\022Kcs_similarity_transformer/symbol_modality_8164_128/shared/weights_10/Assign\032Zcs_similarity_transformer/symbol_modality_8164_128/shared/weights_10/Read/ReadVariableOp:0(\0012`cs_similarity_transformer/symbol_modality_8164_128/shared/weights_10/Initializer/random_normal:08\001"
        value: "\nFcs_similarity_transformer/symbol_modality_8164_128/shared/weights_11:0\022Kcs_similarity_transformer/symbol_modality_8164_128/shared/weights_11/Assign\032Zcs_similarity_transformer/symbol_modality_8164_128/shared/weights_11/Read/ReadVariableOp:0(\0012`cs_similarity_transformer/symbol_modality_8164_128/shared/weights_11/Initializer/random_normal:08\001"
        value: "\nFcs_similarity_transformer/symbol_modality_8164_128/shared/weights_12:0\022Kcs_similarity_transformer/symbol_modality_8164_128/shared/weights_12/Assign\032Zcs_similarity_transformer/symbol_modality_8164_128/shared/weights_12/Read/ReadVariableOp:0(\0012`cs_similarity_transformer/symbol_modality_8164_128/shared/weights_12/Initializer/random_normal:08\001"
        value: "\nFcs_similarity_transformer/symbol_modality_8164_128/shared/weights_13:0\022Kcs_similarity_transformer/symbol_modality_8164_128/shared/weights_13/Assign\032Zcs_similarity_transformer/symbol_modality_8164_128/shared/weights_13/Read/ReadVariableOp:0(\0012`cs_similarity_transformer/symbol_modality_8164_128/shared/weights_13/Initializer/random_normal:08\001"
        value: "\nFcs_similarity_transformer/symbol_modality_8164_128/shared/weights_14:0\022Kcs_similarity_transformer/symbol_modality_8164_128/shared/weights_14/Assign\032Zcs_similarity_transformer/symbol_modality_8164_128/shared/weights_14/Read/ReadVariableOp:0(\0012`cs_similarity_transformer/symbol_modality_8164_128/shared/weights_14/Initializer/random_normal:08\001"
        value: "\nFcs_similarity_transformer/symbol_modality_8164_128/shared/weights_15:0\022Kcs_similarity_transformer/symbol_modality_8164_128/shared/weights_15/Assign\032Zcs_similarity_transformer/symbol_modality_8164_128/shared/weights_15/Read/ReadVariableOp:0(\0012`cs_similarity_transformer/symbol_modality_8164_128/shared/weights_15/Initializer/random_normal:08\001"
        value: "\nMcs_similarity_transformer/body/code_embedding/target_space_embedding/kernel:0\022Rcs_similarity_transformer/body/code_embedding/target_space_embedding/kernel/Assign\032acs_similarity_transformer/body/code_embedding/target_space_embedding/kernel/Read/ReadVariableOp:0(\0012hcs_similarity_transformer/body/code_embedding/target_space_embedding/kernel/Initializer/random_uniform:08\001"
        value: "\n\177cs_similarity_transformer/body/code_embedding/encoder/layer_0/self_attention/layer_prepostprocess/layer_norm/layer_norm_scale:0\022\204\001cs_similarity_transformer/body/code_embedding/encoder/layer_0/self_attention/layer_prepostprocess/layer_norm/layer_norm_scale/Assign\032\223\001cs_similarity_transformer/body/code_embedding/encoder/layer_0/self_attention/layer_prepostprocess/layer_norm/layer_norm_scale/Read/ReadVariableOp:0(\0012\220\001cs_similarity_transformer/body/code_embedding/encoder/layer_0/self_attention/layer_prepostprocess/layer_norm/layer_norm_scale/Initializer/ones:08\001"
        value: "\n~cs_similarity_transformer/body/code_embedding/encoder/layer_0/self_attention/layer_prepostprocess/layer_norm/layer_norm_bias:0\022\203\001cs_similarity_transformer/body/code_embedding/encoder/layer_0/self_attention/layer_prepostprocess/layer_norm/layer_norm_bias/Assign\032\222\001cs_similarity_transformer/body/code_embedding/encoder/layer_0/self_attention/layer_prepostprocess/layer_norm/layer_norm_bias/Read/ReadVariableOp:0(\0012\220\001cs_similarity_transformer/body/code_embedding/encoder/layer_0/self_attention/layer_prepostprocess/layer_norm/layer_norm_bias/Initializer/zeros:08\001"
        value: "\nkcs_similarity_transformer/body/code_embedding/encoder/layer_0/self_attention/multihead_attention/q/kernel:0\022pcs_similarity_transformer/body/code_embedding/encoder/layer_0/self_attention/multihead_attention/q/kernel/Assign\032\177cs_similarity_transformer/body/code_embedding/encoder/layer_0/self_attention/multihead_attention/q/kernel/Read/ReadVariableOp:0(\0012\206\001cs_similarity_transformer/body/code_embedding/encoder/layer_0/self_attention/multihead_attention/q/kernel/Initializer/random_uniform:08\001"
        value: "\nkcs_similarity_transformer/body/code_embedding/encoder/layer_0/self_attention/multihead_attention/k/kernel:0\022pcs_similarity_transformer/body/code_embedding/encoder/layer_0/self_attention/multihead_attention/k/kernel/Assign\032\177cs_similarity_transformer/body/code_embedding/encoder/layer_0/self_attention/multihead_attention/k/kernel/Read/ReadVariableOp:0(\0012\206\001cs_similarity_transformer/body/code_embedding/encoder/layer_0/self_attention/multihead_attention/k/kernel/Initializer/random_uniform:08\001"
        value: "\nkcs_similarity_transformer/body/code_embedding/encoder/layer_0/self_attention/multihead_attention/v/kernel:0\022pcs_similarity_transformer/body/code_embedding/encoder/layer_0/self_attention/multihead_attention/v/kernel/Assign\032\177cs_similarity_transformer/body/code_embedding/encoder/layer_0/self_attention/multihead_attention/v/kernel/Read/ReadVariableOp:0(\0012\206\001cs_similarity_transformer/body/code_embedding/encoder/layer_0/self_attention/multihead_attention/v/kernel/Initializer/random_uniform:08\001"
        value: "\nzcs_similarity_transformer/body/code_embedding/encoder/layer_0/self_attention/multihead_attention/output_transform/kernel:0\022\177cs_similarity_transformer/body/code_embedding/encoder/layer_0/self_attention/multihead_attention/output_transform/kernel/Assign\032\216\001cs_similarity_transformer/body/code_embedding/encoder/layer_0/self_attention/multihead_attention/output_transform/kernel/Read/ReadVariableOp:0(\0012\225\001cs_similarity_transformer/body/code_embedding/encoder/layer_0/self_attention/multihead_attention/output_transform/kernel/Initializer/random_uniform:08\001"
        value: "\ntcs_similarity_transformer/body/code_embedding/encoder/layer_0/ffn/layer_prepostprocess/layer_norm/layer_norm_scale:0\022ycs_similarity_transformer/body/code_embedding/encoder/layer_0/ffn/layer_prepostprocess/layer_norm/layer_norm_scale/Assign\032\210\001cs_similarity_transformer/body/code_embedding/encoder/layer_0/ffn/layer_prepostprocess/layer_norm/layer_norm_scale/Read/ReadVariableOp:0(\0012\205\001cs_similarity_transformer/body/code_embedding/encoder/layer_0/ffn/layer_prepostprocess/layer_norm/layer_norm_scale/Initializer/ones:08\001"
        value: "\nscs_similarity_transformer/body/code_embedding/encoder/layer_0/ffn/layer_prepostprocess/layer_norm/layer_norm_bias:0\022xcs_similarity_transformer/body/code_embedding/encoder/layer_0/ffn/layer_prepostprocess/layer_norm/layer_norm_bias/Assign\032\207\001cs_similarity_transformer/body/code_embedding/encoder/layer_0/ffn/layer_prepostprocess/layer_norm/layer_norm_bias/Read/ReadVariableOp:0(\0012\205\001cs_similarity_transformer/body/code_embedding/encoder/layer_0/ffn/layer_prepostprocess/layer_norm/layer_norm_bias/Initializer/zeros:08\001"
        value: "\nPcs_similarity_transformer/body/code_embedding/encoder/layer_0/ffn/conv1/kernel:0\022Ucs_similarity_transformer/body/code_embedding/encoder/layer_0/ffn/conv1/kernel/Assign\032dcs_similarity_transformer/body/code_embedding/encoder/layer_0/ffn/conv1/kernel/Read/ReadVariableOp:0(\0012kcs_similarity_transformer/body/code_embedding/encoder/layer_0/ffn/conv1/kernel/Initializer/random_uniform:08\001"
        value: "\nNcs_similarity_transformer/body/code_embedding/encoder/layer_0/ffn/conv1/bias:0\022Scs_similarity_transformer/body/code_embedding/encoder/layer_0/ffn/conv1/bias/Assign\032bcs_similarity_transformer/body/code_embedding/encoder/layer_0/ffn/conv1/bias/Read/ReadVariableOp:0(\0012`cs_similarity_transformer/body/code_embedding/encoder/layer_0/ffn/conv1/bias/Initializer/zeros:08\001"
        value: "\nPcs_similarity_transformer/body/code_embedding/encoder/layer_0/ffn/conv2/kernel:0\022Ucs_similarity_transformer/body/code_embedding/encoder/layer_0/ffn/conv2/kernel/Assign\032dcs_similarity_transformer/body/code_embedding/encoder/layer_0/ffn/conv2/kernel/Read/ReadVariableOp:0(\0012kcs_similarity_transformer/body/code_embedding/encoder/layer_0/ffn/conv2/kernel/Initializer/random_uniform:08\001"
        value: "\nNcs_similarity_transformer/body/code_embedding/encoder/layer_0/ffn/conv2/bias:0\022Scs_similarity_transformer/body/code_embedding/encoder/layer_0/ffn/conv2/bias/Assign\032bcs_similarity_transformer/body/code_embedding/encoder/layer_0/ffn/conv2/bias/Read/ReadVariableOp:0(\0012`cs_similarity_transformer/body/code_embedding/encoder/layer_0/ffn/conv2/bias/Initializer/zeros:08\001"
        value: "\n\177cs_similarity_transformer/body/code_embedding/encoder/layer_1/self_attention/layer_prepostprocess/layer_norm/layer_norm_scale:0\022\204\001cs_similarity_transformer/body/code_embedding/encoder/layer_1/self_attention/layer_prepostprocess/layer_norm/layer_norm_scale/Assign\032\223\001cs_similarity_transformer/body/code_embedding/encoder/layer_1/self_attention/layer_prepostprocess/layer_norm/layer_norm_scale/Read/ReadVariableOp:0(\0012\220\001cs_similarity_transformer/body/code_embedding/encoder/layer_1/self_attention/layer_prepostprocess/layer_norm/layer_norm_scale/Initializer/ones:08\001"
        value: "\n~cs_similarity_transformer/body/code_embedding/encoder/layer_1/self_attention/layer_prepostprocess/layer_norm/layer_norm_bias:0\022\203\001cs_similarity_transformer/body/code_embedding/encoder/layer_1/self_attention/layer_prepostprocess/layer_norm/layer_norm_bias/Assign\032\222\001cs_similarity_transformer/body/code_embedding/encoder/layer_1/self_attention/layer_prepostprocess/layer_norm/layer_norm_bias/Read/ReadVariableOp:0(\0012\220\001cs_similarity_transformer/body/code_embedding/encoder/layer_1/self_attention/layer_prepostprocess/layer_norm/layer_norm_bias/Initializer/zeros:08\001"
        value: "\nkcs_similarity_transformer/body/code_embedding/encoder/layer_1/self_attention/multihead_attention/q/kernel:0\022pcs_similarity_transformer/body/code_embedding/encoder/layer_1/self_attention/multihead_attention/q/kernel/Assign\032\177cs_similarity_transformer/body/code_embedding/encoder/layer_1/self_attention/multihead_attention/q/kernel/Read/ReadVariableOp:0(\0012\206\001cs_similarity_transformer/body/code_embedding/encoder/layer_1/self_attention/multihead_attention/q/kernel/Initializer/random_uniform:08\001"
        value: "\nkcs_similarity_transformer/body/code_embedding/encoder/layer_1/self_attention/multihead_attention/k/kernel:0\022pcs_similarity_transformer/body/code_embedding/encoder/layer_1/self_attention/multihead_attention/k/kernel/Assign\032\177cs_similarity_transformer/body/code_embedding/encoder/layer_1/self_attention/multihead_attention/k/kernel/Read/ReadVariableOp:0(\0012\206\001cs_similarity_transformer/body/code_embedding/encoder/layer_1/self_attention/multihead_attention/k/kernel/Initializer/random_uniform:08\001"
        value: "\nkcs_similarity_transformer/body/code_embedding/encoder/layer_1/self_attention/multihead_attention/v/kernel:0\022pcs_similarity_transformer/body/code_embedding/encoder/layer_1/self_attention/multihead_attention/v/kernel/Assign\032\177cs_similarity_transformer/body/code_embedding/encoder/layer_1/self_attention/multihead_attention/v/kernel/Read/ReadVariableOp:0(\0012\206\001cs_similarity_transformer/body/code_embedding/encoder/layer_1/self_attention/multihead_attention/v/kernel/Initializer/random_uniform:08\001"
        value: "\nzcs_similarity_transformer/body/code_embedding/encoder/layer_1/self_attention/multihead_attention/output_transform/kernel:0\022\177cs_similarity_transformer/body/code_embedding/encoder/layer_1/self_attention/multihead_attention/output_transform/kernel/Assign\032\216\001cs_similarity_transformer/body/code_embedding/encoder/layer_1/self_attention/multihead_attention/output_transform/kernel/Read/ReadVariableOp:0(\0012\225\001cs_similarity_transformer/body/code_embedding/encoder/layer_1/self_attention/multihead_attention/output_transform/kernel/Initializer/random_uniform:08\001"
        value: "\ntcs_similarity_transformer/body/code_embedding/encoder/layer_1/ffn/layer_prepostprocess/layer_norm/layer_norm_scale:0\022ycs_similarity_transformer/body/code_embedding/encoder/layer_1/ffn/layer_prepostprocess/layer_norm/layer_norm_scale/Assign\032\210\001cs_similarity_transformer/body/code_embedding/encoder/layer_1/ffn/layer_prepostprocess/layer_norm/layer_norm_scale/Read/ReadVariableOp:0(\0012\205\001cs_similarity_transformer/body/code_embedding/encoder/layer_1/ffn/layer_prepostprocess/layer_norm/layer_norm_scale/Initializer/ones:08\001"
        value: "\nscs_similarity_transformer/body/code_embedding/encoder/layer_1/ffn/layer_prepostprocess/layer_norm/layer_norm_bias:0\022xcs_similarity_transformer/body/code_embedding/encoder/layer_1/ffn/layer_prepostprocess/layer_norm/layer_norm_bias/Assign\032\207\001cs_similarity_transformer/body/code_embedding/encoder/layer_1/ffn/layer_prepostprocess/layer_norm/layer_norm_bias/Read/ReadVariableOp:0(\0012\205\001cs_similarity_transformer/body/code_embedding/encoder/layer_1/ffn/layer_prepostprocess/layer_norm/layer_norm_bias/Initializer/zeros:08\001"
        value: "\nPcs_similarity_transformer/body/code_embedding/encoder/layer_1/ffn/conv1/kernel:0\022Ucs_similarity_transformer/body/code_embedding/encoder/layer_1/ffn/conv1/kernel/Assign\032dcs_similarity_transformer/body/code_embedding/encoder/layer_1/ffn/conv1/kernel/Read/ReadVariableOp:0(\0012kcs_similarity_transformer/body/code_embedding/encoder/layer_1/ffn/conv1/kernel/Initializer/random_uniform:08\001"
        value: "\nNcs_similarity_transformer/body/code_embedding/encoder/layer_1/ffn/conv1/bias:0\022Scs_similarity_transformer/body/code_embedding/encoder/layer_1/ffn/conv1/bias/Assign\032bcs_similarity_transformer/body/code_embedding/encoder/layer_1/ffn/conv1/bias/Read/ReadVariableOp:0(\0012`cs_similarity_transformer/body/code_embedding/encoder/layer_1/ffn/conv1/bias/Initializer/zeros:08\001"
        value: "\nPcs_similarity_transformer/body/code_embedding/encoder/layer_1/ffn/conv2/kernel:0\022Ucs_similarity_transformer/body/code_embedding/encoder/layer_1/ffn/conv2/kernel/Assign\032dcs_similarity_transformer/body/code_embedding/encoder/layer_1/ffn/conv2/kernel/Read/ReadVariableOp:0(\0012kcs_similarity_transformer/body/code_embedding/encoder/layer_1/ffn/conv2/kernel/Initializer/random_uniform:08\001"
        value: "\nNcs_similarity_transformer/body/code_embedding/encoder/layer_1/ffn/conv2/bias:0\022Scs_similarity_transformer/body/code_embedding/encoder/layer_1/ffn/conv2/bias/Assign\032bcs_similarity_transformer/body/code_embedding/encoder/layer_1/ffn/conv2/bias/Read/ReadVariableOp:0(\0012`cs_similarity_transformer/body/code_embedding/encoder/layer_1/ffn/conv2/bias/Initializer/zeros:08\001"
        value: "\nhcs_similarity_transformer/body/code_embedding/encoder/layer_prepostprocess/layer_norm/layer_norm_scale:0\022mcs_similarity_transformer/body/code_embedding/encoder/layer_prepostprocess/layer_norm/layer_norm_scale/Assign\032|cs_similarity_transformer/body/code_embedding/encoder/layer_prepostprocess/layer_norm/layer_norm_scale/Read/ReadVariableOp:0(\0012ycs_similarity_transformer/body/code_embedding/encoder/layer_prepostprocess/layer_norm/layer_norm_scale/Initializer/ones:08\001"
        value: "\ngcs_similarity_transformer/body/code_embedding/encoder/layer_prepostprocess/layer_norm/layer_norm_bias:0\022lcs_similarity_transformer/body/code_embedding/encoder/layer_prepostprocess/layer_norm/layer_norm_bias/Assign\032{cs_similarity_transformer/body/code_embedding/encoder/layer_prepostprocess/layer_norm/layer_norm_bias/Read/ReadVariableOp:0(\0012ycs_similarity_transformer/body/code_embedding/encoder/layer_prepostprocess/layer_norm/layer_norm_bias/Initializer/zeros:08\001"
        value: "\nOcs_similarity_transformer/body/string_embedding/target_space_embedding/kernel:0\022Tcs_similarity_transformer/body/string_embedding/target_space_embedding/kernel/Assign\032ccs_similarity_transformer/body/string_embedding/target_space_embedding/kernel/Read/ReadVariableOp:0(\0012jcs_similarity_transformer/body/string_embedding/target_space_embedding/kernel/Initializer/random_uniform:08\001"
        value: "\n\201\001cs_similarity_transformer/body/string_embedding/encoder/layer_0/self_attention/layer_prepostprocess/layer_norm/layer_norm_scale:0\022\206\001cs_similarity_transformer/body/string_embedding/encoder/layer_0/self_attention/layer_prepostprocess/layer_norm/layer_norm_scale/Assign\032\225\001cs_similarity_transformer/body/string_embedding/encoder/layer_0/self_attention/layer_prepostprocess/layer_norm/layer_norm_scale/Read/ReadVariableOp:0(\0012\222\001cs_similarity_transformer/body/string_embedding/encoder/layer_0/self_attention/layer_prepostprocess/layer_norm/layer_norm_scale/Initializer/ones:08\001"
        value: "\n\200\001cs_similarity_transformer/body/string_embedding/encoder/layer_0/self_attention/layer_prepostprocess/layer_norm/layer_norm_bias:0\022\205\001cs_similarity_transformer/body/string_embedding/encoder/layer_0/self_attention/layer_prepostprocess/layer_norm/layer_norm_bias/Assign\032\224\001cs_similarity_transformer/body/string_embedding/encoder/layer_0/self_attention/layer_prepostprocess/layer_norm/layer_norm_bias/Read/ReadVariableOp:0(\0012\222\001cs_similarity_transformer/body/string_embedding/encoder/layer_0/self_attention/layer_prepostprocess/layer_norm/layer_norm_bias/Initializer/zeros:08\001"
        value: "\nmcs_similarity_transformer/body/string_embedding/encoder/layer_0/self_attention/multihead_attention/q/kernel:0\022rcs_similarity_transformer/body/string_embedding/encoder/layer_0/self_attention/multihead_attention/q/kernel/Assign\032\201\001cs_similarity_transformer/body/string_embedding/encoder/layer_0/self_attention/multihead_attention/q/kernel/Read/ReadVariableOp:0(\0012\210\001cs_similarity_transformer/body/string_embedding/encoder/layer_0/self_attention/multihead_attention/q/kernel/Initializer/random_uniform:08\001"
        value: "\nmcs_similarity_transformer/body/string_embedding/encoder/layer_0/self_attention/multihead_attention/k/kernel:0\022rcs_similarity_transformer/body/string_embedding/encoder/layer_0/self_attention/multihead_attention/k/kernel/Assign\032\201\001cs_similarity_transformer/body/string_embedding/encoder/layer_0/self_attention/multihead_attention/k/kernel/Read/ReadVariableOp:0(\0012\210\001cs_similarity_transformer/body/string_embedding/encoder/layer_0/self_attention/multihead_attention/k/kernel/Initializer/random_uniform:08\001"
        value: "\nmcs_similarity_transformer/body/string_embedding/encoder/layer_0/self_attention/multihead_attention/v/kernel:0\022rcs_similarity_transformer/body/string_embedding/encoder/layer_0/self_attention/multihead_attention/v/kernel/Assign\032\201\001cs_similarity_transformer/body/string_embedding/encoder/layer_0/self_attention/multihead_attention/v/kernel/Read/ReadVariableOp:0(\0012\210\001cs_similarity_transformer/body/string_embedding/encoder/layer_0/self_attention/multihead_attention/v/kernel/Initializer/random_uniform:08\001"
        value: "\n|cs_similarity_transformer/body/string_embedding/encoder/layer_0/self_attention/multihead_attention/output_transform/kernel:0\022\201\001cs_similarity_transformer/body/string_embedding/encoder/layer_0/self_attention/multihead_attention/output_transform/kernel/Assign\032\220\001cs_similarity_transformer/body/string_embedding/encoder/layer_0/self_attention/multihead_attention/output_transform/kernel/Read/ReadVariableOp:0(\0012\227\001cs_similarity_transformer/body/string_embedding/encoder/layer_0/self_attention/multihead_attention/output_transform/kernel/Initializer/random_uniform:08\001"
        value: "\nvcs_similarity_transformer/body/string_embedding/encoder/layer_0/ffn/layer_prepostprocess/layer_norm/layer_norm_scale:0\022{cs_similarity_transformer/body/string_embedding/encoder/layer_0/ffn/layer_prepostprocess/layer_norm/layer_norm_scale/Assign\032\212\001cs_similarity_transformer/body/string_embedding/encoder/layer_0/ffn/layer_prepostprocess/layer_norm/layer_norm_scale/Read/ReadVariableOp:0(\0012\207\001cs_similarity_transformer/body/string_embedding/encoder/layer_0/ffn/layer_prepostprocess/layer_norm/layer_norm_scale/Initializer/ones:08\001"
        value: "\nucs_similarity_transformer/body/string_embedding/encoder/layer_0/ffn/layer_prepostprocess/layer_norm/layer_norm_bias:0\022zcs_similarity_transformer/body/string_embedding/encoder/layer_0/ffn/layer_prepostprocess/layer_norm/layer_norm_bias/Assign\032\211\001cs_similarity_transformer/body/string_embedding/encoder/layer_0/ffn/layer_prepostprocess/layer_norm/layer_norm_bias/Read/ReadVariableOp:0(\0012\207\001cs_similarity_transformer/body/string_embedding/encoder/layer_0/ffn/layer_prepostprocess/layer_norm/layer_norm_bias/Initializer/zeros:08\001"
        value: "\nRcs_similarity_transformer/body/string_embedding/encoder/layer_0/ffn/conv1/kernel:0\022Wcs_similarity_transformer/body/string_embedding/encoder/layer_0/ffn/conv1/kernel/Assign\032fcs_similarity_transformer/body/string_embedding/encoder/layer_0/ffn/conv1/kernel/Read/ReadVariableOp:0(\0012mcs_similarity_transformer/body/string_embedding/encoder/layer_0/ffn/conv1/kernel/Initializer/random_uniform:08\001"
        value: "\nPcs_similarity_transformer/body/string_embedding/encoder/layer_0/ffn/conv1/bias:0\022Ucs_similarity_transformer/body/string_embedding/encoder/layer_0/ffn/conv1/bias/Assign\032dcs_similarity_transformer/body/string_embedding/encoder/layer_0/ffn/conv1/bias/Read/ReadVariableOp:0(\0012bcs_similarity_transformer/body/string_embedding/encoder/layer_0/ffn/conv1/bias/Initializer/zeros:08\001"
        value: "\nRcs_similarity_transformer/body/string_embedding/encoder/layer_0/ffn/conv2/kernel:0\022Wcs_similarity_transformer/body/string_embedding/encoder/layer_0/ffn/conv2/kernel/Assign\032fcs_similarity_transformer/body/string_embedding/encoder/layer_0/ffn/conv2/kernel/Read/ReadVariableOp:0(\0012mcs_similarity_transformer/body/string_embedding/encoder/layer_0/ffn/conv2/kernel/Initializer/random_uniform:08\001"
        value: "\nPcs_similarity_transformer/body/string_embedding/encoder/layer_0/ffn/conv2/bias:0\022Ucs_similarity_transformer/body/string_embedding/encoder/layer_0/ffn/conv2/bias/Assign\032dcs_similarity_transformer/body/string_embedding/encoder/layer_0/ffn/conv2/bias/Read/ReadVariableOp:0(\0012bcs_similarity_transformer/body/string_embedding/encoder/layer_0/ffn/conv2/bias/Initializer/zeros:08\001"
        value: "\n\201\001cs_similarity_transformer/body/string_embedding/encoder/layer_1/self_attention/layer_prepostprocess/layer_norm/layer_norm_scale:0\022\206\001cs_similarity_transformer/body/string_embedding/encoder/layer_1/self_attention/layer_prepostprocess/layer_norm/layer_norm_scale/Assign\032\225\001cs_similarity_transformer/body/string_embedding/encoder/layer_1/self_attention/layer_prepostprocess/layer_norm/layer_norm_scale/Read/ReadVariableOp:0(\0012\222\001cs_similarity_transformer/body/string_embedding/encoder/layer_1/self_attention/layer_prepostprocess/layer_norm/layer_norm_scale/Initializer/ones:08\001"
        value: "\n\200\001cs_similarity_transformer/body/string_embedding/encoder/layer_1/self_attention/layer_prepostprocess/layer_norm/layer_norm_bias:0\022\205\001cs_similarity_transformer/body/string_embedding/encoder/layer_1/self_attention/layer_prepostprocess/layer_norm/layer_norm_bias/Assign\032\224\001cs_similarity_transformer/body/string_embedding/encoder/layer_1/self_attention/layer_prepostprocess/layer_norm/layer_norm_bias/Read/ReadVariableOp:0(\0012\222\001cs_similarity_transformer/body/string_embedding/encoder/layer_1/self_attention/layer_prepostprocess/layer_norm/layer_norm_bias/Initializer/zeros:08\001"
        value: "\nmcs_similarity_transformer/body/string_embedding/encoder/layer_1/self_attention/multihead_attention/q/kernel:0\022rcs_similarity_transformer/body/string_embedding/encoder/layer_1/self_attention/multihead_attention/q/kernel/Assign\032\201\001cs_similarity_transformer/body/string_embedding/encoder/layer_1/self_attention/multihead_attention/q/kernel/Read/ReadVariableOp:0(\0012\210\001cs_similarity_transformer/body/string_embedding/encoder/layer_1/self_attention/multihead_attention/q/kernel/Initializer/random_uniform:08\001"
        value: "\nmcs_similarity_transformer/body/string_embedding/encoder/layer_1/self_attention/multihead_attention/k/kernel:0\022rcs_similarity_transformer/body/string_embedding/encoder/layer_1/self_attention/multihead_attention/k/kernel/Assign\032\201\001cs_similarity_transformer/body/string_embedding/encoder/layer_1/self_attention/multihead_attention/k/kernel/Read/ReadVariableOp:0(\0012\210\001cs_similarity_transformer/body/string_embedding/encoder/layer_1/self_attention/multihead_attention/k/kernel/Initializer/random_uniform:08\001"
        value: "\nmcs_similarity_transformer/body/string_embedding/encoder/layer_1/self_attention/multihead_attention/v/kernel:0\022rcs_similarity_transformer/body/string_embedding/encoder/layer_1/self_attention/multihead_attention/v/kernel/Assign\032\201\001cs_similarity_transformer/body/string_embedding/encoder/layer_1/self_attention/multihead_attention/v/kernel/Read/ReadVariableOp:0(\0012\210\001cs_similarity_transformer/body/string_embedding/encoder/layer_1/self_attention/multihead_attention/v/kernel/Initializer/random_uniform:08\001"
        value: "\n|cs_similarity_transformer/body/string_embedding/encoder/layer_1/self_attention/multihead_attention/output_transform/kernel:0\022\201\001cs_similarity_transformer/body/string_embedding/encoder/layer_1/self_attention/multihead_attention/output_transform/kernel/Assign\032\220\001cs_similarity_transformer/body/string_embedding/encoder/layer_1/self_attention/multihead_attention/output_transform/kernel/Read/ReadVariableOp:0(\0012\227\001cs_similarity_transformer/body/string_embedding/encoder/layer_1/self_attention/multihead_attention/output_transform/kernel/Initializer/random_uniform:08\001"
        value: "\nvcs_similarity_transformer/body/string_embedding/encoder/layer_1/ffn/layer_prepostprocess/layer_norm/layer_norm_scale:0\022{cs_similarity_transformer/body/string_embedding/encoder/layer_1/ffn/layer_prepostprocess/layer_norm/layer_norm_scale/Assign\032\212\001cs_similarity_transformer/body/string_embedding/encoder/layer_1/ffn/layer_prepostprocess/layer_norm/layer_norm_scale/Read/ReadVariableOp:0(\0012\207\001cs_similarity_transformer/body/string_embedding/encoder/layer_1/ffn/layer_prepostprocess/layer_norm/layer_norm_scale/Initializer/ones:08\001"
        value: "\nucs_similarity_transformer/body/string_embedding/encoder/layer_1/ffn/layer_prepostprocess/layer_norm/layer_norm_bias:0\022zcs_similarity_transformer/body/string_embedding/encoder/layer_1/ffn/layer_prepostprocess/layer_norm/layer_norm_bias/Assign\032\211\001cs_similarity_transformer/body/string_embedding/encoder/layer_1/ffn/layer_prepostprocess/layer_norm/layer_norm_bias/Read/ReadVariableOp:0(\0012\207\001cs_similarity_transformer/body/string_embedding/encoder/layer_1/ffn/layer_prepostprocess/layer_norm/layer_norm_bias/Initializer/zeros:08\001"
        value: "\nRcs_similarity_transformer/body/string_embedding/encoder/layer_1/ffn/conv1/kernel:0\022Wcs_similarity_transformer/body/string_embedding/encoder/layer_1/ffn/conv1/kernel/Assign\032fcs_similarity_transformer/body/string_embedding/encoder/layer_1/ffn/conv1/kernel/Read/ReadVariableOp:0(\0012mcs_similarity_transformer/body/string_embedding/encoder/layer_1/ffn/conv1/kernel/Initializer/random_uniform:08\001"
        value: "\nPcs_similarity_transformer/body/string_embedding/encoder/layer_1/ffn/conv1/bias:0\022Ucs_similarity_transformer/body/string_embedding/encoder/layer_1/ffn/conv1/bias/Assign\032dcs_similarity_transformer/body/string_embedding/encoder/layer_1/ffn/conv1/bias/Read/ReadVariableOp:0(\0012bcs_similarity_transformer/body/string_embedding/encoder/layer_1/ffn/conv1/bias/Initializer/zeros:08\001"
        value: "\nRcs_similarity_transformer/body/string_embedding/encoder/layer_1/ffn/conv2/kernel:0\022Wcs_similarity_transformer/body/string_embedding/encoder/layer_1/ffn/conv2/kernel/Assign\032fcs_similarity_transformer/body/string_embedding/encoder/layer_1/ffn/conv2/kernel/Read/ReadVariableOp:0(\0012mcs_similarity_transformer/body/string_embedding/encoder/layer_1/ffn/conv2/kernel/Initializer/random_uniform:08\001"
        value: "\nPcs_similarity_transformer/body/string_embedding/encoder/layer_1/ffn/conv2/bias:0\022Ucs_similarity_transformer/body/string_embedding/encoder/layer_1/ffn/conv2/bias/Assign\032dcs_similarity_transformer/body/string_embedding/encoder/layer_1/ffn/conv2/bias/Read/ReadVariableOp:0(\0012bcs_similarity_transformer/body/string_embedding/encoder/layer_1/ffn/conv2/bias/Initializer/zeros:08\001"
        value: "\njcs_similarity_transformer/body/string_embedding/encoder/layer_prepostprocess/layer_norm/layer_norm_scale:0\022ocs_similarity_transformer/body/string_embedding/encoder/layer_prepostprocess/layer_norm/layer_norm_scale/Assign\032~cs_similarity_transformer/body/string_embedding/encoder/layer_prepostprocess/layer_norm/layer_norm_scale/Read/ReadVariableOp:0(\0012{cs_similarity_transformer/body/string_embedding/encoder/layer_prepostprocess/layer_norm/layer_norm_scale/Initializer/ones:08\001"
        value: "\nics_similarity_transformer/body/string_embedding/encoder/layer_prepostprocess/layer_norm/layer_norm_bias:0\022ncs_similarity_transformer/body/string_embedding/encoder/layer_prepostprocess/layer_norm/layer_norm_bias/Assign\032}cs_similarity_transformer/body/string_embedding/encoder/layer_prepostprocess/layer_norm/layer_norm_bias/Read/ReadVariableOp:0(\0012{cs_similarity_transformer/body/string_embedding/encoder/layer_prepostprocess/layer_norm/layer_norm_bias/Initializer/zeros:08\001"
      }
    }
  }
  signature_def {
    key: "serving_default"
    value {
      inputs {
        key: "input"
        value {
          name: "serialized_example:0"
          dtype: DT_STRING
          tensor_shape {
            dim {
              size: -1
            }
          }
        }
      }
      outputs {
        key: "batch_prediction_key"
        value {
          name: "DatasetToSingleElement:0"
          dtype: DT_INT32
          tensor_shape {
            dim {
              size: -1
            }
            dim {
              size: 1
            }
          }
        }
      }
      outputs {
        key: "outputs"
        value {
          name: "cs_similarity_transformer/concat:0"
          dtype: DT_FLOAT
          tensor_shape {
            dim {
              size: -1
            }
            dim {
              size: 128
            }
          }
        }
      }
      method_name: "tensorflow/serving/predict"
    }
  }
}
